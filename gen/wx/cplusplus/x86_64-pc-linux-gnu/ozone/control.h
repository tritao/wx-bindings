// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "CppSharp.h"
#include "FastDelegates.h"
#include <wx/control.h>
#include "ozone/dc.h"
#include "ozone/gdicmn.h"
#include "ozone/window.h"

namespace Ozone
{
    class CommandEvent;
    class Control;
    class Event;
    class Object;
    class Point;
    class UpdateUIEvent;
    enum class Border : unsigned int;
}

namespace Ozone
{
    class Control : public ::Ozone::Window
    {
    public:

        void* __ExternalInstance;

        Control(::wxControl* instance, bool ownNativeInstance = false);

        Control();

        ~Control();

        fastdelegate::FastDelegate<void (::Ozone::ClipboardTextEvent&)> OnTextCopy;

        fastdelegate::FastDelegate<void (::Ozone::ClipboardTextEvent&)> OnTextCut;

        fastdelegate::FastDelegate<void (::Ozone::ClipboardTextEvent&)> OnTextPaste;

        virtual ::Ozone::VisualAttributes GetDefaultAttributes() const override;

        int GetAlignment() const;

        virtual void SetLabel(const char* label) override;

        virtual const char* GetLabel() const override;

        virtual void SetLabelText(const char* text);

        virtual const char* GetLabelText() const;

        bool SetLabelMarkup(const char* markup);

        virtual bool ShouldInheritColours() const override;

        virtual void Command(::Ozone::CommandEvent& event);

        virtual void DoUpdateWindowUI(::Ozone::UpdateUIEvent& event) override;

        ::Ozone::Size GetSizeFromTextSize(int xlen, int ylen) const;

        ::Ozone::Size GetSizeFromTextSize(const ::Ozone::Size& tsize) const;

        ::Ozone::Size GetSizeFromText(const char* text) const;

        virtual int HandleEvent(::wxEvent& event) override;

        static const char* GetLabelText(const char* label);

        static const char* RemoveMnemonics(const char* str);

        static const char* EscapeMnemonics(const char* str);

        static const char* Ellipsize(const char* label, const ::Ozone::DC& dc, ::Ozone::EllipsizeMode mode, int maxWidth, int flags);

        static int FindAccelIndex(const char* label, const char* labelOnly);

        static ::Ozone::VisualAttributes GetCompositeControlsDefaultAttributes(::Ozone::WindowVariant variant);
    };

    // char[] ControlNameStr
}
