// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "CppSharp.h"
#include "FastDelegates.h"
#include <wx/filedlg.h>
#include "ozone/gdicmn.h"
#include "ozone/window.h"

namespace Ozone
{
    class FileDialog;
    class Object;
    class Point;
    enum class FD : unsigned int;
}

namespace Ozone
{
    enum class FD : unsigned int
    {
        OPEN = 0x1,
        SAVE = 0x2,
        OVERWRITE_PROMPT = 0x4,
        NO_FOLLOW = 0x8,
        FILE_MUST_EXIST = 0x10,
        CHANGE_DIR = 0x80,
        PREVIEW = 0x100,
        MULTIPLE = 0x200,
        SHOW_HIDDEN = 0x400
    };

    class FileDialog
    {
    public:

        ::wxFileDialog* __Instance;

        void* __ExternalInstance;

        FileDialog(::wxFileDialog* instance, bool ownNativeInstance = false);

        FileDialog();

        FileDialog(::Ozone::Window* parent, const char* message, const char* defaultDir, const char* defaultFile, const char* wildCard, long style, const ::Ozone::Point& pos, const ::Ozone::Size& sz, const char* name);

        ~FileDialog();

        bool Create(::Ozone::Window* parent, const char* message, const char* defaultDir, const char* defaultFile, const char* wildCard, long style, const ::Ozone::Point& pos, const ::Ozone::Size& sz, const char* name);

        virtual const char* GetPath() const;

        virtual const char* GetFilename() const;

        virtual int GetFilterIndex() const;

        virtual void SetMessage(const char* message);

        virtual void SetPath(const char* path);

        virtual void SetDirectory(const char* dir);

        virtual void SetFilename(const char* name);

        virtual void SetWildcard(const char* wildCard);

        virtual void SetFilterIndex(int filterIndex);

        virtual int ShowModal();

        virtual bool SupportsExtraControl() const;

        bool HasFdFlag(int flag) const;

        virtual const char* GetMessage() const;

        virtual const char* GetDirectory() const;

        virtual const char* GetWildcard() const;

        virtual const char* GetCurrentlySelectedFilename() const;

        virtual int GetCurrentlySelectedFilterIndex() const;

        ::Ozone::Window* GetExtraControl() const;

        void SetFilterIndexFromExt(const char* ext);

        static const char* AppendExtension(const char* filePath, const char* extensionList);

    protected:

        bool __OwnsNativeInstance;
    };

    const char* FileSelector(const char* message, const char* default_path, const char* default_filename, const char* default_extension, const char* wildcard, int flags, ::Ozone::Window* parent, int x, int y);
    const char* LoadFileSelector(const char* what, const char* extension, const char* default_name, ::Ozone::Window* parent);
    const char* SaveFileSelector(const char* what, const char* extension, const char* default_name, ::Ozone::Window* parent);
}
