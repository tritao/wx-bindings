// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "CppSharp.h"
#include "FastDelegates.h"
#include <wx/brush.h>
#include "wxsharp/colour.h"
#include "wxsharp/gdicmn.h"

namespace wxSharp
{
    class Brush;
    class BrushList;
    class Object;
    enum class BrushStyle;
}

namespace wxSharp
{
    enum class BrushStyle
    {
        INVALID = -1,
        SOLID = 100,
        TRANSPARENT = 106,
        STIPPLE_MASK_OPAQUE = 107,
        STIPPLE_MASK = 108,
        STIPPLE = 110,
        BDIAGONAL_HATCH = 111,
        CROSSDIAG_HATCH = 112,
        FDIAGONAL_HATCH = 113,
        CROSS_HATCH = 114,
        HORIZONTAL_HATCH = 115,
        VERTICAL_HATCH = 116,
        FIRST_HATCH = 111,
        LAST_HATCH = 116
    };

    class Brush
    {
    public:

        ::wxBrush* __Instance;

        Brush(::wxBrush* instance, bool ownNativeInstance = false);

        Brush();

        Brush(const ::wxSharp::Color& colour, ::wxSharp::BrushStyle style);

        Brush(const ::wxSharp::Brush& _0);

        ~Brush();

        bool operator==(const ::wxSharp::Brush& brush) const;

        bool operator!=(const ::wxSharp::Brush& brush) const;

        virtual ::wxSharp::BrushStyle GetStyle() const;

        virtual ::wxSharp::Color GetColour() const;

        virtual void SetColour(const ::wxSharp::Color& col);

        virtual void SetColour(unsigned char r, unsigned char g, unsigned char b);

        virtual void SetStyle(::wxSharp::BrushStyle style);

        virtual bool IsHatch() const;

        bool IsTransparent() const;

        bool IsNonTransparent() const;

    protected:
        bool __ownsNativeInstance;
    };

    class BrushList : public wxSharp::GDIObjListBase
    {
    public:

        BrushList(::wxBrushList* instance, bool ownNativeInstance = false);

        BrushList(const ::wxSharp::BrushList& _0);

        BrushList();

        ~BrushList();

        ::wxSharp::Brush* FindOrCreateBrush(const ::wxSharp::Color& colour, ::wxSharp::BrushStyle style);
    };
}
