// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "wxsharp/graphics.h"
#include "wxsharp/dc.h"
#include "wxsharp/dcclient.h"
#include "wxsharp/gdicmn.h"
#include "wxsharp/graphics.h"
#include "wxsharp/object.h"
#include "wxsharp/pen.h"
#include "wxsharp/window.h"

#include <wx/eventfilter.h>

wxSharp::GraphicsObject::GraphicsObject(::wxGraphicsObject* instance, bool ownNativeInstance)
    : wxSharp::Object((::wxObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsObject::~GraphicsObject()
{
}

wxSharp::GraphicsObject::GraphicsObject()
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsObject();
}

wxSharp::GraphicsObject::GraphicsObject(::wxSharp::GraphicsRenderer* renderer)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = renderer ? (::wxGraphicsRenderer*)renderer->__Instance : nullptr;
    __Instance = new ::wxGraphicsObject(__arg0);
}

bool wxSharp::GraphicsObject::IsNull() const
{
    bool __ret = ((::wxGraphicsObject*)__Instance)->IsNull();
    return __ret;
}

::wxSharp::GraphicsRenderer* wxSharp::GraphicsObject::GetRenderer() const
{
    ::wxGraphicsRenderer* __ret = ((::wxGraphicsObject*)__Instance)->GetRenderer();
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsRenderer((::wxGraphicsRenderer*)__ret);
}

wxSharp::GraphicsObject::GraphicsObject(const ::wxSharp::GraphicsObject& _0)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsObject*)_0.__Instance;
    __Instance = new ::wxGraphicsObject(__arg0);
}

wxSharp::GraphicsPen::GraphicsPen(::wxGraphicsPen* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsPen::~GraphicsPen()
{
}

wxSharp::GraphicsPen::GraphicsPen()
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsPen();
}

wxSharp::GraphicsPen::GraphicsPen(const ::wxSharp::GraphicsPen& _0)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsPen*)_0.__Instance;
    __Instance = new ::wxGraphicsPen(__arg0);
}

wxSharp::GraphicsBrush::GraphicsBrush(::wxGraphicsBrush* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsBrush::~GraphicsBrush()
{
}

wxSharp::GraphicsBrush::GraphicsBrush()
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsBrush();
}

wxSharp::GraphicsBrush::GraphicsBrush(const ::wxSharp::GraphicsBrush& _0)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsBrush*)_0.__Instance;
    __Instance = new ::wxGraphicsBrush(__arg0);
}

wxSharp::GraphicsFont::GraphicsFont(::wxGraphicsFont* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsFont::~GraphicsFont()
{
}

wxSharp::GraphicsFont::GraphicsFont()
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsFont();
}

wxSharp::GraphicsFont::GraphicsFont(const ::wxSharp::GraphicsFont& _0)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsFont*)_0.__Instance;
    __Instance = new ::wxGraphicsFont(__arg0);
}

wxSharp::GraphicsBitmap::GraphicsBitmap(::wxGraphicsBitmap* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsBitmap::~GraphicsBitmap()
{
}

wxSharp::GraphicsBitmap::GraphicsBitmap()
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsBitmap();
}

void* wxSharp::GraphicsBitmap::GetNativeBitmap() const
{
    void* __ret = ((::wxGraphicsBitmap*)__Instance)->GetNativeBitmap();
    return __ret;
}

wxSharp::GraphicsBitmap::GraphicsBitmap(const ::wxSharp::GraphicsBitmap& _0)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsBitmap*)_0.__Instance;
    __Instance = new ::wxGraphicsBitmap(__arg0);
}

wxSharp::GraphicsMatrix::GraphicsMatrix(::wxGraphicsMatrix* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsMatrix::~GraphicsMatrix()
{
}

wxSharp::GraphicsMatrix::GraphicsMatrix()
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsMatrix();
}

void wxSharp::GraphicsMatrix::Concat(const ::wxSharp::GraphicsMatrix& t)
{
    auto &__arg0 = *(::wxGraphicsMatrix*)t.__Instance;
    ((::wxGraphicsMatrix*)__Instance)->Concat(__arg0);
}

void wxSharp::GraphicsMatrix::Set(double a, double b, double c, double d, double tx, double ty)
{
    auto __arg0 = (::wxDouble)a;
    auto __arg1 = (::wxDouble)b;
    auto __arg2 = (::wxDouble)c;
    auto __arg3 = (::wxDouble)d;
    auto __arg4 = (::wxDouble)tx;
    auto __arg5 = (::wxDouble)ty;
    ((::wxGraphicsMatrix*)__Instance)->Set(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
}

void wxSharp::GraphicsMatrix::Get(double* a, double* b, double* c, double* d, double* tx, double* ty) const
{
    double* __arg0 = (::wxDouble*)a;
    double* __arg1 = (::wxDouble*)b;
    double* __arg2 = (::wxDouble*)c;
    double* __arg3 = (::wxDouble*)d;
    double* __arg4 = (::wxDouble*)tx;
    double* __arg5 = (::wxDouble*)ty;
    ((::wxGraphicsMatrix*)__Instance)->Get(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
    a = __arg0;
    b = __arg1;
    c = __arg2;
    d = __arg3;
    tx = __arg4;
    ty = __arg5;
}

void wxSharp::GraphicsMatrix::Invert()
{
    ((::wxGraphicsMatrix*)__Instance)->Invert();
}

bool wxSharp::GraphicsMatrix::IsEqual(const ::wxSharp::GraphicsMatrix& t) const
{
    auto &__arg0 = *(::wxGraphicsMatrix*)t.__Instance;
    bool __ret = ((::wxGraphicsMatrix*)__Instance)->IsEqual(__arg0);
    return __ret;
}

bool wxSharp::GraphicsMatrix::IsIdentity() const
{
    bool __ret = ((::wxGraphicsMatrix*)__Instance)->IsIdentity();
    return __ret;
}

void wxSharp::GraphicsMatrix::Translate(double dx, double dy)
{
    auto __arg0 = (::wxDouble)dx;
    auto __arg1 = (::wxDouble)dy;
    ((::wxGraphicsMatrix*)__Instance)->Translate(__arg0, __arg1);
}

void wxSharp::GraphicsMatrix::Scale(double xScale, double yScale)
{
    auto __arg0 = (::wxDouble)xScale;
    auto __arg1 = (::wxDouble)yScale;
    ((::wxGraphicsMatrix*)__Instance)->Scale(__arg0, __arg1);
}

void wxSharp::GraphicsMatrix::Rotate(double angle)
{
    auto __arg0 = (::wxDouble)angle;
    ((::wxGraphicsMatrix*)__Instance)->Rotate(__arg0);
}

void wxSharp::GraphicsMatrix::TransformPoint(double* x, double* y) const
{
    double* __arg0 = (::wxDouble*)x;
    double* __arg1 = (::wxDouble*)y;
    ((::wxGraphicsMatrix*)__Instance)->TransformPoint(__arg0, __arg1);
    x = __arg0;
    y = __arg1;
}

void wxSharp::GraphicsMatrix::TransformDistance(double* dx, double* dy) const
{
    double* __arg0 = (::wxDouble*)dx;
    double* __arg1 = (::wxDouble*)dy;
    ((::wxGraphicsMatrix*)__Instance)->TransformDistance(__arg0, __arg1);
    dx = __arg0;
    dy = __arg1;
}

void* wxSharp::GraphicsMatrix::GetNativeMatrix() const
{
    void* __ret = ((::wxGraphicsMatrix*)__Instance)->GetNativeMatrix();
    return __ret;
}

wxSharp::GraphicsMatrix::GraphicsMatrix(const ::wxSharp::GraphicsMatrix& _0)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsMatrix*)_0.__Instance;
    __Instance = new ::wxGraphicsMatrix(__arg0);
}

wxSharp::GraphicsGradientStop::GraphicsGradientStop(::wxGraphicsGradientStop* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsGradientStop::~GraphicsGradientStop()
{
}

wxSharp::GraphicsGradientStop::GraphicsGradientStop(::wxSharp::Color col, float pos)
{
    __ownsNativeInstance = true;
    auto __arg0 = *(::wxColour*)col.__Instance;
    __Instance = new ::wxGraphicsGradientStop(__arg0, pos);
}

void wxSharp::GraphicsGradientStop::SetColour(const ::wxSharp::Color& col)
{
    auto &__arg0 = *(::wxColour*)col.__Instance;
    ((::wxGraphicsGradientStop*)__Instance)->SetColour(__arg0);
}

float wxSharp::GraphicsGradientStop::GetPosition() const
{
    float __ret = ((::wxGraphicsGradientStop*)__Instance)->GetPosition();
    return __ret;
}

void wxSharp::GraphicsGradientStop::SetPosition(float pos)
{
    ((::wxGraphicsGradientStop*)__Instance)->SetPosition(pos);
}

wxSharp::GraphicsGradientStop::GraphicsGradientStop(const ::wxSharp::GraphicsGradientStop& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsGradientStop*)_0.__Instance;
    __Instance = new ::wxGraphicsGradientStop(__arg0);
}

wxSharp::GraphicsGradientStops::GraphicsGradientStops(::wxGraphicsGradientStops* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsGradientStops::~GraphicsGradientStops()
{
}

wxSharp::GraphicsGradientStops::GraphicsGradientStops(::wxSharp::Color startCol, ::wxSharp::Color endCol)
{
    __ownsNativeInstance = true;
    auto __arg0 = *(::wxColour*)startCol.__Instance;
    auto __arg1 = *(::wxColour*)endCol.__Instance;
    __Instance = new ::wxGraphicsGradientStops(__arg0, __arg1);
}

void wxSharp::GraphicsGradientStops::Add(const ::wxSharp::GraphicsGradientStop& stop)
{
    auto &__arg0 = *(::wxGraphicsGradientStop*)stop.__Instance;
    ((::wxGraphicsGradientStops*)__Instance)->Add(__arg0);
}

void wxSharp::GraphicsGradientStops::Add(::wxSharp::Color col, float pos)
{
    auto __arg0 = *(::wxColour*)col.__Instance;
    ((::wxGraphicsGradientStops*)__Instance)->Add(__arg0, pos);
}

unsigned long wxSharp::GraphicsGradientStops::GetCount() const
{
    ::size_t __ret = ((::wxGraphicsGradientStops*)__Instance)->GetCount();
    return __ret;
}

::wxSharp::GraphicsGradientStop wxSharp::GraphicsGradientStops::Item(unsigned int n) const
{
    ::wxGraphicsGradientStop __ret = ((::wxGraphicsGradientStops*)__Instance)->Item(n);
    auto ____ret = new ::wxGraphicsGradientStop(__ret);
    return ____ret;
}

void wxSharp::GraphicsGradientStops::SetStartColour(::wxSharp::Color col)
{
    auto __arg0 = *(::wxColour*)col.__Instance;
    ((::wxGraphicsGradientStops*)__Instance)->SetStartColour(__arg0);
}

::wxSharp::Color wxSharp::GraphicsGradientStops::GetStartColour() const
{
    ::wxColour __ret = ((::wxGraphicsGradientStops*)__Instance)->GetStartColour();
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

void wxSharp::GraphicsGradientStops::SetEndColour(::wxSharp::Color col)
{
    auto __arg0 = *(::wxColour*)col.__Instance;
    ((::wxGraphicsGradientStops*)__Instance)->SetEndColour(__arg0);
}

::wxSharp::Color wxSharp::GraphicsGradientStops::GetEndColour() const
{
    ::wxColour __ret = ((::wxGraphicsGradientStops*)__Instance)->GetEndColour();
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

wxSharp::GraphicsGradientStops::GraphicsGradientStops(const ::wxSharp::GraphicsGradientStops& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsGradientStops*)_0.__Instance;
    __Instance = new ::wxGraphicsGradientStops(__arg0);
}

wxSharp::GraphicsPenInfo::GraphicsPenInfo(::wxGraphicsPenInfo* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsPenInfo::~GraphicsPenInfo()
{
}

wxSharp::GraphicsPenInfo::GraphicsPenInfo(const ::wxSharp::Color& colour, double width, ::wxSharp::PenStyle style)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    auto __arg1 = (::wxDouble)width;
    auto __arg2 = (::wxPenStyle)style;
    __Instance = new ::wxGraphicsPenInfo(__arg0, __arg1, __arg2);
}

double wxSharp::GraphicsPenInfo::GetWidth() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetWidth();
    return __ret;
}

::wxSharp::GradientType wxSharp::GraphicsPenInfo::GetGradientType() const
{
    ::wxGradientType __ret = ((::wxGraphicsPenInfo*)__Instance)->GetGradientType();
    return (::wxSharp::GradientType)__ret;
}

double wxSharp::GraphicsPenInfo::GetX1() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetX1();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetY1() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetY1();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetX2() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetX2();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetY2() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetY2();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetStartX() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetStartX();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetStartY() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetStartY();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetEndX() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetEndX();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetEndY() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetEndY();
    return __ret;
}

double wxSharp::GraphicsPenInfo::GetRadius() const
{
    ::wxDouble __ret = ((::wxGraphicsPenInfo*)__Instance)->GetRadius();
    return __ret;
}

wxSharp::GraphicsPenInfo::GraphicsPenInfo(const ::wxSharp::GraphicsPenInfo& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsPenInfo*)_0.__Instance;
    __Instance = new ::wxGraphicsPenInfo(__arg0);
}

::wxSharp::Color wxSharp::GraphicsPenInfo::GetColour() const
{
    ::wxColour __ret = ((::wxGraphicsPenInfo*)__Instance)->GetColour();
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

::wxSharp::PenStyle wxSharp::GraphicsPenInfo::GetStyle() const
{
    ::wxPenStyle __ret = ((::wxGraphicsPenInfo*)__Instance)->GetStyle();
    return (::wxSharp::PenStyle)__ret;
}

::wxSharp::PenJoin wxSharp::GraphicsPenInfo::GetJoin() const
{
    ::wxPenJoin __ret = ((::wxGraphicsPenInfo*)__Instance)->GetJoin();
    return (::wxSharp::PenJoin)__ret;
}

::wxSharp::PenCap wxSharp::GraphicsPenInfo::GetCap() const
{
    ::wxPenCap __ret = ((::wxGraphicsPenInfo*)__Instance)->GetCap();
    return (::wxSharp::PenCap)__ret;
}

int wxSharp::GraphicsPenInfo::GetDashes(signed char** ptr) const
{
    auto __arg0 = (::wxDash**)ptr;
    int __ret = ((::wxGraphicsPenInfo*)__Instance)->GetDashes(__arg0);
    return __ret;
}

int wxSharp::GraphicsPenInfo::GetDashCount() const
{
    int __ret = ((::wxGraphicsPenInfo*)__Instance)->GetDashCount();
    return __ret;
}

signed char* wxSharp::GraphicsPenInfo::GetDash() const
{
    ::wxDash* __ret = ((::wxGraphicsPenInfo*)__Instance)->GetDash();
    return reinterpret_cast<signed char*>(__ret);
}

bool wxSharp::GraphicsPenInfo::IsTransparent() const
{
    bool __ret = ((::wxGraphicsPenInfo*)__Instance)->IsTransparent();
    return __ret;
}

wxSharp::GraphicsPath::GraphicsPath(::wxGraphicsPath* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsPath::~GraphicsPath()
{
}

wxSharp::GraphicsPath::GraphicsPath()
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGraphicsPath();
}

void wxSharp::GraphicsPath::MoveToPoint(double x, double y)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    ((::wxGraphicsPath*)__Instance)->MoveToPoint(__arg0, __arg1);
}

void wxSharp::GraphicsPath::AddLineToPoint(double x, double y)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    ((::wxGraphicsPath*)__Instance)->AddLineToPoint(__arg0, __arg1);
}

void wxSharp::GraphicsPath::AddCurveToPoint(double cx1, double cy1, double cx2, double cy2, double x, double y)
{
    auto __arg0 = (::wxDouble)cx1;
    auto __arg1 = (::wxDouble)cy1;
    auto __arg2 = (::wxDouble)cx2;
    auto __arg3 = (::wxDouble)cy2;
    auto __arg4 = (::wxDouble)x;
    auto __arg5 = (::wxDouble)y;
    ((::wxGraphicsPath*)__Instance)->AddCurveToPoint(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
}

void wxSharp::GraphicsPath::AddPath(const ::wxSharp::GraphicsPath& path)
{
    auto &__arg0 = *(::wxGraphicsPath*)path.__Instance;
    ((::wxGraphicsPath*)__Instance)->AddPath(__arg0);
}

void wxSharp::GraphicsPath::CloseSubpath()
{
    ((::wxGraphicsPath*)__Instance)->CloseSubpath();
}

void wxSharp::GraphicsPath::GetCurrentPoint(double* x, double* y) const
{
    double* __arg0 = (::wxDouble*)x;
    double* __arg1 = (::wxDouble*)y;
    ((::wxGraphicsPath*)__Instance)->GetCurrentPoint(__arg0, __arg1);
    x = __arg0;
    y = __arg1;
}

void wxSharp::GraphicsPath::AddArc(double x, double y, double r, double startAngle, double endAngle, bool clockwise)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)r;
    auto __arg3 = (::wxDouble)startAngle;
    auto __arg4 = (::wxDouble)endAngle;
    ((::wxGraphicsPath*)__Instance)->AddArc(__arg0, __arg1, __arg2, __arg3, __arg4, clockwise);
}

void wxSharp::GraphicsPath::AddQuadCurveToPoint(double cx, double cy, double x, double y)
{
    auto __arg0 = (::wxDouble)cx;
    auto __arg1 = (::wxDouble)cy;
    auto __arg2 = (::wxDouble)x;
    auto __arg3 = (::wxDouble)y;
    ((::wxGraphicsPath*)__Instance)->AddQuadCurveToPoint(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsPath::AddRectangle(double x, double y, double w, double h)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    ((::wxGraphicsPath*)__Instance)->AddRectangle(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsPath::AddCircle(double x, double y, double r)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)r;
    ((::wxGraphicsPath*)__Instance)->AddCircle(__arg0, __arg1, __arg2);
}

void wxSharp::GraphicsPath::AddArcToPoint(double x1, double y1, double x2, double y2, double r)
{
    auto __arg0 = (::wxDouble)x1;
    auto __arg1 = (::wxDouble)y1;
    auto __arg2 = (::wxDouble)x2;
    auto __arg3 = (::wxDouble)y2;
    auto __arg4 = (::wxDouble)r;
    ((::wxGraphicsPath*)__Instance)->AddArcToPoint(__arg0, __arg1, __arg2, __arg3, __arg4);
}

void wxSharp::GraphicsPath::AddEllipse(double x, double y, double w, double h)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    ((::wxGraphicsPath*)__Instance)->AddEllipse(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsPath::AddRoundedRectangle(double x, double y, double w, double h, double radius)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    auto __arg4 = (::wxDouble)radius;
    ((::wxGraphicsPath*)__Instance)->AddRoundedRectangle(__arg0, __arg1, __arg2, __arg3, __arg4);
}

void* wxSharp::GraphicsPath::GetNativePath() const
{
    void* __ret = ((::wxGraphicsPath*)__Instance)->GetNativePath();
    return __ret;
}

void wxSharp::GraphicsPath::UnGetNativePath(void* p) const
{
    auto __arg0 = (void*)p;
    ((::wxGraphicsPath*)__Instance)->UnGetNativePath(__arg0);
}

void wxSharp::GraphicsPath::Transform(const ::wxSharp::GraphicsMatrix& matrix)
{
    auto &__arg0 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ((::wxGraphicsPath*)__Instance)->Transform(__arg0);
}

void wxSharp::GraphicsPath::GetBox(double* x, double* y, double* w, double* h) const
{
    double* __arg0 = (::wxDouble*)x;
    double* __arg1 = (::wxDouble*)y;
    double* __arg2 = (::wxDouble*)w;
    double* __arg3 = (::wxDouble*)h;
    ((::wxGraphicsPath*)__Instance)->GetBox(__arg0, __arg1, __arg2, __arg3);
    x = __arg0;
    y = __arg1;
    w = __arg2;
    h = __arg3;
}

bool wxSharp::GraphicsPath::Contains(double x, double y, ::wxSharp::PolygonFillMode fillStyle) const
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxPolygonFillMode)fillStyle;
    bool __ret = ((::wxGraphicsPath*)__Instance)->Contains(__arg0, __arg1, __arg2);
    return __ret;
}

wxSharp::GraphicsPath::GraphicsPath(const ::wxSharp::GraphicsPath& _0)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGraphicsPath*)_0.__Instance;
    __Instance = new ::wxGraphicsPath(__arg0);
}

wxSharp::GraphicsContext::GraphicsContext(::wxGraphicsContext* instance, bool ownNativeInstance)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsContext::~GraphicsContext()
{
}

wxSharp::GraphicsContext::GraphicsContext(::wxSharp::GraphicsRenderer* renderer, ::wxSharp::Window* window)
    : wxSharp::GraphicsObject((::wxGraphicsObject*)nullptr)
{
    __ownsNativeInstance = true;
}

::wxSharp::GraphicsContext* wxSharp::GraphicsContext::Create(const ::wxSharp::WindowDC& dc)
{
    auto &__arg0 = *(::wxWindowDC*)dc.__Instance;
    ::wxGraphicsContext* __ret = ::wxGraphicsContext::Create(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsContext::CreateFromUnknownDC(const ::wxSharp::DC& dc)
{
    auto &__arg0 = *(::wxDC*)dc.__Instance;
    ::wxGraphicsContext* __ret = ::wxGraphicsContext::CreateFromUnknownDC(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsContext::CreateFromNative(void* context)
{
    auto __arg0 = (void*)context;
    ::wxGraphicsContext* __ret = ::wxGraphicsContext::CreateFromNative(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsContext::CreateFromNativeWindow(void* window)
{
    auto __arg0 = (void*)window;
    ::wxGraphicsContext* __ret = ::wxGraphicsContext::CreateFromNativeWindow(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsContext::Create(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ::wxGraphicsContext* __ret = ::wxGraphicsContext::Create(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsContext::Create()
{
    ::wxGraphicsContext* __ret = ::wxGraphicsContext::Create();
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::Window* wxSharp::GraphicsContext::GetWindow() const
{
    ::wxWindow* __ret = ((::wxGraphicsContext*)__Instance)->GetWindow();
    return (__ret == nullptr) ? nullptr : new wxSharp::Window((::wxWindow*)__ret);
}

bool wxSharp::GraphicsContext::StartDoc(const char* message)
{
    auto __arg0 = message;
    bool __ret = ((::wxGraphicsContext*)__Instance)->StartDoc(__arg0);
    return __ret;
}

void wxSharp::GraphicsContext::EndDoc()
{
    ((::wxGraphicsContext*)__Instance)->EndDoc();
}

void wxSharp::GraphicsContext::StartPage(double width, double height)
{
    auto __arg0 = (::wxDouble)width;
    auto __arg1 = (::wxDouble)height;
    ((::wxGraphicsContext*)__Instance)->StartPage(__arg0, __arg1);
}

void wxSharp::GraphicsContext::EndPage()
{
    ((::wxGraphicsContext*)__Instance)->EndPage();
}

void wxSharp::GraphicsContext::Flush()
{
    ((::wxGraphicsContext*)__Instance)->Flush();
}

::wxSharp::GraphicsPath wxSharp::GraphicsContext::CreatePath() const
{
    ::wxGraphicsPath __ret = ((::wxGraphicsContext*)__Instance)->CreatePath();
    auto ____ret = new ::wxGraphicsPath(__ret);
    return ____ret;
}

::wxSharp::GraphicsPen wxSharp::GraphicsContext::CreatePen(const ::wxSharp::Pen& pen) const
{
    auto &__arg0 = *(::wxPen*)pen.__Instance;
    ::wxGraphicsPen __ret = ((::wxGraphicsContext*)__Instance)->CreatePen(__arg0);
    auto ____ret = new ::wxGraphicsPen(__ret);
    return ____ret;
}

::wxSharp::GraphicsPen wxSharp::GraphicsContext::CreatePen(const ::wxSharp::GraphicsPenInfo& info) const
{
    auto &__arg0 = *(::wxGraphicsPenInfo*)info.__Instance;
    ::wxGraphicsPen __ret = ((::wxGraphicsContext*)__Instance)->CreatePen(__arg0);
    auto ____ret = new ::wxGraphicsPen(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsContext::CreateBrush(const ::wxSharp::Brush& brush) const
{
    auto &__arg0 = *(::wxBrush*)brush.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsContext*)__Instance)->CreateBrush(__arg0);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsContext::CreateLinearGradientBrush(double x1, double y1, double x2, double y2, const ::wxSharp::Color& c1, const ::wxSharp::Color& c2, const ::wxSharp::GraphicsMatrix& matrix) const
{
    auto __arg0 = (::wxDouble)x1;
    auto __arg1 = (::wxDouble)y1;
    auto __arg2 = (::wxDouble)x2;
    auto __arg3 = (::wxDouble)y2;
    auto &__arg4 = *(::wxColour*)c1.__Instance;
    auto &__arg5 = *(::wxColour*)c2.__Instance;
    auto &__arg6 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsContext*)__Instance)->CreateLinearGradientBrush(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsContext::CreateLinearGradientBrush(double x1, double y1, double x2, double y2, const ::wxSharp::GraphicsGradientStops& stops, const ::wxSharp::GraphicsMatrix& matrix) const
{
    auto __arg0 = (::wxDouble)x1;
    auto __arg1 = (::wxDouble)y1;
    auto __arg2 = (::wxDouble)x2;
    auto __arg3 = (::wxDouble)y2;
    auto &__arg4 = *(::wxGraphicsGradientStops*)stops.__Instance;
    auto &__arg5 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsContext*)__Instance)->CreateLinearGradientBrush(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsContext::CreateRadialGradientBrush(double startX, double startY, double endX, double endY, double radius, const ::wxSharp::Color& oColor, const ::wxSharp::Color& cColor, const ::wxSharp::GraphicsMatrix& matrix) const
{
    auto __arg0 = (::wxDouble)startX;
    auto __arg1 = (::wxDouble)startY;
    auto __arg2 = (::wxDouble)endX;
    auto __arg3 = (::wxDouble)endY;
    auto __arg4 = (::wxDouble)radius;
    auto &__arg5 = *(::wxColour*)oColor.__Instance;
    auto &__arg6 = *(::wxColour*)cColor.__Instance;
    auto &__arg7 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsContext*)__Instance)->CreateRadialGradientBrush(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6, __arg7);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsContext::CreateRadialGradientBrush(double startX, double startY, double endX, double endY, double radius, const ::wxSharp::GraphicsGradientStops& stops, const ::wxSharp::GraphicsMatrix& matrix) const
{
    auto __arg0 = (::wxDouble)startX;
    auto __arg1 = (::wxDouble)startY;
    auto __arg2 = (::wxDouble)endX;
    auto __arg3 = (::wxDouble)endY;
    auto __arg4 = (::wxDouble)radius;
    auto &__arg5 = *(::wxGraphicsGradientStops*)stops.__Instance;
    auto &__arg6 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsContext*)__Instance)->CreateRadialGradientBrush(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsFont wxSharp::GraphicsContext::CreateFont(double sizeInPixels, const char* facename, int flags, const ::wxSharp::Color& col) const
{
    auto __arg1 = facename;
    auto &__arg3 = *(::wxColour*)col.__Instance;
    ::wxGraphicsFont __ret = ((::wxGraphicsContext*)__Instance)->CreateFont(sizeInPixels, __arg1, flags, __arg3);
    auto ____ret = new ::wxGraphicsFont(__ret);
    return ____ret;
}

::wxSharp::GraphicsBitmap wxSharp::GraphicsContext::CreateSubBitmap(const ::wxSharp::GraphicsBitmap& bitmap, double x, double y, double w, double h) const
{
    auto &__arg0 = *(::wxGraphicsBitmap*)bitmap.__Instance;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    auto __arg3 = (::wxDouble)w;
    auto __arg4 = (::wxDouble)h;
    ::wxGraphicsBitmap __ret = ((::wxGraphicsContext*)__Instance)->CreateSubBitmap(__arg0, __arg1, __arg2, __arg3, __arg4);
    auto ____ret = new ::wxGraphicsBitmap(__ret);
    return ____ret;
}

::wxSharp::GraphicsMatrix wxSharp::GraphicsContext::CreateMatrix(double a, double b, double c, double d, double tx, double ty) const
{
    auto __arg0 = (::wxDouble)a;
    auto __arg1 = (::wxDouble)b;
    auto __arg2 = (::wxDouble)c;
    auto __arg3 = (::wxDouble)d;
    auto __arg4 = (::wxDouble)tx;
    auto __arg5 = (::wxDouble)ty;
    ::wxGraphicsMatrix __ret = ((::wxGraphicsContext*)__Instance)->CreateMatrix(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
    auto ____ret = new ::wxGraphicsMatrix(__ret);
    return ____ret;
}

void wxSharp::GraphicsContext::PushState()
{
    ((::wxGraphicsContext*)__Instance)->PushState();
}

void wxSharp::GraphicsContext::PopState()
{
    ((::wxGraphicsContext*)__Instance)->PopState();
}

void wxSharp::GraphicsContext::Clip(double x, double y, double w, double h)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    ((::wxGraphicsContext*)__Instance)->Clip(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::ResetClip()
{
    ((::wxGraphicsContext*)__Instance)->ResetClip();
}

void wxSharp::GraphicsContext::GetClipBox(double* x, double* y, double* w, double* h)
{
    double* __arg0 = (::wxDouble*)x;
    double* __arg1 = (::wxDouble*)y;
    double* __arg2 = (::wxDouble*)w;
    double* __arg3 = (::wxDouble*)h;
    ((::wxGraphicsContext*)__Instance)->GetClipBox(__arg0, __arg1, __arg2, __arg3);
    x = __arg0;
    y = __arg1;
    w = __arg2;
    h = __arg3;
}

void* wxSharp::GraphicsContext::GetNativeContext()
{
    void* __ret = ((::wxGraphicsContext*)__Instance)->GetNativeContext();
    return __ret;
}

::wxSharp::AntialiasMode wxSharp::GraphicsContext::GetAntialiasMode() const
{
    ::wxAntialiasMode __ret = ((::wxGraphicsContext*)__Instance)->GetAntialiasMode();
    return (::wxSharp::AntialiasMode)__ret;
}

bool wxSharp::GraphicsContext::SetAntialiasMode(::wxSharp::AntialiasMode antialias)
{
    auto __arg0 = (::wxAntialiasMode)antialias;
    bool __ret = ((::wxGraphicsContext*)__Instance)->SetAntialiasMode(__arg0);
    return __ret;
}

::wxSharp::InterpolationQuality wxSharp::GraphicsContext::GetInterpolationQuality() const
{
    ::wxInterpolationQuality __ret = ((::wxGraphicsContext*)__Instance)->GetInterpolationQuality();
    return (::wxSharp::InterpolationQuality)__ret;
}

bool wxSharp::GraphicsContext::SetInterpolationQuality(::wxSharp::InterpolationQuality interpolation)
{
    auto __arg0 = (::wxInterpolationQuality)interpolation;
    bool __ret = ((::wxGraphicsContext*)__Instance)->SetInterpolationQuality(__arg0);
    return __ret;
}

::wxSharp::CompositionMode wxSharp::GraphicsContext::GetCompositionMode() const
{
    ::wxCompositionMode __ret = ((::wxGraphicsContext*)__Instance)->GetCompositionMode();
    return (::wxSharp::CompositionMode)__ret;
}

bool wxSharp::GraphicsContext::SetCompositionMode(::wxSharp::CompositionMode op)
{
    auto __arg0 = (::wxCompositionMode)op;
    bool __ret = ((::wxGraphicsContext*)__Instance)->SetCompositionMode(__arg0);
    return __ret;
}

void wxSharp::GraphicsContext::GetSize(double* width, double* height) const
{
    double* __arg0 = (::wxDouble*)width;
    double* __arg1 = (::wxDouble*)height;
    ((::wxGraphicsContext*)__Instance)->GetSize(__arg0, __arg1);
    width = __arg0;
    height = __arg1;
}

void wxSharp::GraphicsContext::GetDPI(double* dpiX, double* dpiY) const
{
    double* __arg0 = (::wxDouble*)dpiX;
    double* __arg1 = (::wxDouble*)dpiY;
    ((::wxGraphicsContext*)__Instance)->GetDPI(__arg0, __arg1);
    dpiX = __arg0;
    dpiY = __arg1;
}

void wxSharp::GraphicsContext::BeginLayer(double opacity)
{
    auto __arg0 = (::wxDouble)opacity;
    ((::wxGraphicsContext*)__Instance)->BeginLayer(__arg0);
}

void wxSharp::GraphicsContext::EndLayer()
{
    ((::wxGraphicsContext*)__Instance)->EndLayer();
}

void wxSharp::GraphicsContext::Translate(double dx, double dy)
{
    auto __arg0 = (::wxDouble)dx;
    auto __arg1 = (::wxDouble)dy;
    ((::wxGraphicsContext*)__Instance)->Translate(__arg0, __arg1);
}

void wxSharp::GraphicsContext::Scale(double xScale, double yScale)
{
    auto __arg0 = (::wxDouble)xScale;
    auto __arg1 = (::wxDouble)yScale;
    ((::wxGraphicsContext*)__Instance)->Scale(__arg0, __arg1);
}

void wxSharp::GraphicsContext::Rotate(double angle)
{
    auto __arg0 = (::wxDouble)angle;
    ((::wxGraphicsContext*)__Instance)->Rotate(__arg0);
}

void wxSharp::GraphicsContext::ConcatTransform(const ::wxSharp::GraphicsMatrix& matrix)
{
    auto &__arg0 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ((::wxGraphicsContext*)__Instance)->ConcatTransform(__arg0);
}

void wxSharp::GraphicsContext::SetTransform(const ::wxSharp::GraphicsMatrix& matrix)
{
    auto &__arg0 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ((::wxGraphicsContext*)__Instance)->SetTransform(__arg0);
}

::wxSharp::GraphicsMatrix wxSharp::GraphicsContext::GetTransform() const
{
    ::wxGraphicsMatrix __ret = ((::wxGraphicsContext*)__Instance)->GetTransform();
    auto ____ret = new ::wxGraphicsMatrix(__ret);
    return ____ret;
}

void wxSharp::GraphicsContext::SetPen(const ::wxSharp::GraphicsPen& pen)
{
    auto &__arg0 = *(::wxGraphicsPen*)pen.__Instance;
    ((::wxGraphicsContext*)__Instance)->SetPen(__arg0);
}

void wxSharp::GraphicsContext::SetPen(const ::wxSharp::Pen& pen)
{
    auto &__arg0 = *(::wxPen*)pen.__Instance;
    ((::wxGraphicsContext*)__Instance)->SetPen(__arg0);
}

void wxSharp::GraphicsContext::SetBrush(const ::wxSharp::GraphicsBrush& brush)
{
    auto &__arg0 = *(::wxGraphicsBrush*)brush.__Instance;
    ((::wxGraphicsContext*)__Instance)->SetBrush(__arg0);
}

void wxSharp::GraphicsContext::SetBrush(const ::wxSharp::Brush& brush)
{
    auto &__arg0 = *(::wxBrush*)brush.__Instance;
    ((::wxGraphicsContext*)__Instance)->SetBrush(__arg0);
}

void wxSharp::GraphicsContext::SetFont(const ::wxSharp::GraphicsFont& font)
{
    auto &__arg0 = *(::wxGraphicsFont*)font.__Instance;
    ((::wxGraphicsContext*)__Instance)->SetFont(__arg0);
}

void wxSharp::GraphicsContext::StrokePath(const ::wxSharp::GraphicsPath& path)
{
    auto &__arg0 = *(::wxGraphicsPath*)path.__Instance;
    ((::wxGraphicsContext*)__Instance)->StrokePath(__arg0);
}

void wxSharp::GraphicsContext::FillPath(const ::wxSharp::GraphicsPath& path, ::wxSharp::PolygonFillMode fillStyle)
{
    auto &__arg0 = *(::wxGraphicsPath*)path.__Instance;
    auto __arg1 = (::wxPolygonFillMode)fillStyle;
    ((::wxGraphicsContext*)__Instance)->FillPath(__arg0, __arg1);
}

void wxSharp::GraphicsContext::DrawPath(const ::wxSharp::GraphicsPath& path, ::wxSharp::PolygonFillMode fillStyle)
{
    auto &__arg0 = *(::wxGraphicsPath*)path.__Instance;
    auto __arg1 = (::wxPolygonFillMode)fillStyle;
    ((::wxGraphicsContext*)__Instance)->DrawPath(__arg0, __arg1);
}

void wxSharp::GraphicsContext::ClearRectangle(double x, double y, double w, double h)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    ((::wxGraphicsContext*)__Instance)->ClearRectangle(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::DrawText(const char* str, double x, double y)
{
    auto __arg0 = str;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    ((::wxGraphicsContext*)__Instance)->DrawText(__arg0, __arg1, __arg2);
}

void wxSharp::GraphicsContext::DrawText(const char* str, double x, double y, double angle)
{
    auto __arg0 = str;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    auto __arg3 = (::wxDouble)angle;
    ((::wxGraphicsContext*)__Instance)->DrawText(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::DrawText(const char* str, double x, double y, const ::wxSharp::GraphicsBrush& backgroundBrush)
{
    auto __arg0 = str;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    auto &__arg3 = *(::wxGraphicsBrush*)backgroundBrush.__Instance;
    ((::wxGraphicsContext*)__Instance)->DrawText(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::DrawText(const char* str, double x, double y, double angle, const ::wxSharp::GraphicsBrush& backgroundBrush)
{
    auto __arg0 = str;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    auto __arg3 = (::wxDouble)angle;
    auto &__arg4 = *(::wxGraphicsBrush*)backgroundBrush.__Instance;
    ((::wxGraphicsContext*)__Instance)->DrawText(__arg0, __arg1, __arg2, __arg3, __arg4);
}

void wxSharp::GraphicsContext::GetTextExtent(const char* text, double* width, double* height, double* descent, double* externalLeading) const
{
    auto __arg0 = text;
    double* __arg1 = (::wxDouble*)width;
    double* __arg2 = (::wxDouble*)height;
    double* __arg3 = (::wxDouble*)descent;
    double* __arg4 = (::wxDouble*)externalLeading;
    ((::wxGraphicsContext*)__Instance)->GetTextExtent(__arg0, __arg1, __arg2, __arg3, __arg4);
    width = __arg1;
    height = __arg2;
    descent = __arg3;
    externalLeading = __arg4;
}

void wxSharp::GraphicsContext::DrawBitmap(const ::wxSharp::GraphicsBitmap& bmp, double x, double y, double w, double h)
{
    auto &__arg0 = *(::wxGraphicsBitmap*)bmp.__Instance;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    auto __arg3 = (::wxDouble)w;
    auto __arg4 = (::wxDouble)h;
    ((::wxGraphicsContext*)__Instance)->DrawBitmap(__arg0, __arg1, __arg2, __arg3, __arg4);
}

void wxSharp::GraphicsContext::StrokeLine(double x1, double y1, double x2, double y2)
{
    auto __arg0 = (::wxDouble)x1;
    auto __arg1 = (::wxDouble)y1;
    auto __arg2 = (::wxDouble)x2;
    auto __arg3 = (::wxDouble)y2;
    ((::wxGraphicsContext*)__Instance)->StrokeLine(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::DrawRectangle(double x, double y, double w, double h)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    ((::wxGraphicsContext*)__Instance)->DrawRectangle(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::DrawEllipse(double x, double y, double w, double h)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    ((::wxGraphicsContext*)__Instance)->DrawEllipse(__arg0, __arg1, __arg2, __arg3);
}

void wxSharp::GraphicsContext::DrawRoundedRectangle(double x, double y, double w, double h, double radius)
{
    auto __arg0 = (::wxDouble)x;
    auto __arg1 = (::wxDouble)y;
    auto __arg2 = (::wxDouble)w;
    auto __arg3 = (::wxDouble)h;
    auto __arg4 = (::wxDouble)radius;
    ((::wxGraphicsContext*)__Instance)->DrawRoundedRectangle(__arg0, __arg1, __arg2, __arg3, __arg4);
}

bool wxSharp::GraphicsContext::ShouldOffset() const
{
    bool __ret = ((::wxGraphicsContext*)__Instance)->ShouldOffset();
    return __ret;
}

void wxSharp::GraphicsContext::EnableOffset(bool enable)
{
    ((::wxGraphicsContext*)__Instance)->EnableOffset(enable);
}

void wxSharp::GraphicsContext::DisableOffset()
{
    ((::wxGraphicsContext*)__Instance)->DisableOffset();
}

bool wxSharp::GraphicsContext::OffsetEnabled()
{
    bool __ret = ((::wxGraphicsContext*)__Instance)->OffsetEnabled();
    return __ret;
}

wxSharp::GraphicsRenderer::GraphicsRenderer(::wxGraphicsRenderer* instance, bool ownNativeInstance)
    : wxSharp::Object((::wxObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GraphicsRenderer::~GraphicsRenderer()
{
}

wxSharp::GraphicsRenderer::GraphicsRenderer()
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
}

::wxSharp::GraphicsRenderer* wxSharp::GraphicsRenderer::GetDefaultRenderer()
{
    ::wxGraphicsRenderer* __ret = ::wxGraphicsRenderer::GetDefaultRenderer();
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsRenderer((::wxGraphicsRenderer*)__ret);
}

::wxSharp::GraphicsRenderer* wxSharp::GraphicsRenderer::GetCairoRenderer()
{
    ::wxGraphicsRenderer* __ret = ::wxGraphicsRenderer::GetCairoRenderer();
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsRenderer((::wxGraphicsRenderer*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsRenderer::CreateContext(const ::wxSharp::WindowDC& dc)
{
    auto &__arg0 = *(::wxWindowDC*)dc.__Instance;
    ::wxGraphicsContext* __ret = ((::wxGraphicsRenderer*)__Instance)->CreateContext(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsRenderer::CreateContextFromUnknownDC(const ::wxSharp::DC& dc)
{
    auto &__arg0 = *(::wxDC*)dc.__Instance;
    ::wxGraphicsContext* __ret = ((::wxGraphicsRenderer*)__Instance)->CreateContextFromUnknownDC(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsRenderer::CreateContextFromNativeContext(void* context)
{
    auto __arg0 = (void*)context;
    ::wxGraphicsContext* __ret = ((::wxGraphicsRenderer*)__Instance)->CreateContextFromNativeContext(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsRenderer::CreateContextFromNativeWindow(void* window)
{
    auto __arg0 = (void*)window;
    ::wxGraphicsContext* __ret = ((::wxGraphicsRenderer*)__Instance)->CreateContextFromNativeWindow(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsRenderer::CreateContext(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ::wxGraphicsContext* __ret = ((::wxGraphicsRenderer*)__Instance)->CreateContext(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsContext* wxSharp::GraphicsRenderer::CreateMeasuringContext()
{
    ::wxGraphicsContext* __ret = ((::wxGraphicsRenderer*)__Instance)->CreateMeasuringContext();
    return (__ret == nullptr) ? nullptr : new wxSharp::GraphicsContext((::wxGraphicsContext*)__ret);
}

::wxSharp::GraphicsPath wxSharp::GraphicsRenderer::CreatePath()
{
    ::wxGraphicsPath __ret = ((::wxGraphicsRenderer*)__Instance)->CreatePath();
    auto ____ret = new ::wxGraphicsPath(__ret);
    return ____ret;
}

::wxSharp::GraphicsMatrix wxSharp::GraphicsRenderer::CreateMatrix(double a, double b, double c, double d, double tx, double ty)
{
    auto __arg0 = (::wxDouble)a;
    auto __arg1 = (::wxDouble)b;
    auto __arg2 = (::wxDouble)c;
    auto __arg3 = (::wxDouble)d;
    auto __arg4 = (::wxDouble)tx;
    auto __arg5 = (::wxDouble)ty;
    ::wxGraphicsMatrix __ret = ((::wxGraphicsRenderer*)__Instance)->CreateMatrix(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
    auto ____ret = new ::wxGraphicsMatrix(__ret);
    return ____ret;
}

::wxSharp::GraphicsPen wxSharp::GraphicsRenderer::CreatePen(const ::wxSharp::GraphicsPenInfo& info)
{
    auto &__arg0 = *(::wxGraphicsPenInfo*)info.__Instance;
    ::wxGraphicsPen __ret = ((::wxGraphicsRenderer*)__Instance)->CreatePen(__arg0);
    auto ____ret = new ::wxGraphicsPen(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsRenderer::CreateBrush(const ::wxSharp::Brush& brush)
{
    auto &__arg0 = *(::wxBrush*)brush.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsRenderer*)__Instance)->CreateBrush(__arg0);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsRenderer::CreateLinearGradientBrush(double x1, double y1, double x2, double y2, const ::wxSharp::GraphicsGradientStops& stops, const ::wxSharp::GraphicsMatrix& matrix)
{
    auto __arg0 = (::wxDouble)x1;
    auto __arg1 = (::wxDouble)y1;
    auto __arg2 = (::wxDouble)x2;
    auto __arg3 = (::wxDouble)y2;
    auto &__arg4 = *(::wxGraphicsGradientStops*)stops.__Instance;
    auto &__arg5 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsRenderer*)__Instance)->CreateLinearGradientBrush(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsBrush wxSharp::GraphicsRenderer::CreateRadialGradientBrush(double startX, double startY, double endX, double endY, double radius, const ::wxSharp::GraphicsGradientStops& stops, const ::wxSharp::GraphicsMatrix& matrix)
{
    auto __arg0 = (::wxDouble)startX;
    auto __arg1 = (::wxDouble)startY;
    auto __arg2 = (::wxDouble)endX;
    auto __arg3 = (::wxDouble)endY;
    auto __arg4 = (::wxDouble)radius;
    auto &__arg5 = *(::wxGraphicsGradientStops*)stops.__Instance;
    auto &__arg6 = *(::wxGraphicsMatrix*)matrix.__Instance;
    ::wxGraphicsBrush __ret = ((::wxGraphicsRenderer*)__Instance)->CreateRadialGradientBrush(__arg0, __arg1, __arg2, __arg3, __arg4, __arg5, __arg6);
    auto ____ret = new ::wxGraphicsBrush(__ret);
    return ____ret;
}

::wxSharp::GraphicsFont wxSharp::GraphicsRenderer::CreateFont(double sizeInPixels, const char* facename, int flags, const ::wxSharp::Color& col)
{
    auto __arg1 = facename;
    auto &__arg3 = *(::wxColour*)col.__Instance;
    ::wxGraphicsFont __ret = ((::wxGraphicsRenderer*)__Instance)->CreateFont(sizeInPixels, __arg1, flags, __arg3);
    auto ____ret = new ::wxGraphicsFont(__ret);
    return ____ret;
}

::wxSharp::GraphicsBitmap wxSharp::GraphicsRenderer::CreateBitmapFromNativeBitmap(void* bitmap)
{
    auto __arg0 = (void*)bitmap;
    ::wxGraphicsBitmap __ret = ((::wxGraphicsRenderer*)__Instance)->CreateBitmapFromNativeBitmap(__arg0);
    auto ____ret = new ::wxGraphicsBitmap(__ret);
    return ____ret;
}

::wxSharp::GraphicsBitmap wxSharp::GraphicsRenderer::CreateSubBitmap(const ::wxSharp::GraphicsBitmap& bitmap, double x, double y, double w, double h)
{
    auto &__arg0 = *(::wxGraphicsBitmap*)bitmap.__Instance;
    auto __arg1 = (::wxDouble)x;
    auto __arg2 = (::wxDouble)y;
    auto __arg3 = (::wxDouble)w;
    auto __arg4 = (::wxDouble)h;
    ::wxGraphicsBitmap __ret = ((::wxGraphicsRenderer*)__Instance)->CreateSubBitmap(__arg0, __arg1, __arg2, __arg3, __arg4);
    auto ____ret = new ::wxGraphicsBitmap(__ret);
    return ____ret;
}

const char* wxSharp::GraphicsRenderer::GetName() const
{
    ::wxString __ret = ((::wxGraphicsRenderer*)__Instance)->GetName();
    return __ret.c_str();
}

void wxSharp::GraphicsRenderer::GetVersion(int* major, int* minor, int* micro) const
{
    int* __arg0 = (int*)major;
    int* __arg1 = (int*)minor;
    int* __arg2 = (int*)micro;
    ((::wxGraphicsRenderer*)__Instance)->GetVersion(__arg0, __arg1, __arg2);
    major = __arg0;
    minor = __arg1;
    micro = __arg2;
}

