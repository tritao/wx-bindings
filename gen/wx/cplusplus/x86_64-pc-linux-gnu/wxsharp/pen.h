// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include "CppSharp.h"
#include "FastDelegates.h"
#include <wx/pen.h>
#include "wxsharp/gdicmn.h"

namespace wxSharp
{
    class Color;
    class Object;
    class Pen;
    class PenInfo;
    class PenInfoBase;
    class PenList;
    enum class PenCap;
    enum class PenJoin;
    enum class PenStyle;
}

namespace wxSharp
{
    enum class PenStyle
    {
        INVALID = -1,
        SOLID = 100,
        DOT = 101,
        LONG_DASH = 102,
        SHORT_DASH = 103,
        DOT_DASH = 104,
        USER_DASH = 105,
        TRANSPARENT = 106,
        STIPPLE_MASK_OPAQUE = 107,
        STIPPLE_MASK = 108,
        STIPPLE = 110,
        BDIAGONAL_HATCH = 111,
        CROSSDIAG_HATCH = 112,
        FDIAGONAL_HATCH = 113,
        CROSS_HATCH = 114,
        HORIZONTAL_HATCH = 115,
        VERTICAL_HATCH = 116,
        FIRST_HATCH = 111,
        LAST_HATCH = 116
    };

    enum class PenJoin
    {
        INVALID = -1,
        BEVEL = 120,
        MITER = 121,
        ROUND = 122
    };

    enum class PenCap
    {
        INVALID = -1,
        ROUND = 130,
        PROJECTING = 131,
        BUTT = 132
    };

    class PenInfo
    {
    public:

        ::wxPenInfo* __Instance;

        PenInfo(::wxPenInfo* instance, bool ownNativeInstance = false);

        explicit PenInfo(const ::wxSharp::Color& colour, int width, ::wxSharp::PenStyle style);

        PenInfo(const ::wxSharp::PenInfo& _0);

        ~PenInfo();

        int GetWidth() const;

        ::wxSharp::Color GetColour() const;

        ::wxSharp::PenStyle GetStyle() const;

        ::wxSharp::PenJoin GetJoin() const;

        ::wxSharp::PenCap GetCap() const;

        int GetDashes(signed char** ptr) const;

        int GetDashCount() const;

        signed char* GetDash() const;

        bool IsTransparent() const;

    protected:
        bool __ownsNativeInstance;
    };

    class Pen
    {
    public:

        ::wxPen* __Instance;

        Pen(::wxPen* instance, bool ownNativeInstance = false);

        Pen();

        Pen(const ::wxSharp::Color& colour, int width, ::wxSharp::PenStyle style);

        Pen(const ::wxSharp::PenInfo& info);

        Pen(const ::wxSharp::Pen& _0);

        ~Pen();

        bool operator==(const ::wxSharp::Pen& pen) const;

        bool operator!=(const ::wxSharp::Pen& pen) const;

        virtual void SetColour(const ::wxSharp::Color& colour);

        virtual void SetColour(unsigned char red, unsigned char green, unsigned char blue);

        virtual void SetCap(::wxSharp::PenCap capStyle);

        virtual void SetJoin(::wxSharp::PenJoin joinStyle);

        virtual void SetStyle(::wxSharp::PenStyle style);

        virtual void SetWidth(int width);

        virtual void SetDashes(int number_of_dashes, signed char* dash);

        virtual ::wxSharp::Color GetColour() const;

        virtual ::wxSharp::PenCap GetCap() const;

        virtual ::wxSharp::PenJoin GetJoin() const;

        virtual ::wxSharp::PenStyle GetStyle() const;

        virtual int GetWidth() const;

        virtual int GetDashes(signed char** ptr) const;

        int GetDashCount() const;

        signed char* GetDash() const;

        bool IsTransparent() const;

        bool IsNonTransparent() const;

    protected:
        bool __ownsNativeInstance;
    };

    class PenList : public wxSharp::GDIObjListBase
    {
    public:

        PenList(::wxPenList* instance, bool ownNativeInstance = false);

        PenList(const ::wxSharp::PenList& _0);

        PenList();

        ~PenList();

        ::wxSharp::Pen* FindOrCreatePen(const ::wxSharp::Color& colour, int width, ::wxSharp::PenStyle style);
    };
}
