// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "wxsharp/sizer.h"
#include "wxsharp/defs.h"
#include "wxsharp/sizer.h"

#include <wx/eventfilter.h>

wxSharp::SizerFlags::SizerFlags(::wxSizerFlags* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::SizerFlags::~SizerFlags()
{
}

wxSharp::SizerFlags::SizerFlags(int proportion)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxSizerFlags(proportion);
}

int wxSharp::SizerFlags::GetDefaultBorder()
{
    int __ret = ::wxSizerFlags::GetDefaultBorder();
    return __ret;
}

float wxSharp::SizerFlags::GetDefaultBorderFractional()
{
    float __ret = ::wxSizerFlags::GetDefaultBorderFractional();
    return __ret;
}

int wxSharp::SizerFlags::GetProportion() const
{
    int __ret = ((::wxSizerFlags*)__Instance)->GetProportion();
    return __ret;
}

int wxSharp::SizerFlags::GetFlags() const
{
    int __ret = ((::wxSizerFlags*)__Instance)->GetFlags();
    return __ret;
}

int wxSharp::SizerFlags::GetBorderInPixels() const
{
    int __ret = ((::wxSizerFlags*)__Instance)->GetBorderInPixels();
    return __ret;
}

wxSharp::SizerFlags::SizerFlags(const ::wxSharp::SizerFlags& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxSizerFlags*)_0.__Instance;
    __Instance = new ::wxSizerFlags(__arg0);
}

wxSharp::SizerSpacer::SizerSpacer(::wxSizerSpacer* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::SizerSpacer::~SizerSpacer()
{
}

wxSharp::SizerSpacer::SizerSpacer(const ::wxSharp::Size& size)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxSize*)size.__Instance;
    __Instance = new ::wxSizerSpacer(__arg0);
}

void wxSharp::SizerSpacer::SetSize(const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxSize*)size.__Instance;
    ((::wxSizerSpacer*)__Instance)->SetSize(__arg0);
}

void wxSharp::SizerSpacer::Show(bool show)
{
    ((::wxSizerSpacer*)__Instance)->Show(show);
}

bool wxSharp::SizerSpacer::IsShown() const
{
    bool __ret = ((::wxSizerSpacer*)__Instance)->IsShown();
    return __ret;
}

wxSharp::SizerSpacer::SizerSpacer(const ::wxSharp::SizerSpacer& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxSizerSpacer*)_0.__Instance;
    __Instance = new ::wxSizerSpacer(__arg0);
}

wxSharp::SizerItem::SizerItem(::wxSizerItem* instance, bool ownNativeInstance)
    : wxSharp::Object((::wxObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::SizerItem::~SizerItem()
{
}

wxSharp::SizerItem::SizerItem(::wxSharp::Window* window, int proportion, int flag, int border, ::wxSharp::Object* userData)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto __arg4 = userData ? (::wxObject*)userData->__Instance : nullptr;
    __Instance = new ::wxSizerItem(__arg0, proportion, flag, border, __arg4);
}

wxSharp::SizerItem::SizerItem(::wxSharp::Window* window, const ::wxSharp::SizerFlags& flags)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto &__arg1 = *(::wxSizerFlags*)flags.__Instance;
    __Instance = new ::wxSizerItem(__arg0, __arg1);
}

wxSharp::SizerItem::SizerItem(::wxSharp::Sizer* sizer, int proportion, int flag, int border, ::wxSharp::Object* userData)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto __arg4 = userData ? (::wxObject*)userData->__Instance : nullptr;
    __Instance = new ::wxSizerItem(__arg0, proportion, flag, border, __arg4);
}

wxSharp::SizerItem::SizerItem(::wxSharp::Sizer* sizer, const ::wxSharp::SizerFlags& flags)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto &__arg1 = *(::wxSizerFlags*)flags.__Instance;
    __Instance = new ::wxSizerItem(__arg0, __arg1);
}

wxSharp::SizerItem::SizerItem(int width, int height, int proportion, int flag, int border, ::wxSharp::Object* userData)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg5 = userData ? (::wxObject*)userData->__Instance : nullptr;
    __Instance = new ::wxSizerItem(width, height, proportion, flag, border, __arg5);
}

wxSharp::SizerItem::SizerItem(int width, int height, const ::wxSharp::SizerFlags& flags)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg2 = *(::wxSizerFlags*)flags.__Instance;
    __Instance = new ::wxSizerItem(width, height, __arg2);
}

wxSharp::SizerItem::SizerItem()
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxSizerItem();
}

void wxSharp::SizerItem::DeleteWindows()
{
    ((::wxSizerItem*)__Instance)->DeleteWindows();
}

void wxSharp::SizerItem::DetachSizer()
{
    ((::wxSizerItem*)__Instance)->DetachSizer();
}

void wxSharp::SizerItem::DetachWindow()
{
    ((::wxSizerItem*)__Instance)->DetachWindow();
}

::wxSharp::Size wxSharp::SizerItem::GetSize() const
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->GetSize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::SizerItem::CalcMin()
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->CalcMin();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::SizerItem::SetDimension(const ::wxSharp::Point& pos, const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxPoint*)pos.__Instance;
    auto &__arg1 = *(::wxSize*)size.__Instance;
    ((::wxSizerItem*)__Instance)->SetDimension(__arg0, __arg1);
}

::wxSharp::Size wxSharp::SizerItem::GetMinSize() const
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->GetMinSize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::SizerItem::GetMinSizeWithBorder() const
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->GetMinSizeWithBorder();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::SizerItem::GetMaxSize() const
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->GetMaxSize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::SizerItem::GetMaxSizeWithBorder() const
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->GetMaxSizeWithBorder();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::SizerItem::SetMinSize(const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxSize*)size.__Instance;
    ((::wxSizerItem*)__Instance)->SetMinSize(__arg0);
}

void wxSharp::SizerItem::SetMinSize(int x, int y)
{
    ((::wxSizerItem*)__Instance)->SetMinSize(x, y);
}

void wxSharp::SizerItem::SetInitSize(int x, int y)
{
    ((::wxSizerItem*)__Instance)->SetInitSize(x, y);
}

void wxSharp::SizerItem::SetRatio(int width, int height)
{
    ((::wxSizerItem*)__Instance)->SetRatio(width, height);
}

void wxSharp::SizerItem::SetRatio(const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxSize*)size.__Instance;
    ((::wxSizerItem*)__Instance)->SetRatio(__arg0);
}

void wxSharp::SizerItem::SetRatio(float ratio)
{
    ((::wxSizerItem*)__Instance)->SetRatio(ratio);
}

float wxSharp::SizerItem::GetRatio() const
{
    float __ret = ((::wxSizerItem*)__Instance)->GetRatio();
    return __ret;
}

::wxSharp::Rect wxSharp::SizerItem::GetRect()
{
    ::wxRect __ret = ((::wxSizerItem*)__Instance)->GetRect();
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

void wxSharp::SizerItem::SetId(int id)
{
    ((::wxSizerItem*)__Instance)->SetId(id);
}

int wxSharp::SizerItem::GetId() const
{
    int __ret = ((::wxSizerItem*)__Instance)->GetId();
    return __ret;
}

bool wxSharp::SizerItem::IsWindow() const
{
    bool __ret = ((::wxSizerItem*)__Instance)->IsWindow();
    return __ret;
}

bool wxSharp::SizerItem::IsSizer() const
{
    bool __ret = ((::wxSizerItem*)__Instance)->IsSizer();
    return __ret;
}

bool wxSharp::SizerItem::IsSpacer() const
{
    bool __ret = ((::wxSizerItem*)__Instance)->IsSpacer();
    return __ret;
}

void wxSharp::SizerItem::SetProportion(int proportion)
{
    ((::wxSizerItem*)__Instance)->SetProportion(proportion);
}

int wxSharp::SizerItem::GetProportion() const
{
    int __ret = ((::wxSizerItem*)__Instance)->GetProportion();
    return __ret;
}

void wxSharp::SizerItem::SetFlag(int flag)
{
    ((::wxSizerItem*)__Instance)->SetFlag(flag);
}

int wxSharp::SizerItem::GetFlag() const
{
    int __ret = ((::wxSizerItem*)__Instance)->GetFlag();
    return __ret;
}

void wxSharp::SizerItem::SetBorder(int border)
{
    ((::wxSizerItem*)__Instance)->SetBorder(border);
}

int wxSharp::SizerItem::GetBorder() const
{
    int __ret = ((::wxSizerItem*)__Instance)->GetBorder();
    return __ret;
}

::wxSharp::Window* wxSharp::SizerItem::GetWindow() const
{
    ::wxWindow* __ret = ((::wxSizerItem*)__Instance)->GetWindow();
    return (__ret == nullptr) ? nullptr : new wxSharp::Window((::wxWindow*)__ret);
}

::wxSharp::Sizer* wxSharp::SizerItem::GetSizer() const
{
    ::wxSizer* __ret = ((::wxSizerItem*)__Instance)->GetSizer();
    return (__ret == nullptr) ? nullptr : new wxSharp::Sizer((::wxSizer*)__ret);
}

::wxSharp::Size wxSharp::SizerItem::GetSpacer() const
{
    ::wxSize __ret = ((::wxSizerItem*)__Instance)->GetSpacer();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

bool wxSharp::SizerItem::IsShown() const
{
    bool __ret = ((::wxSizerItem*)__Instance)->IsShown();
    return __ret;
}

void wxSharp::SizerItem::Show(bool show)
{
    ((::wxSizerItem*)__Instance)->Show(show);
}

void wxSharp::SizerItem::SetUserData(::wxSharp::Object* userData)
{
    auto __arg0 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ((::wxSizerItem*)__Instance)->SetUserData(__arg0);
}

::wxSharp::Object* wxSharp::SizerItem::GetUserData() const
{
    ::wxObject* __ret = ((::wxSizerItem*)__Instance)->GetUserData();
    return (__ret == nullptr) ? nullptr : new wxSharp::Object((::wxObject*)__ret);
}

::wxSharp::Point wxSharp::SizerItem::GetPosition() const
{
    ::wxPoint __ret = ((::wxSizerItem*)__Instance)->GetPosition();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

bool wxSharp::SizerItem::InformFirstDirection(int direction, int size, int availableOtherDir)
{
    bool __ret = ((::wxSizerItem*)__Instance)->InformFirstDirection(direction, size, availableOtherDir);
    return __ret;
}

void wxSharp::SizerItem::AssignWindow(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ((::wxSizerItem*)__Instance)->AssignWindow(__arg0);
}

void wxSharp::SizerItem::AssignSizer(::wxSharp::Sizer* sizer)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    ((::wxSizerItem*)__Instance)->AssignSizer(__arg0);
}

void wxSharp::SizerItem::AssignSpacer(const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxSize*)size.__Instance;
    ((::wxSizerItem*)__Instance)->AssignSpacer(__arg0);
}

void wxSharp::SizerItem::AssignSpacer(int w, int h)
{
    ((::wxSizerItem*)__Instance)->AssignSpacer(w, h);
}

wxSharp::SizerItemList::SizerItemList(::wxSizerItemList* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::SizerItemList::~SizerItemList()
{
}

wxSharp::SizerItemList::SizerItemList(::wxSharp::KeyType keyType)
{
    __ownsNativeInstance = true;
    auto __arg0 = (::wxKeyType)keyType;
    __Instance = new ::wxSizerItemList(__arg0);
}

wxSharp::SizerItemList::SizerItemList(const ::wxSharp::SizerItemList& list)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxSizerItemList*)list.__Instance;
    __Instance = new ::wxSizerItemList(__arg0);
}

bool wxSharp::SizerItemList::DeleteObject(::wxSharp::SizerItem* object)
{
    auto __arg0 = object ? (::wxSizerItem*)object->__Instance : nullptr;
    bool __ret = ((::wxSizerItemList*)__Instance)->DeleteObject(__arg0);
    return __ret;
}

bool wxSharp::SizerItemList::Member(const ::wxSharp::SizerItem* object) const
{
    auto __arg0 = object ? (::wxSizerItem*)object->__Instance : nullptr;
    bool __ret = ((::wxSizerItemList*)__Instance)->Member(__arg0);
    return __ret;
}

int wxSharp::SizerItemList::IndexOf(::wxSharp::SizerItem* object) const
{
    auto __arg0 = object ? (::wxSizerItem*)object->__Instance : nullptr;
    int __ret = ((::wxSizerItemList*)__Instance)->IndexOf(__arg0);
    return __ret;
}

wxSharp::SizerItemList::SizerItemList(unsigned long n, ::wxSharp::SizerItem*const & v)
{
    __ownsNativeInstance = true;
    auto __arg0 = (::wxSizerItemList::size_type)(::size_t)n;
    auto __arg1 = v ? (::wxSizerItem*)v->__Instance : nullptr;
    __Instance = new ::wxSizerItemList(__arg0, __arg1);
}

void wxSharp::SizerItemList::resize(unsigned long n, ::wxSharp::SizerItem* v)
{
    auto __arg0 = (::wxSizerItemList::size_type)(::size_t)n;
    auto __arg1 = v ? (::wxSizerItem*)v->__Instance : nullptr;
    ((::wxSizerItemList*)__Instance)->resize(__arg0, __arg1);
}

unsigned long wxSharp::SizerItemList::size() const
{
    ::wxSizerItemList::size_type __ret = ((::wxSizerItemList*)__Instance)->size();
    return __ret;
}

unsigned long wxSharp::SizerItemList::max_size() const
{
    ::wxSizerItemList::size_type __ret = ((::wxSizerItemList*)__Instance)->max_size();
    return __ret;
}

bool wxSharp::SizerItemList::empty() const
{
    bool __ret = ((::wxSizerItemList*)__Instance)->empty();
    return __ret;
}

void wxSharp::SizerItemList::push_front(::wxSharp::SizerItem*const & v)
{
    auto __arg0 = v ? (::wxSizerItem*)v->__Instance : nullptr;
    ((::wxSizerItemList*)__Instance)->push_front(__arg0);
}

void wxSharp::SizerItemList::pop_front()
{
    ((::wxSizerItemList*)__Instance)->pop_front();
}

void wxSharp::SizerItemList::push_back(::wxSharp::SizerItem*const & v)
{
    auto __arg0 = v ? (::wxSizerItem*)v->__Instance : nullptr;
    ((::wxSizerItemList*)__Instance)->push_back(__arg0);
}

void wxSharp::SizerItemList::pop_back()
{
    ((::wxSizerItemList*)__Instance)->pop_back();
}

void wxSharp::SizerItemList::assign(unsigned long n, ::wxSharp::SizerItem*const & v)
{
    auto __arg0 = (::wxSizerItemList::size_type)(::size_t)n;
    auto __arg1 = v ? (::wxSizerItem*)v->__Instance : nullptr;
    ((::wxSizerItemList*)__Instance)->assign(__arg0, __arg1);
}

void wxSharp::SizerItemList::clear()
{
    ((::wxSizerItemList*)__Instance)->clear();
}

void wxSharp::SizerItemList::remove(::wxSharp::SizerItem*const & v)
{
    auto __arg0 = v ? (::wxSizerItem*)v->__Instance : nullptr;
    ((::wxSizerItemList*)__Instance)->remove(__arg0);
}

void wxSharp::SizerItemList::reverse()
{
    ((::wxSizerItemList*)__Instance)->reverse();
}

wxSharp::Sizer::Sizer(::wxSizer* instance, bool ownNativeInstance)
    : wxSharp::Object((::wxObject*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::Sizer::~Sizer()
{
}

wxSharp::Sizer::Sizer()
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(::wxSharp::Window* window, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto __arg4 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(__arg0, proportion, flag, border, __arg4);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(::wxSharp::Sizer* sizer, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto __arg4 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(__arg0, proportion, flag, border, __arg4);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(int width, int height, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg5 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(width, height, proportion, flag, border, __arg5);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(::wxSharp::Window* window, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto &__arg1 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(::wxSharp::Sizer* sizer, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto &__arg1 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(int width, int height, const ::wxSharp::SizerFlags& flags)
{
    auto &__arg2 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(width, height, __arg2);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Add(::wxSharp::SizerItem* item)
{
    auto __arg0 = item ? (::wxSizerItem*)item->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Add(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::AddSpacer(int size)
{
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->AddSpacer(size);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::AddStretchSpacer(int prop)
{
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->AddStretchSpacer(prop);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, ::wxSharp::Window* window, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = (::size_t)index;
    auto __arg1 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto __arg5 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, __arg1, proportion, flag, border, __arg5);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, ::wxSharp::Sizer* sizer, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = (::size_t)index;
    auto __arg1 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto __arg5 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, __arg1, proportion, flag, border, __arg5);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, int width, int height, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = (::size_t)index;
    auto __arg6 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, width, height, proportion, flag, border, __arg6);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, ::wxSharp::Window* window, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = (::size_t)index;
    auto __arg1 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto &__arg2 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, __arg1, __arg2);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, ::wxSharp::Sizer* sizer, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = (::size_t)index;
    auto __arg1 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto &__arg2 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, __arg1, __arg2);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, int width, int height, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = (::size_t)index;
    auto &__arg3 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, width, height, __arg3);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Insert(unsigned long index, ::wxSharp::SizerItem* item)
{
    auto __arg0 = (::size_t)index;
    auto __arg1 = item ? (::wxSizerItem*)item->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Insert(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::InsertSpacer(unsigned long index, int size)
{
    auto __arg0 = (::size_t)index;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->InsertSpacer(__arg0, size);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::InsertStretchSpacer(unsigned long index, int prop)
{
    auto __arg0 = (::size_t)index;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->InsertStretchSpacer(__arg0, prop);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(::wxSharp::Window* window, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto __arg4 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(__arg0, proportion, flag, border, __arg4);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(::wxSharp::Sizer* sizer, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto __arg4 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(__arg0, proportion, flag, border, __arg4);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(int width, int height, int proportion, int flag, int border, ::wxSharp::Object* userData)
{
    auto __arg5 = userData ? (::wxObject*)userData->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(width, height, proportion, flag, border, __arg5);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(::wxSharp::Window* window, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto &__arg1 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(::wxSharp::Sizer* sizer, const ::wxSharp::SizerFlags& flags)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto &__arg1 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(int width, int height, const ::wxSharp::SizerFlags& flags)
{
    auto &__arg2 = *(::wxSizerFlags*)flags.__Instance;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(width, height, __arg2);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::Prepend(::wxSharp::SizerItem* item)
{
    auto __arg0 = item ? (::wxSizerItem*)item->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->Prepend(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::PrependSpacer(int size)
{
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->PrependSpacer(size);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::PrependStretchSpacer(int prop)
{
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->PrependStretchSpacer(prop);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

void wxSharp::Sizer::SetContainingWindow(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ((::wxSizer*)__Instance)->SetContainingWindow(__arg0);
}

::wxSharp::Window* wxSharp::Sizer::GetContainingWindow() const
{
    ::wxWindow* __ret = ((::wxSizer*)__Instance)->GetContainingWindow();
    return (__ret == nullptr) ? nullptr : new wxSharp::Window((::wxWindow*)__ret);
}

bool wxSharp::Sizer::Remove(::wxSharp::Sizer* sizer)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Remove(__arg0);
    return __ret;
}

bool wxSharp::Sizer::Remove(int index)
{
    bool __ret = ((::wxSizer*)__Instance)->Remove(index);
    return __ret;
}

bool wxSharp::Sizer::Detach(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Detach(__arg0);
    return __ret;
}

bool wxSharp::Sizer::Detach(::wxSharp::Sizer* sizer)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Detach(__arg0);
    return __ret;
}

bool wxSharp::Sizer::Detach(int index)
{
    bool __ret = ((::wxSizer*)__Instance)->Detach(index);
    return __ret;
}

bool wxSharp::Sizer::Replace(::wxSharp::Window* oldwin, ::wxSharp::Window* newwin, bool recursive)
{
    auto __arg0 = oldwin ? (::wxWindow*)oldwin->__Instance : nullptr;
    auto __arg1 = newwin ? (::wxWindow*)newwin->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Replace(__arg0, __arg1, recursive);
    return __ret;
}

bool wxSharp::Sizer::Replace(::wxSharp::Sizer* oldsz, ::wxSharp::Sizer* newsz, bool recursive)
{
    auto __arg0 = oldsz ? (::wxSizer*)oldsz->__Instance : nullptr;
    auto __arg1 = newsz ? (::wxSizer*)newsz->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Replace(__arg0, __arg1, recursive);
    return __ret;
}

bool wxSharp::Sizer::Replace(unsigned long index, ::wxSharp::SizerItem* newitem)
{
    auto __arg0 = (::size_t)index;
    auto __arg1 = newitem ? (::wxSizerItem*)newitem->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Replace(__arg0, __arg1);
    return __ret;
}

void wxSharp::Sizer::Clear(bool delete_windows)
{
    ((::wxSizer*)__Instance)->Clear(delete_windows);
}

void wxSharp::Sizer::DeleteWindows()
{
    ((::wxSizer*)__Instance)->DeleteWindows();
}

bool wxSharp::Sizer::InformFirstDirection(int _0, int _1, int _2)
{
    bool __ret = ((::wxSizer*)__Instance)->InformFirstDirection(_0, _1, _2);
    return __ret;
}

void wxSharp::Sizer::SetMinSize(int width, int height)
{
    ((::wxSizer*)__Instance)->SetMinSize(width, height);
}

void wxSharp::Sizer::SetMinSize(const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxSize*)size.__Instance;
    ((::wxSizer*)__Instance)->SetMinSize(__arg0);
}

bool wxSharp::Sizer::SetItemMinSize(::wxSharp::Window* window, int width, int height)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->SetItemMinSize(__arg0, width, height);
    return __ret;
}

bool wxSharp::Sizer::SetItemMinSize(::wxSharp::Window* window, const ::wxSharp::Size& size)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    auto &__arg1 = *(::wxSize*)size.__Instance;
    bool __ret = ((::wxSizer*)__Instance)->SetItemMinSize(__arg0, __arg1);
    return __ret;
}

bool wxSharp::Sizer::SetItemMinSize(::wxSharp::Sizer* sizer, int width, int height)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->SetItemMinSize(__arg0, width, height);
    return __ret;
}

bool wxSharp::Sizer::SetItemMinSize(::wxSharp::Sizer* sizer, const ::wxSharp::Size& size)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    auto &__arg1 = *(::wxSize*)size.__Instance;
    bool __ret = ((::wxSizer*)__Instance)->SetItemMinSize(__arg0, __arg1);
    return __ret;
}

bool wxSharp::Sizer::SetItemMinSize(unsigned long index, int width, int height)
{
    auto __arg0 = (::size_t)index;
    bool __ret = ((::wxSizer*)__Instance)->SetItemMinSize(__arg0, width, height);
    return __ret;
}

bool wxSharp::Sizer::SetItemMinSize(unsigned long index, const ::wxSharp::Size& size)
{
    auto __arg0 = (::size_t)index;
    auto &__arg1 = *(::wxSize*)size.__Instance;
    bool __ret = ((::wxSizer*)__Instance)->SetItemMinSize(__arg0, __arg1);
    return __ret;
}

::wxSharp::Size wxSharp::Sizer::GetSize() const
{
    ::wxSize __ret = ((::wxSizer*)__Instance)->GetSize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Point wxSharp::Sizer::GetPosition() const
{
    ::wxPoint __ret = ((::wxSizer*)__Instance)->GetPosition();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::Sizer::GetMinSize()
{
    ::wxSize __ret = ((::wxSizer*)__Instance)->GetMinSize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::Sizer::CalcMin()
{
    ::wxSize __ret = ((::wxSizer*)__Instance)->CalcMin();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::Sizer::RepositionChildren(const ::wxSharp::Size& _0)
{
    auto &__arg0 = *(::wxSize*)_0.__Instance;
    ((::wxSizer*)__Instance)->RepositionChildren(__arg0);
}

void wxSharp::Sizer::RecalcSizes()
{
    ((::wxSizer*)__Instance)->RecalcSizes();
}

void wxSharp::Sizer::Layout()
{
    ((::wxSizer*)__Instance)->Layout();
}

::wxSharp::Size wxSharp::Sizer::ComputeFittingClientSize(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ::wxSize __ret = ((::wxSizer*)__Instance)->ComputeFittingClientSize(__arg0);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::Sizer::ComputeFittingWindowSize(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ::wxSize __ret = ((::wxSizer*)__Instance)->ComputeFittingWindowSize(__arg0);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size wxSharp::Sizer::Fit(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ::wxSize __ret = ((::wxSizer*)__Instance)->Fit(__arg0);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::Sizer::FitInside(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ((::wxSizer*)__Instance)->FitInside(__arg0);
}

void wxSharp::Sizer::SetSizeHints(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ((::wxSizer*)__Instance)->SetSizeHints(__arg0);
}

void wxSharp::Sizer::SetDimension(const ::wxSharp::Point& pos, const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxPoint*)pos.__Instance;
    auto &__arg1 = *(::wxSize*)size.__Instance;
    ((::wxSizer*)__Instance)->SetDimension(__arg0, __arg1);
}

void wxSharp::Sizer::SetDimension(int x, int y, int width, int height)
{
    ((::wxSizer*)__Instance)->SetDimension(x, y, width, height);
}

unsigned long wxSharp::Sizer::GetItemCount() const
{
    ::size_t __ret = ((::wxSizer*)__Instance)->GetItemCount();
    return __ret;
}

bool wxSharp::Sizer::IsEmpty() const
{
    bool __ret = ((::wxSizer*)__Instance)->IsEmpty();
    return __ret;
}

::wxSharp::SizerItem* wxSharp::Sizer::GetItem(::wxSharp::Window* window, bool recursive)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->GetItem(__arg0, recursive);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::GetItem(::wxSharp::Sizer* sizer, bool recursive)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->GetItem(__arg0, recursive);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::GetItem(unsigned long index)
{
    auto __arg0 = (::size_t)index;
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->GetItem(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerItem* wxSharp::Sizer::GetItemById(int id, bool recursive)
{
    ::wxSizerItem* __ret = ((::wxSizer*)__Instance)->GetItemById(id, recursive);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

bool wxSharp::Sizer::Show(::wxSharp::Window* window, bool show, bool recursive)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Show(__arg0, show, recursive);
    return __ret;
}

bool wxSharp::Sizer::Show(::wxSharp::Sizer* sizer, bool show, bool recursive)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Show(__arg0, show, recursive);
    return __ret;
}

bool wxSharp::Sizer::Show(unsigned long index, bool show)
{
    auto __arg0 = (::size_t)index;
    bool __ret = ((::wxSizer*)__Instance)->Show(__arg0, show);
    return __ret;
}

bool wxSharp::Sizer::Hide(::wxSharp::Sizer* sizer, bool recursive)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Hide(__arg0, recursive);
    return __ret;
}

bool wxSharp::Sizer::Hide(::wxSharp::Window* window, bool recursive)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->Hide(__arg0, recursive);
    return __ret;
}

bool wxSharp::Sizer::Hide(unsigned long index)
{
    auto __arg0 = (::size_t)index;
    bool __ret = ((::wxSizer*)__Instance)->Hide(__arg0);
    return __ret;
}

bool wxSharp::Sizer::IsShown(::wxSharp::Window* window) const
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->IsShown(__arg0);
    return __ret;
}

bool wxSharp::Sizer::IsShown(::wxSharp::Sizer* sizer) const
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxSizer*)__Instance)->IsShown(__arg0);
    return __ret;
}

bool wxSharp::Sizer::IsShown(unsigned long index) const
{
    auto __arg0 = (::size_t)index;
    bool __ret = ((::wxSizer*)__Instance)->IsShown(__arg0);
    return __ret;
}

void wxSharp::Sizer::ShowItems(bool show)
{
    ((::wxSizer*)__Instance)->ShowItems(show);
}

void wxSharp::Sizer::Show(bool show)
{
    ((::wxSizer*)__Instance)->Show(show);
}

bool wxSharp::Sizer::AreAnyItemsShown() const
{
    bool __ret = ((::wxSizer*)__Instance)->AreAnyItemsShown();
    return __ret;
}

wxSharp::Sizer::Sizer(const ::wxSharp::Sizer& _0)
    : wxSharp::Object((::wxObject*)nullptr)
{
    __ownsNativeInstance = true;
}

wxSharp::GridSizer::GridSizer(::wxGridSizer* instance, bool ownNativeInstance)
    : wxSharp::Sizer((::wxSizer*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GridSizer::~GridSizer()
{
}

wxSharp::GridSizer::GridSizer(int cols, int vgap, int hgap)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGridSizer(cols, vgap, hgap);
}

wxSharp::GridSizer::GridSizer(int cols, const ::wxSharp::Size& gap)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg1 = *(::wxSize*)gap.__Instance;
    __Instance = new ::wxGridSizer(cols, __arg1);
}

wxSharp::GridSizer::GridSizer(int rows, int cols, int vgap, int hgap)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGridSizer(rows, cols, vgap, hgap);
}

wxSharp::GridSizer::GridSizer(int rows, int cols, const ::wxSharp::Size& gap)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg2 = *(::wxSize*)gap.__Instance;
    __Instance = new ::wxGridSizer(rows, cols, __arg2);
}

void wxSharp::GridSizer::RepositionChildren(const ::wxSharp::Size& minSize)
{
    auto &__arg0 = *(::wxSize*)minSize.__Instance;
    ((::wxGridSizer*)__Instance)->RepositionChildren(__arg0);
}

::wxSharp::Size wxSharp::GridSizer::CalcMin()
{
    ::wxSize __ret = ((::wxGridSizer*)__Instance)->CalcMin();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::GridSizer::SetCols(int cols)
{
    ((::wxGridSizer*)__Instance)->SetCols(cols);
}

void wxSharp::GridSizer::SetRows(int rows)
{
    ((::wxGridSizer*)__Instance)->SetRows(rows);
}

void wxSharp::GridSizer::SetVGap(int gap)
{
    ((::wxGridSizer*)__Instance)->SetVGap(gap);
}

void wxSharp::GridSizer::SetHGap(int gap)
{
    ((::wxGridSizer*)__Instance)->SetHGap(gap);
}

int wxSharp::GridSizer::GetCols() const
{
    int __ret = ((::wxGridSizer*)__Instance)->GetCols();
    return __ret;
}

int wxSharp::GridSizer::GetRows() const
{
    int __ret = ((::wxGridSizer*)__Instance)->GetRows();
    return __ret;
}

int wxSharp::GridSizer::GetVGap() const
{
    int __ret = ((::wxGridSizer*)__Instance)->GetVGap();
    return __ret;
}

int wxSharp::GridSizer::GetHGap() const
{
    int __ret = ((::wxGridSizer*)__Instance)->GetHGap();
    return __ret;
}

int wxSharp::GridSizer::GetEffectiveColsCount() const
{
    int __ret = ((::wxGridSizer*)__Instance)->GetEffectiveColsCount();
    return __ret;
}

int wxSharp::GridSizer::GetEffectiveRowsCount() const
{
    int __ret = ((::wxGridSizer*)__Instance)->GetEffectiveRowsCount();
    return __ret;
}

int wxSharp::GridSizer::CalcRowsCols(int& rows, int& cols) const
{
    int& __arg0 = (int&)rows;
    int& __arg1 = (int&)cols;
    int __ret = ((::wxGridSizer*)__Instance)->CalcRowsCols(__arg0, __arg1);
    rows = __arg0;
    cols = __arg1;
    return __ret;
}

wxSharp::GridSizer::GridSizer(const ::wxSharp::GridSizer& _0)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGridSizer*)_0.__Instance;
    __Instance = new ::wxGridSizer(__arg0);
}

wxSharp::FlexGridSizer::FlexGridSizer(::wxFlexGridSizer* instance, bool ownNativeInstance)
    : wxSharp::GridSizer((::wxGridSizer*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::FlexGridSizer::~FlexGridSizer()
{
}

wxSharp::FlexGridSizer::FlexGridSizer(int cols, int vgap, int hgap)
    : wxSharp::GridSizer((::wxGridSizer*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxFlexGridSizer(cols, vgap, hgap);
}

wxSharp::FlexGridSizer::FlexGridSizer(int cols, const ::wxSharp::Size& gap)
    : wxSharp::GridSizer((::wxGridSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg1 = *(::wxSize*)gap.__Instance;
    __Instance = new ::wxFlexGridSizer(cols, __arg1);
}

wxSharp::FlexGridSizer::FlexGridSizer(int rows, int cols, int vgap, int hgap)
    : wxSharp::GridSizer((::wxGridSizer*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxFlexGridSizer(rows, cols, vgap, hgap);
}

wxSharp::FlexGridSizer::FlexGridSizer(int rows, int cols, const ::wxSharp::Size& gap)
    : wxSharp::GridSizer((::wxGridSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg2 = *(::wxSize*)gap.__Instance;
    __Instance = new ::wxFlexGridSizer(rows, cols, __arg2);
}

void wxSharp::FlexGridSizer::AddGrowableRow(unsigned long idx, int proportion)
{
    auto __arg0 = (::size_t)idx;
    ((::wxFlexGridSizer*)__Instance)->AddGrowableRow(__arg0, proportion);
}

void wxSharp::FlexGridSizer::RemoveGrowableRow(unsigned long idx)
{
    auto __arg0 = (::size_t)idx;
    ((::wxFlexGridSizer*)__Instance)->RemoveGrowableRow(__arg0);
}

void wxSharp::FlexGridSizer::AddGrowableCol(unsigned long idx, int proportion)
{
    auto __arg0 = (::size_t)idx;
    ((::wxFlexGridSizer*)__Instance)->AddGrowableCol(__arg0, proportion);
}

void wxSharp::FlexGridSizer::RemoveGrowableCol(unsigned long idx)
{
    auto __arg0 = (::size_t)idx;
    ((::wxFlexGridSizer*)__Instance)->RemoveGrowableCol(__arg0);
}

bool wxSharp::FlexGridSizer::IsRowGrowable(unsigned long idx)
{
    auto __arg0 = (::size_t)idx;
    bool __ret = ((::wxFlexGridSizer*)__Instance)->IsRowGrowable(__arg0);
    return __ret;
}

bool wxSharp::FlexGridSizer::IsColGrowable(unsigned long idx)
{
    auto __arg0 = (::size_t)idx;
    bool __ret = ((::wxFlexGridSizer*)__Instance)->IsColGrowable(__arg0);
    return __ret;
}

void wxSharp::FlexGridSizer::SetFlexibleDirection(int direction)
{
    ((::wxFlexGridSizer*)__Instance)->SetFlexibleDirection(direction);
}

int wxSharp::FlexGridSizer::GetFlexibleDirection() const
{
    int __ret = ((::wxFlexGridSizer*)__Instance)->GetFlexibleDirection();
    return __ret;
}

void wxSharp::FlexGridSizer::SetNonFlexibleGrowMode(::wxSharp::FlexSizerGrowMode mode)
{
    auto __arg0 = (::wxFlexSizerGrowMode)mode;
    ((::wxFlexGridSizer*)__Instance)->SetNonFlexibleGrowMode(__arg0);
}

::wxSharp::FlexSizerGrowMode wxSharp::FlexGridSizer::GetNonFlexibleGrowMode() const
{
    ::wxFlexSizerGrowMode __ret = ((::wxFlexGridSizer*)__Instance)->GetNonFlexibleGrowMode();
    return (::wxSharp::FlexSizerGrowMode)__ret;
}

void wxSharp::FlexGridSizer::RepositionChildren(const ::wxSharp::Size& minSize)
{
    auto &__arg0 = *(::wxSize*)minSize.__Instance;
    ((::wxFlexGridSizer*)__Instance)->RepositionChildren(__arg0);
}

::wxSharp::Size wxSharp::FlexGridSizer::CalcMin()
{
    ::wxSize __ret = ((::wxFlexGridSizer*)__Instance)->CalcMin();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

wxSharp::BoxSizer::BoxSizer(::wxBoxSizer* instance, bool ownNativeInstance)
    : wxSharp::Sizer((::wxSizer*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::BoxSizer::~BoxSizer()
{
}

wxSharp::BoxSizer::BoxSizer(::wxSharp::SizerOrientation orient)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = (int)orient;
    __Instance = new ::wxBoxSizer(__arg0);
}

::wxSharp::SizerItem* wxSharp::BoxSizer::AddSpacer(int size)
{
    ::wxSizerItem* __ret = ((::wxBoxSizer*)__Instance)->AddSpacer(size);
    return (__ret == nullptr) ? nullptr : new wxSharp::SizerItem((::wxSizerItem*)__ret);
}

::wxSharp::SizerOrientation wxSharp::BoxSizer::GetOrientation() const
{
    int __ret = ((::wxBoxSizer*)__Instance)->GetOrientation();
    return (::wxSharp::SizerOrientation)__ret;
}

bool wxSharp::BoxSizer::IsVertical() const
{
    bool __ret = ((::wxBoxSizer*)__Instance)->IsVertical();
    return __ret;
}

void wxSharp::BoxSizer::SetOrientation(::wxSharp::SizerOrientation orient)
{
    auto __arg0 = (int)orient;
    ((::wxBoxSizer*)__Instance)->SetOrientation(__arg0);
}

::wxSharp::Size wxSharp::BoxSizer::CalcMin()
{
    ::wxSize __ret = ((::wxBoxSizer*)__Instance)->CalcMin();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::BoxSizer::RepositionChildren(const ::wxSharp::Size& minSize)
{
    auto &__arg0 = *(::wxSize*)minSize.__Instance;
    ((::wxBoxSizer*)__Instance)->RepositionChildren(__arg0);
}

bool wxSharp::BoxSizer::InformFirstDirection(int direction, int size, int availableOtherDir)
{
    bool __ret = ((::wxBoxSizer*)__Instance)->InformFirstDirection(direction, size, availableOtherDir);
    return __ret;
}

wxSharp::BoxSizer::BoxSizer(const ::wxSharp::BoxSizer& _0)
    : wxSharp::Sizer((::wxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxBoxSizer*)_0.__Instance;
    __Instance = new ::wxBoxSizer(__arg0);
}

wxSharp::StaticBoxSizer::StaticBoxSizer(::wxStaticBoxSizer* instance, bool ownNativeInstance)
    : wxSharp::BoxSizer((::wxBoxSizer*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::StaticBoxSizer::~StaticBoxSizer()
{
}

wxSharp::StaticBoxSizer::StaticBoxSizer(::wxSharp::SizerOrientation orient, ::wxSharp::Window* win, const char* label)
    : wxSharp::BoxSizer((::wxBoxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    auto __arg0 = (int)orient;
    auto __arg1 = win ? (::wxWindow*)win->__Instance : nullptr;
    auto __arg2 = label;
    __Instance = new ::wxStaticBoxSizer(__arg0, __arg1, __arg2);
}

::wxSharp::Size wxSharp::StaticBoxSizer::CalcMin()
{
    ::wxSize __ret = ((::wxStaticBoxSizer*)__Instance)->CalcMin();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::StaticBoxSizer::RepositionChildren(const ::wxSharp::Size& minSize)
{
    auto &__arg0 = *(::wxSize*)minSize.__Instance;
    ((::wxStaticBoxSizer*)__Instance)->RepositionChildren(__arg0);
}

void wxSharp::StaticBoxSizer::ShowItems(bool show)
{
    ((::wxStaticBoxSizer*)__Instance)->ShowItems(show);
}

bool wxSharp::StaticBoxSizer::AreAnyItemsShown() const
{
    bool __ret = ((::wxStaticBoxSizer*)__Instance)->AreAnyItemsShown();
    return __ret;
}

bool wxSharp::StaticBoxSizer::Detach(::wxSharp::Window* window)
{
    auto __arg0 = window ? (::wxWindow*)window->__Instance : nullptr;
    bool __ret = ((::wxStaticBoxSizer*)__Instance)->Detach(__arg0);
    return __ret;
}

bool wxSharp::StaticBoxSizer::Detach(::wxSharp::Sizer* sizer)
{
    auto __arg0 = sizer ? (::wxSizer*)sizer->__Instance : nullptr;
    bool __ret = ((::wxStaticBoxSizer*)__Instance)->Detach(__arg0);
    return __ret;
}

bool wxSharp::StaticBoxSizer::Detach(int index)
{
    bool __ret = ((::wxStaticBoxSizer*)__Instance)->Detach(index);
    return __ret;
}

wxSharp::StdDialogButtonSizer::StdDialogButtonSizer(::wxStdDialogButtonSizer* instance, bool ownNativeInstance)
    : wxSharp::BoxSizer((::wxBoxSizer*)instance, ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::StdDialogButtonSizer::~StdDialogButtonSizer()
{
}

wxSharp::StdDialogButtonSizer::StdDialogButtonSizer()
    : wxSharp::BoxSizer((::wxBoxSizer*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxStdDialogButtonSizer();
}

void wxSharp::StdDialogButtonSizer::Realize()
{
    ((::wxStdDialogButtonSizer*)__Instance)->Realize();
}

