// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#pragma once

#include <quickjs.h>

enum class C2S : unsigned int
{
    C2S_NAME = 1,
    C2S_CSS_SYNTAX = 2,
    C2S_HTML_SYNTAX = 4
};

class Color
{
public:

    Color(::Ozone::Color* instance, bool ownNativeInstance = false);

    Color();

    Color(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha);

    Color(unsigned long colRGB);

    Color(const char* colourName);

    Color(const wchar_t* colourName);

    Color(const ::Ozone::Ozone::Color& _0);

    ~Color();

    bool operator==(const ::Ozone::Ozone::Color& col) const;

    bool operator!=(const ::Ozone::Ozone::Color& col) const;

    virtual unsigned char Red() const;

    virtual unsigned char Green() const;

    virtual unsigned char Blue() const;

    virtual unsigned char Alpha() const;

    void Set(unsigned char red, unsigned char green, unsigned char blue, unsigned char alpha);

    bool Set(const char* str);

    void Set(unsigned long colRGB);

    virtual bool IsSolid() const;

    virtual const char* GetAsString(long flags) const;

    void SetRGB(unsigned int colRGB);

    void SetRGBA(unsigned int colRGBA);

    unsigned int GetRGB() const;

    unsigned int GetRGBA() const;

    double GetLuminance() const;

    ::Ozone::Ozone::Color ChangeLightness(int ialpha) const;

    operator ::Ozone::Ozone::Color(unsigned long colRGB);

    static unsigned char AlphaBlend(unsigned char fg, unsigned char bg, double alpha);

protected:

    bool __OwnsNativeInstance;
};
