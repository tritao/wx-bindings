// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
import * as Ozone from "Ozone";
declare module "Ozone"
{
    namespace Ozone
    {
        class AppConsole extends Ozone.Ozone.EvtHandler
        {

            constructor();

            constructor(_0: Ozone.AppConsole);

            CheckSignal(): void;

            CallOnInit(): boolean;

            OnInit(): boolean;

            OnRun(): number;

            OnLaunched(): void;

            OnExit(): number;

            CleanUp(): void;

            OnFatalException(): void;

            Exit(): void;

            GetAppName(): string;

            SetAppName(name: string): void;

            GetAppDisplayName(): string;

            SetAppDisplayName(name: string): void;

            GetClassName(): string;

            SetClassName(name: string): void;

            SetVendorName(name: string): void;

            SetVendorDisplayName(name: string): void;

            SetCLocale(): void;

            OnUnhandledException(): void;

            OnExceptionInMainLoop(): boolean;

            StoreCurrentException(): boolean;

            RethrowStoredException(): void;

            ProcessPendingEvents(): void;

            HasPendingEvents(): boolean;

            SuspendProcessingOfPendingEvents(): void;

            ResumeProcessingOfPendingEvents(): void;

            RemovePendingEventHandler(toRemove: Ozone.EvtHandler): void;

            AppendPendingEventHandler(toAppend: Ozone.EvtHandler): void;

            DelayPendingEventHandler(toDelay: Ozone.EvtHandler): void;

            DeletePendingEvents(): void;

            ScheduleForDestruction(object: Ozone.Object): void;

            IsScheduledForDestruction(object: Ozone.Object): boolean;

            Pending(): boolean;

            Dispatch(): boolean;

            MainLoop(): number;

            ExitMainLoop(): void;

            Yield(onlyIfNeeded: boolean): boolean;

            WakeUpIdle(): void;

            ProcessIdle(): boolean;

            UsesEventLoop(): boolean;

            get_argc(): number;

            set_argc(value: number): void;

            IsMainLoopRunning(): boolean;

            CheckBuildOptions(optionsSignature: string, componentName: string): boolean;

            GetInstance(): Ozone.AppConsole;

            SetInstance(app: Ozone.AppConsole): void;
        }

        class App extends AppConsole
        {

            constructor();

            constructor(_0: Ozone.App);

            SetNativeTheme(theme: string): boolean;

            OnInitGui(): boolean;

            WakeUpIdle(): void;

            CleanUp(): void;

            EventsPending(): boolean;

            DoIdle(): boolean;

            OnRun(): number;

            OnExit(): number;

            SafeYield(win: Ozone.Window, onlyIfNeeded: boolean): boolean;

            SafeYieldFor(win: Ozone.Window, eventsToProcess: number): boolean;

            ProcessIdle(): boolean;

            UsesEventLoop(): boolean;

            IsActive(): boolean;

            SetTopWindow(win: Ozone.Window): void;

            GetTopWindow(): Ozone.Window;

            SetExitOnFrameDelete(flag: boolean): void;

            GetExitOnFrameDelete(): boolean;

            SetUseBestVisual(flag: boolean, forceTrueColour: boolean): void;

            GetUseBestVisual(): boolean;

            SetPrintMode(_0: number): void;

            GetPrintMode(): number;

            SetActive(isActive: boolean, lastFocus: Ozone.Window): void;
        }

        export function Exit(): void;
        export function WakeUpIdle(): void;
        export function CreateApp(): Ozone.AppConsole;
    }
}
