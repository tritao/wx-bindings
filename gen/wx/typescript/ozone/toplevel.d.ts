// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
import * as Ozone from "Ozone";
declare module "Ozone"
{
    namespace Ozone
    {
        enum FrameStyle
        {
            CENTRE = 1,
            FRAME_NO_TASKBAR = 2,
            FRAME_TOOL_WINDOW = 4,
            FRAME_FLOAT_ON_PARENT = 8,
            FRAME_SHAPED = 16,
            RESIZE_BORDER = 64,
            TINY_CAPTION = 128,
            MAXIMIZE_BOX = 512,
            MINIMIZE_BOX = 1024,
            SYSTEM_MENU = 2048,
            CLOSE_BOX = 4096,
            MAXIMIZE = 8192,
            ICONIZE = 16384,
            MINIMIZE = 16384,
            STAY_ON_TOP = 32768,
            CLIP_CHILDREN = 4194304,
            CAPTION = 536870912,
            DEFAULT_FRAME_STYLE = 541072960
        }

        enum FullscreenMode
        {
            NOMENUBAR = 0x1,
            NOTOOLBAR = 0x2,
            NOSTATUSBAR = 0x4,
            NOBORDER = 0x8,
            NOCAPTION = 0x10,
            ALL = 31
        }

        enum UserAttention
        {
            INFO = 1,
            ERROR = 2
        }

        class TopLevelWindow extends Ozone.Ozone.NonOwnedWindow
        {

            constructor();

            constructor(parent: Ozone.Window, winid: number, title: string, pos: Ozone.Point, size: Ozone.Size, style: number, name: string);

            constructor(_0: Ozone.TopLevelWindow);

            Create(parent: Ozone.Window, id: number, title: string, pos: Ozone.Point, size: Ozone.Size, style: number, name: string): boolean;

            Maximize(maximize: boolean): void;

            IsMaximized(): boolean;

            Iconize(iconize: boolean): void;

            IsIconized(): boolean;

            Restore(): void;

            EnableCloseButton(enable: boolean): boolean;

            ShowWithoutActivating(): void;

            ShowFullScreen(show: boolean, style: number): boolean;

            IsFullScreen(): boolean;

            RequestUserAttention(flags: number): void;

            SetWindowStyleFlag(style: number): void;

            Show(show: boolean): boolean;

            Raise(): void;

            IsActive(): boolean;

            SetTitle(title: string): void;

            GetTitle(): string;

            SetLabel(label: string): void;

            GetLabel(): string;

            GetDefaultAttributes(): Ozone.VisualAttributes;

            SetTransparent(alpha: number): boolean;

            CanSetTransparent(): boolean;

            AddGrab(): void;

            RemoveGrab(): void;

            IsGrabbed(): boolean;

            Refresh(eraseBackground: boolean, rect: Ozone.Rect): void;

            SetIconizeState(iconic: boolean): void;

            IsAlwaysMaximized(): boolean;

            EnableFullScreenView(_0: boolean): boolean;

            EnableMaximizeButton(_0: boolean): boolean;

            EnableMinimizeButton(_0: boolean): boolean;

            ShouldPreventAppExit(): boolean;

            CentreOnScreen(dir: number): void;

            CenterOnScreen(dir: number): void;

            GetDefaultItem(): Ozone.Window;

            SetDefaultItem(win: Ozone.Window): Ozone.Window;

            GetTmpDefaultItem(): Ozone.Window;

            SetTmpDefaultItem(win: Ozone.Window): Ozone.Window;

            Destroy(): boolean;

            IsTopLevel(): boolean;

            IsTopNavigationDomain(kind: Ozone.Window.NavigationKind): boolean;

            IsVisible(): boolean;

            Layout(): boolean;

            DoUpdateWindowUI(event: Ozone.UpdateUIEvent): void;

            SetMinSize(minSize: Ozone.Size): void;

            SetMaxSize(maxSize: Ozone.Size): void;

            SetRepresentedFilename(_0: string): void;

            get_m_fsIsShowing(): boolean;

            set_m_fsIsShowing(value: boolean): void;

            get_m_fsSaveGdkFunc(): number;

            set_m_fsSaveGdkFunc(value: number): void;

            get_m_fsSaveGdkDecor(): number;

            set_m_fsSaveGdkDecor(value: number): void;

            get_m_fsSaveFrame(): Ozone.Rect;

            set_m_fsSaveFrame(value: Ozone.Rect): void;

            get_m_gdkFunc(): number;

            set_m_gdkFunc(value: number): void;

            get_m_gdkDecor(): number;

            set_m_gdkDecor(value: number): void;

            get_m_urgency_hint(): number;

            set_m_urgency_hint(value: number): void;

            get_m_netFrameExtentsTimerId(): number;

            set_m_netFrameExtentsTimerId(value: number): void;

            GetDefaultSize(): Ozone.Size;
        }
    }
}
