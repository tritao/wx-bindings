// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
import * as Ozone from "Ozone";
declare module "Ozone"
{
    namespace Ozone
    {
        enum WebViewReloadFlags
        {
            WEBVIEW_RELOAD_DEFAULT = 0,
            WEBVIEW_RELOAD_NO_CACHE = 1
        }

        enum WebViewZoomType
        {
            WEBVIEW_ZOOM_TYPE_LAYOUT = 0,
            WEBVIEW_ZOOM_TYPE_TEXT = 1
        }

        enum WebViewZoom
        {
            WEBVIEW_ZOOM_TINY = 0,
            WEBVIEW_ZOOM_SMALL = 1,
            WEBVIEW_ZOOM_MEDIUM = 2,
            WEBVIEW_ZOOM_LARGE = 3,
            WEBVIEW_ZOOM_LARGEST = 4
        }

        enum WebViewNavigationActionFlags
        {
            WEBVIEW_NAV_ACTION_NONE = 0,
            WEBVIEW_NAV_ACTION_USER = 1,
            WEBVIEW_NAV_ACTION_OTHER = 2
        }

        enum WebViewFindFlags
        {
            WEBVIEW_FIND_WRAP = 0x1,
            WEBVIEW_FIND_ENTIRE_WORD = 0x2,
            WEBVIEW_FIND_MATCH_CASE = 0x4,
            WEBVIEW_FIND_HIGHLIGHT_RESULT = 0x8,
            WEBVIEW_FIND_BACKWARDS = 0x10,
            WEBVIEW_FIND_DEFAULT = 0
        }

        enum WebViewNavigationError
        {
            WEBVIEW_NAV_ERR_CONNECTION = 0,
            WEBVIEW_NAV_ERR_CERTIFICATE = 1,
            WEBVIEW_NAV_ERR_AUTH = 2,
            WEBVIEW_NAV_ERR_SECURITY = 3,
            WEBVIEW_NAV_ERR_NOT_FOUND = 4,
            WEBVIEW_NAV_ERR_REQUEST = 5,
            WEBVIEW_NAV_ERR_USER_CANCELLED = 6,
            WEBVIEW_NAV_ERR_OTHER = 7
        }

        class WebViewHandler
        {

            constructor(scheme: string);

            constructor(_0: Ozone.WebViewHandler);

            GetName(): string;

            SetSecurityURL(url: string): void;

            GetSecurityURL(): string;
        }

        class WebView
        {

            constructor();

            constructor(_0: Ozone.WebView);

            Create(parent: Ozone.Window, id: number, url: string, pos: Ozone.Point, size: Ozone.Size, style: number, name: string): boolean;

            EnableContextMenu(enable: boolean): void;

            EnableAccessToDevTools(_0: boolean): void;

            GetCurrentTitle(): string;

            GetCurrentURL(): string;

            GetPageSource(): string;

            GetPageText(): string;

            IsBusy(): boolean;

            IsContextMenuEnabled(): boolean;

            IsAccessToDevToolsEnabled(): boolean;

            IsEditable(): boolean;

            LoadURL(url: string): void;

            Print(): void;

            Reload(flags: Ozone.WebViewReloadFlags): void;

            RunScript(javascript: string, output: string): boolean;

            SetEditable(enable: boolean): void;

            SetPage(html: string, baseUrl: string): void;

            Stop(): void;

            CanGoBack(): boolean;

            CanGoForward(): boolean;

            GoBack(): void;

            GoForward(): void;

            ClearHistory(): void;

            EnableHistory(enable: boolean): void;

            CanSetZoomType(type: Ozone.WebViewZoomType): boolean;

            GetZoom(): Ozone.WebViewZoom;

            GetZoomFactor(): number;

            GetZoomType(): Ozone.WebViewZoomType;

            SetZoom(zoom: Ozone.WebViewZoom): void;

            SetZoomFactor(zoom: number): void;

            SetZoomType(zoomType: Ozone.WebViewZoomType): void;

            SelectAll(): void;

            HasSelection(): boolean;

            DeleteSelection(): void;

            GetSelectedText(): string;

            GetSelectedSource(): string;

            ClearSelection(): void;

            CanCut(): boolean;

            CanCopy(): boolean;

            CanPaste(): boolean;

            Cut(): void;

            Copy(): void;

            Paste(): void;

            CanUndo(): boolean;

            CanRedo(): boolean;

            Undo(): void;

            Redo(): void;

            GetNativeBackend(): void;

            Find(text: string, flags: number): number;

            New(backend: string): Ozone.WebView;

            New(parent: Ozone.Window, id: number, url: string, pos: Ozone.Point, size: Ozone.Size, backend: string, style: number, name: string): Ozone.WebView;

            IsBackendAvailable(backend: string): boolean;
        }

        class WebViewEvent extends Ozone.Ozone.NotifyEvent
        {

            constructor();

            constructor(type: number, id: number, url: string, target: string, flags: Ozone.WebViewNavigationActionFlags);

            constructor(_0: Ozone.WebViewEvent);

            GetNavigationAction(): Ozone.WebViewNavigationActionFlags;

            Clone(): Ozone.Event;
        }
    }
}
