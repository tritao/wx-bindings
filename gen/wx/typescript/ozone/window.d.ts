// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
import * as Ozone from "Ozone";
declare module "Ozone"
{
    namespace Ozone
    {
        enum WindowVariant
        {
            NORMAL = 0,
            SMALL = 1,
            MINI = 2,
            LARGE = 3,
            MAX = 4
        }

        enum ShowEffect
        {
            NONE = 0,
            ROLL_TO_LEFT = 1,
            ROLL_TO_RIGHT = 2,
            ROLL_TO_TOP = 3,
            ROLL_TO_BOTTOM = 4,
            SLIDE_TO_LEFT = 5,
            SLIDE_TO_RIGHT = 6,
            SLIDE_TO_TOP = 7,
            SLIDE_TO_BOTTOM = 8,
            BLEND = 9,
            EXPAND = 10,
            MAX = 11
        }

        enum BackgroundStyle
        {
        }

        enum Border
        {
        }

        enum HitTest
        {
        }

        enum KeyType
        {
        }

        enum SendEventFlags
        {
            POST = 1
        }

        enum TouchMode
        {
            NONE = 0x0,
            VERTICAL_PAN_GESTURE = 0x1,
            HORIZONTAL_PAN_GESTURE = 0x2,
            PAN_GESTURES = 3,
            ZOOM_GESTURE = 0x4,
            ROTATE_GESTURE = 0x8,
            PRESS_GESTURES = 0x10,
            ALL_GESTURES = 0x1f
        }

        class VisualAttributes
        {

            constructor(_0: Ozone.VisualAttributes);

            constructor();

            get_colFg(): Ozone.Color;

            set_colFg(value: Ozone.Color): void;

            get_colBg(): Ozone.Color;

            set_colBg(value: Ozone.Color): void;
        }

        class WindowListNode
        {

            constructor(_0: Ozone.WindowListNode);

            GetNext(): Ozone.WindowListNode;

            GetPrevious(): Ozone.WindowListNode;

            GetData(): Ozone.Window;

            SetData(data: Ozone.Window): void;
        }

        class Window extends Ozone.Ozone.EvtHandler
        {

            enum ScrollDir
            {
                Horz = 0,
                Vert = 1,
                Max = 2
            }

            enum NavigationKind
            {
                Tab = 0,
                Accel = 1
            }

            constructor();

            constructor(parent: Ozone.Window, id: number, pos: Ozone.Point, size: Ozone.Size, style: number, name: string);

            constructor(_0: Ozone.Window);

            Create(parent: Ozone.Window, id: number, pos: Ozone.Point, size: Ozone.Size, style: number, name: string): boolean;

            Raise(): void;

            Lower(): void;

            Show(show: boolean): boolean;

            IsShown(): boolean;

            IsRetained(): boolean;

            SetFocus(): void;

            SetCanFocus(canFocus: boolean): void;

            WarpPointer(x: number, y: number): void;

            EnableTouchEvents(eventsMask: number): boolean;

            Refresh(eraseBackground: boolean, rect: Ozone.Rect): void;

            Update(): void;

            ClearBackground(): void;

            SetBackgroundColour(colour: Ozone.Color): boolean;

            SetForegroundColour(colour: Ozone.Color): boolean;

            SetBackgroundStyle(style: Ozone.BackgroundStyle): boolean;

            IsTransparentBackgroundSupported(reason: string): boolean;

            GetCharHeight(): number;

            GetCharWidth(): number;

            GetContentScaleFactor(): number;

            GetDPIScaleFactor(): number;

            SetScrollbar(orient: number, pos: number, thumbVisible: number, range: number, refresh: boolean): void;

            SetScrollPos(orient: number, pos: number, refresh: boolean): void;

            GetScrollPos(orient: number): number;

            GetScrollThumb(orient: number): number;

            GetScrollRange(orient: number): number;

            ScrollWindow(dx: number, dy: number, rect: Ozone.Rect): void;

            ScrollLines(lines: number): boolean;

            ScrollPages(pages: number): boolean;

            AdjustForLayoutDirection(x: number, width: number, widthTotal: number): number;

            DoIsExposed(x: number, y: number): boolean;

            DoIsExposed(x: number, y: number, w: number, h: number): boolean;

            SetDoubleBuffered(on: boolean): void;

            IsDoubleBuffered(): boolean;

            SetLabel(label: string): void;

            GetLabel(): string;

            OnInternalIdle(): void;

            PreCreation(parent: Ozone.Window, pos: Ozone.Point, size: Ozone.Size): boolean;

            PostCreation(): void;

            DoAddChild(child: Ozone.Window): void;

            IsOfStandardClass(): boolean;

            Close(force: boolean): boolean;

            Destroy(): boolean;

            DestroyChildren(): boolean;

            IsBeingDeleted(): boolean;

            SetName(name: string): void;

            GetName(): string;

            SetWindowVariant(variant: Ozone.WindowVariant): void;

            GetWindowVariant(): Ozone.WindowVariant;

            SetId(winid: number): void;

            GetId(): number;

            SetSize(x: number, y: number, width: number, height: number, sizeFlags: number): void;

            SetSize(width: number, height: number): void;

            SetSize(size: Ozone.Size): void;

            SetSize(rect: Ozone.Rect, sizeFlags: number): void;

            Move(x: number, y: number, flags: number): void;

            Move(pt: Ozone.Point, flags: number): void;

            SetPosition(pt: Ozone.Point): void;

            SetClientSize(width: number, height: number): void;

            SetClientSize(size: Ozone.Size): void;

            SetClientSize(rect: Ozone.Rect): void;

            GetPosition(): Ozone.Point;

            GetScreenPosition(): Ozone.Point;

            GetSize(): Ozone.Size;

            GetClientSize(): Ozone.Size;

            GetRect(): Ozone.Rect;

            GetScreenRect(): Ozone.Rect;

            GetClientAreaOrigin(): Ozone.Point;

            GetClientRect(): Ozone.Rect;

            ClientToWindowSize(size: Ozone.Size): Ozone.Size;

            WindowToClientSize(size: Ozone.Size): Ozone.Size;

            GetBestSize(): Ozone.Size;

            GetBestHeight(width: number): number;

            GetBestWidth(height: number): number;

            InvalidateBestSize(): void;

            CacheBestSize(size: Ozone.Size): void;

            GetEffectiveMinSize(): Ozone.Size;

            SetInitialSize(size: Ozone.Size): void;

            Centre(dir: number): void;

            Center(dir: number): void;

            CentreOnParent(dir: number): void;

            CenterOnParent(dir: number): void;

            Fit(): void;

            FitInside(): void;

            SetSizeHints(minW: number, minH: number, maxW: number, maxH: number, incW: number, incH: number): void;

            SetSizeHints(minSize: Ozone.Size, maxSize: Ozone.Size, incSize: Ozone.Size): void;

            SetMinSize(minSize: Ozone.Size): void;

            SetMaxSize(maxSize: Ozone.Size): void;

            SetMinClientSize(size: Ozone.Size): void;

            SetMaxClientSize(size: Ozone.Size): void;

            GetMinSize(): Ozone.Size;

            GetMaxSize(): Ozone.Size;

            GetMinClientSize(): Ozone.Size;

            GetMaxClientSize(): Ozone.Size;

            GetMinWidth(): number;

            GetMinHeight(): number;

            GetMaxWidth(): number;

            GetMaxHeight(): number;

            SetVirtualSize(size: Ozone.Size): void;

            SetVirtualSize(x: number, y: number): void;

            GetVirtualSize(): Ozone.Size;

            DoSetVirtualSize(x: number, y: number): void;

            DoGetVirtualSize(): Ozone.Size;

            GetBestVirtualSize(): Ozone.Size;

            GetWindowBorderSize(): Ozone.Size;

            InformFirstDirection(direction: number, size: number, availableOtherDir: number): boolean;

            SendSizeEvent(flags: number): void;

            SendSizeEventToParent(flags: number): void;

            PostSizeEvent(): void;

            PostSizeEventToParent(): void;

            BeginRepositioningChildren(): boolean;

            EndRepositioningChildren(): void;

            Hide(): boolean;

            ShowWithEffect(_0: Ozone.ShowEffect, _1: number): boolean;

            HideWithEffect(_0: Ozone.ShowEffect, _1: number): boolean;

            Enable(enable: boolean): boolean;

            Disable(): boolean;

            IsEnabled(): boolean;

            IsThisEnabled(): boolean;

            IsShownOnScreen(): boolean;

            SetWindowStyleFlag(style: number): void;

            GetWindowStyleFlag(): number;

            SetWindowStyle(style: number): void;

            GetWindowStyle(): number;

            HasFlag(flag: number): boolean;

            ToggleWindowStyle(flag: number): boolean;

            SetExtraStyle(exStyle: number): void;

            GetExtraStyle(): number;

            HasExtraStyle(exFlag: number): boolean;

            SetThemeEnabled(enableTheme: boolean): void;

            GetThemeEnabled(): boolean;

            SetFocusFromKbd(): void;

            HasFocus(): boolean;

            AcceptsFocus(): boolean;

            AcceptsFocusRecursively(): boolean;

            AcceptsFocusFromKeyboard(): boolean;

            DisableFocusFromKeyboard(): void;

            CanBeFocused(): boolean;

            IsFocusable(): boolean;

            CanAcceptFocus(): boolean;

            CanAcceptFocusFromKeyboard(): boolean;

            EnableVisibleFocus(_0: boolean): void;

            NavigateIn(flags: number): boolean;

            Navigate(flags: number): boolean;

            HandleAsNavigationKey(event: Ozone.KeyEvent): boolean;

            MoveBeforeInTabOrder(win: Ozone.Window): void;

            MoveAfterInTabOrder(win: Ozone.Window): void;

            GetPrevSibling(): Ozone.Window;

            GetNextSibling(): Ozone.Window;

            GetParent(): Ozone.Window;

            GetGrandParent(): Ozone.Window;

            IsTopLevel(): boolean;

            IsClientAreaChild(_0: Ozone.Window): boolean;

            FindWindow(winid: number): Ozone.Window;

            FindWindow(name: string): Ozone.Window;

            GetEventHandler(): Ozone.EvtHandler;

            SetEventHandler(handler: Ozone.EvtHandler): void;

            PushEventHandler(handler: Ozone.EvtHandler): void;

            PopEventHandler(deleteHandler: boolean): Ozone.EvtHandler;

            RemoveEventHandler(handler: Ozone.EvtHandler): boolean;

            ProcessWindowEvent(event: Ozone.Event): boolean;

            ProcessWindowEventLocally(event: Ozone.Event): boolean;

            HandleWindowEvent(event: Ozone.Event): boolean;

            SetNextHandler(handler: Ozone.EvtHandler): void;

            SetPreviousHandler(handler: Ozone.EvtHandler): void;

            Validate(): boolean;

            TransferDataToWindow(): boolean;

            TransferDataFromWindow(): boolean;

            InitDialog(): void;

            RegisterHotKey(hotkeyId: number, modifiers: number, keycode: number): boolean;

            UnregisterHotKey(hotkeyId: number): boolean;

            GetDPI(): Ozone.Size;

            FromDIP(sz: Ozone.Size): Ozone.Size;

            FromDIP(pt: Ozone.Point): Ozone.Point;

            FromDIP(d: number): number;

            ToDIP(sz: Ozone.Size): Ozone.Size;

            ToDIP(pt: Ozone.Point): Ozone.Point;

            ToDIP(d: number): number;

            ConvertPixelsToDialog(pt: Ozone.Point): Ozone.Point;

            ConvertDialogToPixels(pt: Ozone.Point): Ozone.Point;

            ConvertPixelsToDialog(sz: Ozone.Size): Ozone.Size;

            ConvertDialogToPixels(sz: Ozone.Size): Ozone.Size;

            CaptureMouse(): void;

            ReleaseMouse(): void;

            HasCapture(): boolean;

            RefreshRect(rect: Ozone.Rect, eraseBackground: boolean): void;

            Freeze(): void;

            Thaw(): void;

            IsFrozen(): boolean;

            PrepareDC(_0: Ozone.DC): void;

            GetUpdateClientRect(): Ozone.Rect;

            IsExposed(x: number, y: number): boolean;

            IsExposed(x: number, y: number, w: number, h: number): boolean;

            IsExposed(pt: Ozone.Point): boolean;

            IsExposed(rect: Ozone.Rect): boolean;

            GetDefaultAttributes(): Ozone.VisualAttributes;

            SetOwnBackgroundColour(colour: Ozone.Color): void;

            GetBackgroundColour(): Ozone.Color;

            InheritsBackgroundColour(): boolean;

            UseBgCol(): boolean;

            UseBackgroundColour(): boolean;

            SetOwnForegroundColour(colour: Ozone.Color): void;

            GetForegroundColour(): Ozone.Color;

            UseForegroundColour(): boolean;

            InheritsForegroundColour(): boolean;

            GetBackgroundStyle(): Ozone.BackgroundStyle;

            HasTransparentBackground(): boolean;

            ClientToScreen(pt: Ozone.Point): Ozone.Point;

            ScreenToClient(pt: Ozone.Point): Ozone.Point;

            HitTest(x: number, y: number): Ozone.HitTest;

            HitTest(pt: Ozone.Point): Ozone.HitTest;

            GetBorder(flags: number): Ozone.Border;

            GetBorder(): Ozone.Border;

            UpdateWindowUI(flags: number): void;

            DoUpdateWindowUI(event: Ozone.UpdateUIEvent): void;

            HasMultiplePages(): boolean;

            CanScroll(orient: number): boolean;

            HasScrollbar(orient: number): boolean;

            LineUp(): boolean;

            LineDown(): boolean;

            PageUp(): boolean;

            PageDown(): boolean;

            AlwaysShowScrollbars(_0: boolean, _1: boolean): void;

            IsScrollbarAlwaysShown(_0: number): boolean;

            SetHelpText(text: string): void;

            GetHelpTextAtPoint(pt: Ozone.Point, origin: Ozone.HelpEvent.Source): string;

            GetHelpText(): string;

            SetToolTip(tip: string): void;

            UnsetToolTip(): void;

            GetToolTipText(): string;

            DragAcceptFiles(accept: boolean): void;

            DeleteRelatedConstraints(): void;

            ResetConstraints(): void;

            SetConstraintSizes(recurse: boolean): void;

            DoPhase(phase: number): boolean;

            SetSizeConstraint(x: number, y: number, w: number, h: number): void;

            MoveConstraint(x: number, y: number): void;

            SetAutoLayout(autoLayout: boolean): void;

            GetAutoLayout(): boolean;

            Layout(): boolean;

            SetSizer(sizer: Ozone.Sizer, deleteOld: boolean): void;

            SetSizerAndFit(sizer: Ozone.Sizer, deleteOld: boolean): void;

            GetSizer(): Ozone.Sizer;

            SetContainingSizer(sizer: Ozone.Sizer): void;

            GetContainingSizer(): Ozone.Sizer;

            SetTransparent(_0: number): boolean;

            CanSetTransparent(): boolean;

            OnInitDialog(event: Ozone.InitDialogEvent): void;

            OnMiddleClick(event: Ozone.MouseEvent): void;

            SendIdleEvents(event: Ozone.IdleEvent): boolean;

            WXSendContextMenuEvent(posInScreenCoords: Ozone.Point): boolean;

            DissociateHandle(): void;

            HasCustomPalette(): boolean;

            GetAncestorWithCustomPalette(): Ozone.Window;

            InheritAttributes(): void;

            ShouldInheritColours(): boolean;

            CanBeOutsideClientArea(): boolean;

            CanApplyThemeBorder(): boolean;

            GetMainWindowOfCompositeControl(): Ozone.Window;

            IsTopNavigationDomain(_0: Ozone.Window.NavigationKind): boolean;

            get_m_x(): number;

            set_m_x(value: number): void;

            get_m_y(): number;

            set_m_y(value: number): void;

            get_m_width(): number;

            set_m_width(value: number): void;

            get_m_height(): number;

            set_m_height(value: number): void;

            get_m_clientWidth(): number;

            set_m_clientWidth(value: number): void;

            get_m_clientHeight(): number;

            set_m_clientHeight(value: number): void;

            get_m_useCachedClientSize(): boolean;

            set_m_useCachedClientSize(value: boolean): void;

            get_m_isGtkPositionValid(): boolean;

            set_m_isGtkPositionValid(value: boolean): void;

            get_m_gtkLabel(): string;

            set_m_gtkLabel(value: string): void;

            get_m_noExpose(): boolean;

            set_m_noExpose(value: boolean): void;

            get_m_nativeSizeEvent(): boolean;

            set_m_nativeSizeEvent(value: boolean): void;

            get_m_isScrolling(): boolean;

            set_m_isScrolling(value: boolean): void;

            get_m_clipPaintRegion(): boolean;

            set_m_clipPaintRegion(value: boolean): void;

            get_m_dirtyTabOrder(): boolean;

            set_m_dirtyTabOrder(value: boolean): void;

            get_m_mouseButtonDown(): boolean;

            set_m_mouseButtonDown(value: boolean): void;

            get_m_showOnIdle(): boolean;

            set_m_showOnIdle(value: boolean): void;

            get_m_needCursorReset(): boolean;

            set_m_needCursorReset(value: boolean): void;

            ScrollDirFromOrient(orient: number): Ozone.Window.ScrollDir;

            OrientFromScrollDir(dir: Ozone.Window.ScrollDir): number;

            NewControlId(count: number): number;

            UnreserveControlId(id: number, count: number): void;

            FindFocus(): Ozone.Window;

            DoFindFocus(): Ozone.Window;

            FindWindowById(winid: number, parent: Ozone.Window): Ozone.Window;

            FindWindowByName(name: string, parent: Ozone.Window): Ozone.Window;

            FindWindowByLabel(label: string, parent: Ozone.Window): Ozone.Window;

            GetCapture(): Ozone.Window;

            GetClassDefaultAttributes(variant: Ozone.WindowVariant): Ozone.VisualAttributes;
        }

        export function FindWindowAtPointer(pt: Ozone.Point): Ozone.Window;
        export function GetMousePosition(): Ozone.Point;
        export function GetActiveWindow(): Ozone.Window;
    }
}
