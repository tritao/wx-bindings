// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "brush.h"
#include "wx/brush.h"
#include "wx/colour.h"
#include "wx/object.h"

#include <wx/eventfilter.h>
wxSharp::Brush::Brush(::wxBrush* instance)
{
    __Instance = instance;
}

wxSharp::Brush::~Brush()
{
}

wxSharp::Brush::Brush()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxBrush();
}

wxSharp::Brush::Brush(const ::wxSharp::Color& colour, ::wxSharp::BrushStyle style)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    auto __arg1 = (::wxBrushStyle)style;
    __Instance = new ::wxBrush(__arg0, __arg1);
}

::wxSharp::BrushStyle wxSharp::Brush::GetStyle() const
{
    ::wxBrushStyle __ret = ((::wxBrush*)__Instance)->GetStyle();
    return (::wxSharp::BrushStyle)__ret;
}

::wxSharp::Color wxSharp::Brush::GetColour() const
{
    ::wxColour __ret = ((::wxBrush*)__Instance)->GetColour();
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

void wxSharp::Brush::SetColour(const ::wxSharp::Color& col)
{
    auto &__arg0 = *(::wxColour*)col.__Instance;
    ((::wxBrush*)__Instance)->SetColour(__arg0);
}

void wxSharp::Brush::SetColour(unsigned char r, unsigned char g, unsigned char b)
{
    ((::wxBrush*)__Instance)->SetColour(r, g, b);
}

void wxSharp::Brush::SetStyle(::wxSharp::BrushStyle style)
{
    auto __arg0 = (::wxBrushStyle)style;
    ((::wxBrush*)__Instance)->SetStyle(__arg0);
}

wxSharp::Brush::Brush(const ::wxSharp::Brush& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxBrush*)_0.__Instance;
    __Instance = new ::wxBrush(__arg0);
}

bool wxSharp::Brush::IsHatch() const
{
    bool __ret = ((::wxBrush*)__Instance)->IsHatch();
    return __ret;
}

bool wxSharp::Brush::IsTransparent() const
{
    bool __ret = ((::wxBrush*)__Instance)->IsTransparent();
    return __ret;
}

bool wxSharp::Brush::IsNonTransparent() const
{
    bool __ret = ((::wxBrush*)__Instance)->IsNonTransparent();
    return __ret;
}

wxSharp::BrushList::BrushList(::wxBrushList* instance)
    : wxSharp::GDIObjListBase((::wxGDIObjListBase*)instance)
{
    __Instance = instance;
}

wxSharp::BrushList::~BrushList()
{
}

::wxSharp::Brush* wxSharp::BrushList::FindOrCreateBrush(const ::wxSharp::Color& colour, ::wxSharp::BrushStyle style)
{
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    auto __arg1 = (::wxBrushStyle)style;
    ::wxBrush* __ret = ((::wxBrushList*)__Instance)->FindOrCreateBrush(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::Brush((::wxBrush*)__ret);
}

wxSharp::BrushList::BrushList(const ::wxSharp::BrushList& _0)
    : wxSharp::GDIObjListBase((::wxGDIObjListBase*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxBrushList*)_0.__Instance;
    __Instance = new ::wxBrushList(__arg0);
}

wxSharp::BrushList::BrushList()
    : wxSharp::GDIObjListBase((::wxGDIObjListBase*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxBrushList();
}

