// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "gdicmn.h"
#include "wx/brush.h"
#include "wx/colour.h"
#include "wx/defs.h"
#include "wx/gdicmn.h"
#include "wx/object.h"
#include "wx/pen.h"

#include <wx/eventfilter.h>

wxSharp::Size::Size(::wxSize* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::Size::~Size()
{
}

wxSharp::Size::Size()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxSize();
}

wxSharp::Size::Size(int xx, int yy)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxSize(xx, yy);
}

void wxSharp::Size::IncTo(const ::wxSharp::Size& sz)
{
    auto &__arg0 = *(::wxSize*)sz.__Instance;
    ((::wxSize*)__Instance)->IncTo(__arg0);
}

void wxSharp::Size::DecTo(const ::wxSharp::Size& sz)
{
    auto &__arg0 = *(::wxSize*)sz.__Instance;
    ((::wxSize*)__Instance)->DecTo(__arg0);
}

void wxSharp::Size::DecToIfSpecified(const ::wxSharp::Size& sz)
{
    auto &__arg0 = *(::wxSize*)sz.__Instance;
    ((::wxSize*)__Instance)->DecToIfSpecified(__arg0);
}

void wxSharp::Size::IncBy(int dx, int dy)
{
    ((::wxSize*)__Instance)->IncBy(dx, dy);
}

void wxSharp::Size::IncBy(const ::wxSharp::Point& pt)
{
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    ((::wxSize*)__Instance)->IncBy(__arg0);
}

void wxSharp::Size::IncBy(const ::wxSharp::Size& sz)
{
    auto &__arg0 = *(::wxSize*)sz.__Instance;
    ((::wxSize*)__Instance)->IncBy(__arg0);
}

void wxSharp::Size::IncBy(int d)
{
    ((::wxSize*)__Instance)->IncBy(d);
}

void wxSharp::Size::DecBy(int dx, int dy)
{
    ((::wxSize*)__Instance)->DecBy(dx, dy);
}

void wxSharp::Size::DecBy(const ::wxSharp::Point& pt)
{
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    ((::wxSize*)__Instance)->DecBy(__arg0);
}

void wxSharp::Size::DecBy(const ::wxSharp::Size& sz)
{
    auto &__arg0 = *(::wxSize*)sz.__Instance;
    ((::wxSize*)__Instance)->DecBy(__arg0);
}

void wxSharp::Size::DecBy(int d)
{
    ((::wxSize*)__Instance)->DecBy(d);
}

void wxSharp::Size::Set(int xx, int yy)
{
    ((::wxSize*)__Instance)->Set(xx, yy);
}

void wxSharp::Size::SetWidth(int w)
{
    ((::wxSize*)__Instance)->SetWidth(w);
}

void wxSharp::Size::SetHeight(int h)
{
    ((::wxSize*)__Instance)->SetHeight(h);
}

int wxSharp::Size::GetWidth() const
{
    int __ret = ((::wxSize*)__Instance)->GetWidth();
    return __ret;
}

int wxSharp::Size::GetHeight() const
{
    int __ret = ((::wxSize*)__Instance)->GetHeight();
    return __ret;
}

bool wxSharp::Size::IsFullySpecified() const
{
    bool __ret = ((::wxSize*)__Instance)->IsFullySpecified();
    return __ret;
}

void wxSharp::Size::SetDefaults(const ::wxSharp::Size& size)
{
    auto &__arg0 = *(::wxSize*)size.__Instance;
    ((::wxSize*)__Instance)->SetDefaults(__arg0);
}

int wxSharp::Size::GetX() const
{
    int __ret = ((::wxSize*)__Instance)->GetX();
    return __ret;
}

int wxSharp::Size::GetY() const
{
    int __ret = ((::wxSize*)__Instance)->GetY();
    return __ret;
}

wxSharp::Size::Size(const ::wxSharp::Size& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxSize*)_0.__Instance;
    __Instance = new ::wxSize(__arg0);
}

int wxSharp::Size::get_x()
{
    int __ret = ((::wxSize*)__Instance)->x;
    return __ret;
}


void wxSharp::Size::set_x(int value)
{
    ((::wxSize*)__Instance)->x = value;
}

int wxSharp::Size::get_y()
{
    int __ret = ((::wxSize*)__Instance)->y;
    return __ret;
}


void wxSharp::Size::set_y(int value)
{
    ((::wxSize*)__Instance)->y = value;
}

wxSharp::RealPoint::RealPoint(::wxRealPoint* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::RealPoint::~RealPoint()
{
}

wxSharp::RealPoint::RealPoint()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxRealPoint();
}

wxSharp::RealPoint::RealPoint(double xx, double yy)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxRealPoint(xx, yy);
}

wxSharp::RealPoint::RealPoint(const ::wxSharp::Point& pt)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    __Instance = new ::wxRealPoint(__arg0);
}

wxSharp::RealPoint::RealPoint(const ::wxSharp::RealPoint& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxRealPoint*)_0.__Instance;
    __Instance = new ::wxRealPoint(__arg0);
}

double wxSharp::RealPoint::get_x()
{
    double __ret = ((::wxRealPoint*)__Instance)->x;
    return __ret;
}


void wxSharp::RealPoint::set_x(double value)
{
    ((::wxRealPoint*)__Instance)->x = value;
}

double wxSharp::RealPoint::get_y()
{
    double __ret = ((::wxRealPoint*)__Instance)->y;
    return __ret;
}


void wxSharp::RealPoint::set_y(double value)
{
    ((::wxRealPoint*)__Instance)->y = value;
}

wxSharp::Point::Point(::wxPoint* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::Point::~Point()
{
}

wxSharp::Point::Point()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxPoint();
}

wxSharp::Point::Point(int xx, int yy)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxPoint(xx, yy);
}

wxSharp::Point::Point(const ::wxSharp::RealPoint& pt)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxRealPoint*)pt.__Instance;
    __Instance = new ::wxPoint(__arg0);
}

bool wxSharp::Point::IsFullySpecified() const
{
    bool __ret = ((::wxPoint*)__Instance)->IsFullySpecified();
    return __ret;
}

void wxSharp::Point::SetDefaults(const ::wxSharp::Point& pt)
{
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    ((::wxPoint*)__Instance)->SetDefaults(__arg0);
}

wxSharp::Point::Point(const ::wxSharp::Point& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPoint*)_0.__Instance;
    __Instance = new ::wxPoint(__arg0);
}

int wxSharp::Point::get_x()
{
    int __ret = ((::wxPoint*)__Instance)->x;
    return __ret;
}


void wxSharp::Point::set_x(int value)
{
    ((::wxPoint*)__Instance)->x = value;
}

int wxSharp::Point::get_y()
{
    int __ret = ((::wxPoint*)__Instance)->y;
    return __ret;
}


void wxSharp::Point::set_y(int value)
{
    ((::wxPoint*)__Instance)->y = value;
}

wxSharp::wxPointListNode::wxPointListNode(::wxwxPointListNode* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::wxPointListNode::~wxPointListNode()
{
}

::wxSharp::wxPointListNode* wxSharp::wxPointListNode::GetNext() const
{
    ::wxwxPointListNode* __ret = ((::wxwxPointListNode*)__Instance)->GetNext();
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::wxPointListNode::GetPrevious() const
{
    ::wxwxPointListNode* __ret = ((::wxwxPointListNode*)__Instance)->GetPrevious();
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::Point* wxSharp::wxPointListNode::GetData() const
{
    ::wxPoint* __ret = ((::wxwxPointListNode*)__Instance)->GetData();
    return (__ret == nullptr) ? nullptr : new wxSharp::Point((::wxPoint*)__ret);
}

void wxSharp::wxPointListNode::SetData(::wxSharp::Point* data)
{
    auto __arg0 = data ? (::wxPoint*)data->__Instance : nullptr;
    ((::wxwxPointListNode*)__Instance)->SetData(__arg0);
}

wxSharp::PointList::PointList(::wxPointList* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::PointList::~PointList()
{
}

wxSharp::PointList::PointList(::wxSharp::KeyType keyType)
{
    __ownsNativeInstance = true;
    auto __arg0 = (::wxKeyType)keyType;
    __Instance = new ::wxPointList(__arg0);
}

wxSharp::PointList::PointList(const ::wxSharp::PointList& list)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPointList*)list.__Instance;
    __Instance = new ::wxPointList(__arg0);
}

::wxSharp::wxPointListNode* wxSharp::PointList::GetFirst() const
{
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->GetFirst();
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::GetLast() const
{
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->GetLast();
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Item(unsigned long index) const
{
    auto __arg0 = (::size_t)index;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Item(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Append(::wxSharp::Point* object)
{
    auto __arg0 = object ? (::wxPoint*)object->__Instance : nullptr;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Append(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Insert(::wxSharp::Point* object)
{
    auto __arg0 = object ? (::wxPoint*)object->__Instance : nullptr;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Insert(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Insert(unsigned long pos, ::wxSharp::Point* object)
{
    auto __arg0 = (::size_t)pos;
    auto __arg1 = object ? (::wxPoint*)object->__Instance : nullptr;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Insert(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Insert(::wxSharp::wxPointListNode* prev, ::wxSharp::Point* object)
{
    auto __arg0 = prev ? (::wxwxPointListNode*)prev->__Instance : nullptr;
    auto __arg1 = object ? (::wxPoint*)object->__Instance : nullptr;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Insert(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Append(long key, void* object)
{
    auto __arg1 = (void*)object;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Append(key, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Append(wchar_t* key, void* object)
{
    auto __arg0 = (::wxChar*)key;
    auto __arg1 = (void*)object;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Append(__arg0, __arg1);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

::wxSharp::wxPointListNode* wxSharp::PointList::DetachNode(::wxSharp::wxPointListNode* node)
{
    auto __arg0 = node ? (::wxwxPointListNode*)node->__Instance : nullptr;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->DetachNode(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

bool wxSharp::PointList::DeleteNode(::wxSharp::wxPointListNode* node)
{
    auto __arg0 = node ? (::wxwxPointListNode*)node->__Instance : nullptr;
    bool __ret = ((::wxPointList*)__Instance)->DeleteNode(__arg0);
    return __ret;
}

bool wxSharp::PointList::DeleteObject(::wxSharp::Point* object)
{
    auto __arg0 = object ? (::wxPoint*)object->__Instance : nullptr;
    bool __ret = ((::wxPointList*)__Instance)->DeleteObject(__arg0);
    return __ret;
}

void wxSharp::PointList::Erase(::wxSharp::wxPointListNode* it)
{
    auto __arg0 = it ? (::wxwxPointListNode*)it->__Instance : nullptr;
    ((::wxPointList*)__Instance)->Erase(__arg0);
}

::wxSharp::wxPointListNode* wxSharp::PointList::Find(const ::wxSharp::Point* object) const
{
    auto __arg0 = object ? (::wxPoint*)object->__Instance : nullptr;
    ::wxwxPointListNode* __ret = ((::wxPointList*)__Instance)->Find(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::wxPointListNode((::wxwxPointListNode*)__ret);
}

bool wxSharp::PointList::Member(const ::wxSharp::Point* object) const
{
    auto __arg0 = object ? (::wxPoint*)object->__Instance : nullptr;
    bool __ret = ((::wxPointList*)__Instance)->Member(__arg0);
    return __ret;
}

int wxSharp::PointList::IndexOf(::wxSharp::Point* object) const
{
    auto __arg0 = object ? (::wxPoint*)object->__Instance : nullptr;
    int __ret = ((::wxPointList*)__Instance)->IndexOf(__arg0);
    return __ret;
}

wxSharp::PointList::PointList(unsigned long n, ::wxSharp::Point*const & v)
{
    __ownsNativeInstance = true;
    auto __arg0 = (::wxPointList::size_type)(::size_t)n;
    auto __arg1 = v ? (::wxPoint*)v->__Instance : nullptr;
    __Instance = new ::wxPointList(__arg0, __arg1);
}

void wxSharp::PointList::resize(unsigned long n, ::wxSharp::Point* v)
{
    auto __arg0 = (::wxPointList::size_type)(::size_t)n;
    auto __arg1 = v ? (::wxPoint*)v->__Instance : nullptr;
    ((::wxPointList*)__Instance)->resize(__arg0, __arg1);
}

unsigned long wxSharp::PointList::size() const
{
    ::wxPointList::size_type __ret = ((::wxPointList*)__Instance)->size();
    return __ret;
}

unsigned long wxSharp::PointList::max_size() const
{
    ::wxPointList::size_type __ret = ((::wxPointList*)__Instance)->max_size();
    return __ret;
}

bool wxSharp::PointList::empty() const
{
    bool __ret = ((::wxPointList*)__Instance)->empty();
    return __ret;
}

void wxSharp::PointList::push_front(::wxSharp::Point*const & v)
{
    auto __arg0 = v ? (::wxPoint*)v->__Instance : nullptr;
    ((::wxPointList*)__Instance)->push_front(__arg0);
}

void wxSharp::PointList::pop_front()
{
    ((::wxPointList*)__Instance)->pop_front();
}

void wxSharp::PointList::push_back(::wxSharp::Point*const & v)
{
    auto __arg0 = v ? (::wxPoint*)v->__Instance : nullptr;
    ((::wxPointList*)__Instance)->push_back(__arg0);
}

void wxSharp::PointList::pop_back()
{
    ((::wxPointList*)__Instance)->pop_back();
}

void wxSharp::PointList::assign(unsigned long n, ::wxSharp::Point*const & v)
{
    auto __arg0 = (::wxPointList::size_type)(::size_t)n;
    auto __arg1 = v ? (::wxPoint*)v->__Instance : nullptr;
    ((::wxPointList*)__Instance)->assign(__arg0, __arg1);
}

void wxSharp::PointList::clear()
{
    ((::wxPointList*)__Instance)->clear();
}

void wxSharp::PointList::remove(::wxSharp::Point*const & v)
{
    auto __arg0 = v ? (::wxPoint*)v->__Instance : nullptr;
    ((::wxPointList*)__Instance)->remove(__arg0);
}

void wxSharp::PointList::reverse()
{
    ((::wxPointList*)__Instance)->reverse();
}

wxSharp::Rect::Rect(::wxRect* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::Rect::~Rect()
{
}

wxSharp::Rect::Rect()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxRect();
}

wxSharp::Rect::Rect(int xx, int yy, int ww, int hh)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxRect(xx, yy, ww, hh);
}

wxSharp::Rect::Rect(const ::wxSharp::Point& topLeft, const ::wxSharp::Point& bottomRight)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPoint*)topLeft.__Instance;
    auto &__arg1 = *(::wxPoint*)bottomRight.__Instance;
    __Instance = new ::wxRect(__arg0, __arg1);
}

wxSharp::Rect::Rect(const ::wxSharp::Point& pt, const ::wxSharp::Size& size)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    auto &__arg1 = *(::wxSize*)size.__Instance;
    __Instance = new ::wxRect(__arg0, __arg1);
}

wxSharp::Rect::Rect(const ::wxSharp::Size& size)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxSize*)size.__Instance;
    __Instance = new ::wxRect(__arg0);
}

int wxSharp::Rect::GetX() const
{
    int __ret = ((::wxRect*)__Instance)->GetX();
    return __ret;
}

void wxSharp::Rect::SetX(int xx)
{
    ((::wxRect*)__Instance)->SetX(xx);
}

int wxSharp::Rect::GetY() const
{
    int __ret = ((::wxRect*)__Instance)->GetY();
    return __ret;
}

void wxSharp::Rect::SetY(int yy)
{
    ((::wxRect*)__Instance)->SetY(yy);
}

int wxSharp::Rect::GetWidth() const
{
    int __ret = ((::wxRect*)__Instance)->GetWidth();
    return __ret;
}

void wxSharp::Rect::SetWidth(int w)
{
    ((::wxRect*)__Instance)->SetWidth(w);
}

int wxSharp::Rect::GetHeight() const
{
    int __ret = ((::wxRect*)__Instance)->GetHeight();
    return __ret;
}

void wxSharp::Rect::SetHeight(int h)
{
    ((::wxRect*)__Instance)->SetHeight(h);
}

::wxSharp::Point wxSharp::Rect::GetPosition() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetPosition();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

void wxSharp::Rect::SetPosition(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetPosition(__arg0);
}

::wxSharp::Size wxSharp::Rect::GetSize() const
{
    ::wxSize __ret = ((::wxRect*)__Instance)->GetSize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void wxSharp::Rect::SetSize(const ::wxSharp::Size& s)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ((::wxRect*)__Instance)->SetSize(__arg0);
}

bool wxSharp::Rect::IsEmpty() const
{
    bool __ret = ((::wxRect*)__Instance)->IsEmpty();
    return __ret;
}

int wxSharp::Rect::GetLeft() const
{
    int __ret = ((::wxRect*)__Instance)->GetLeft();
    return __ret;
}

int wxSharp::Rect::GetTop() const
{
    int __ret = ((::wxRect*)__Instance)->GetTop();
    return __ret;
}

int wxSharp::Rect::GetBottom() const
{
    int __ret = ((::wxRect*)__Instance)->GetBottom();
    return __ret;
}

int wxSharp::Rect::GetRight() const
{
    int __ret = ((::wxRect*)__Instance)->GetRight();
    return __ret;
}

void wxSharp::Rect::SetLeft(int left)
{
    ((::wxRect*)__Instance)->SetLeft(left);
}

void wxSharp::Rect::SetRight(int right)
{
    ((::wxRect*)__Instance)->SetRight(right);
}

void wxSharp::Rect::SetTop(int top)
{
    ((::wxRect*)__Instance)->SetTop(top);
}

void wxSharp::Rect::SetBottom(int bottom)
{
    ((::wxRect*)__Instance)->SetBottom(bottom);
}

::wxSharp::Point wxSharp::Rect::GetTopLeft() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetTopLeft();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point wxSharp::Rect::GetLeftTop() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetLeftTop();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

void wxSharp::Rect::SetTopLeft(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetTopLeft(__arg0);
}

void wxSharp::Rect::SetLeftTop(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetLeftTop(__arg0);
}

::wxSharp::Point wxSharp::Rect::GetBottomRight() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetBottomRight();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point wxSharp::Rect::GetRightBottom() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetRightBottom();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

void wxSharp::Rect::SetBottomRight(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetBottomRight(__arg0);
}

void wxSharp::Rect::SetRightBottom(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetRightBottom(__arg0);
}

::wxSharp::Point wxSharp::Rect::GetTopRight() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetTopRight();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point wxSharp::Rect::GetRightTop() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetRightTop();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

void wxSharp::Rect::SetTopRight(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetTopRight(__arg0);
}

void wxSharp::Rect::SetRightTop(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetRightTop(__arg0);
}

::wxSharp::Point wxSharp::Rect::GetBottomLeft() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetBottomLeft();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point wxSharp::Rect::GetLeftBottom() const
{
    ::wxPoint __ret = ((::wxRect*)__Instance)->GetLeftBottom();
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

void wxSharp::Rect::SetBottomLeft(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetBottomLeft(__arg0);
}

void wxSharp::Rect::SetLeftBottom(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ((::wxRect*)__Instance)->SetLeftBottom(__arg0);
}

::wxSharp::Rect wxSharp::Rect::Inflate(int dx, int dy) const
{
    auto __arg0 = (::wxCoord)dx;
    auto __arg1 = (::wxCoord)dy;
    ::wxRect __ret = ((::wxRect*)__Instance)->Inflate(__arg0, __arg1);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

::wxSharp::Rect wxSharp::Rect::Deflate(int dx, int dy) const
{
    auto __arg0 = (::wxCoord)dx;
    auto __arg1 = (::wxCoord)dy;
    ::wxRect __ret = ((::wxRect*)__Instance)->Deflate(__arg0, __arg1);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

void wxSharp::Rect::Offset(int dx, int dy)
{
    auto __arg0 = (::wxCoord)dx;
    auto __arg1 = (::wxCoord)dy;
    ((::wxRect*)__Instance)->Offset(__arg0, __arg1);
}

void wxSharp::Rect::Offset(const ::wxSharp::Point& pt)
{
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    ((::wxRect*)__Instance)->Offset(__arg0);
}

::wxSharp::Rect wxSharp::Rect::Intersect(const ::wxSharp::Rect& rect) const
{
    auto &__arg0 = *(::wxRect*)rect.__Instance;
    ::wxRect __ret = ((::wxRect*)__Instance)->Intersect(__arg0);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

::wxSharp::Rect wxSharp::Rect::Union(const ::wxSharp::Rect& rect) const
{
    auto &__arg0 = *(::wxRect*)rect.__Instance;
    ::wxRect __ret = ((::wxRect*)__Instance)->Union(__arg0);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

bool wxSharp::Rect::Contains(int x, int y) const
{
    bool __ret = ((::wxRect*)__Instance)->Contains(x, y);
    return __ret;
}

bool wxSharp::Rect::Contains(const ::wxSharp::Point& pt) const
{
    auto &__arg0 = *(::wxPoint*)pt.__Instance;
    bool __ret = ((::wxRect*)__Instance)->Contains(__arg0);
    return __ret;
}

bool wxSharp::Rect::Contains(const ::wxSharp::Rect& rect) const
{
    auto &__arg0 = *(::wxRect*)rect.__Instance;
    bool __ret = ((::wxRect*)__Instance)->Contains(__arg0);
    return __ret;
}

bool wxSharp::Rect::Intersects(const ::wxSharp::Rect& rect) const
{
    auto &__arg0 = *(::wxRect*)rect.__Instance;
    bool __ret = ((::wxRect*)__Instance)->Intersects(__arg0);
    return __ret;
}

::wxSharp::Rect wxSharp::Rect::CentreIn(const ::wxSharp::Rect& r, int dir) const
{
    auto &__arg0 = *(::wxRect*)r.__Instance;
    ::wxRect __ret = ((::wxRect*)__Instance)->CentreIn(__arg0, dir);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

::wxSharp::Rect wxSharp::Rect::CenterIn(const ::wxSharp::Rect& r, int dir) const
{
    auto &__arg0 = *(::wxRect*)r.__Instance;
    ::wxRect __ret = ((::wxRect*)__Instance)->CenterIn(__arg0, dir);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

wxSharp::Rect::Rect(const ::wxSharp::Rect& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxRect*)_0.__Instance;
    __Instance = new ::wxRect(__arg0);
}

int wxSharp::Rect::get_x()
{
    int __ret = ((::wxRect*)__Instance)->x;
    return __ret;
}


void wxSharp::Rect::set_x(int value)
{
    ((::wxRect*)__Instance)->x = value;
}

int wxSharp::Rect::get_y()
{
    int __ret = ((::wxRect*)__Instance)->y;
    return __ret;
}


void wxSharp::Rect::set_y(int value)
{
    ((::wxRect*)__Instance)->y = value;
}

int wxSharp::Rect::get_width()
{
    int __ret = ((::wxRect*)__Instance)->width;
    return __ret;
}


void wxSharp::Rect::set_width(int value)
{
    ((::wxRect*)__Instance)->width = value;
}

int wxSharp::Rect::get_height()
{
    int __ret = ((::wxRect*)__Instance)->height;
    return __ret;
}


void wxSharp::Rect::set_height(int value)
{
    ((::wxRect*)__Instance)->height = value;
}

wxSharp::GDIObjListBase::GDIObjListBase(::wxGDIObjListBase* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::GDIObjListBase::~GDIObjListBase()
{
}

wxSharp::GDIObjListBase::GDIObjListBase()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxGDIObjListBase();
}

wxSharp::GDIObjListBase::GDIObjListBase(const ::wxSharp::GDIObjListBase& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxGDIObjListBase*)_0.__Instance;
    __Instance = new ::wxGDIObjListBase(__arg0);
}

wxSharp::ColourDatabase::ColourDatabase(::wxColourDatabase* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::ColourDatabase::~ColourDatabase()
{
}

wxSharp::ColourDatabase::ColourDatabase()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxColourDatabase();
}

::wxSharp::Color wxSharp::ColourDatabase::Find(const char* name) const
{
    auto __arg0 = name;
    ::wxColour __ret = ((::wxColourDatabase*)__Instance)->Find(__arg0);
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

const char* wxSharp::ColourDatabase::FindName(const ::wxSharp::Color& colour) const
{
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    ::wxString __ret = ((::wxColourDatabase*)__Instance)->FindName(__arg0);
    return __ret.c_str();
}

void wxSharp::ColourDatabase::AddColour(const char* name, const ::wxSharp::Color& colour)
{
    auto __arg0 = name;
    auto &__arg1 = *(::wxColour*)colour.__Instance;
    ((::wxColourDatabase*)__Instance)->AddColour(__arg0, __arg1);
}

wxSharp::ColourDatabase::ColourDatabase(const ::wxSharp::ColourDatabase& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxColourDatabase*)_0.__Instance;
    __Instance = new ::wxColourDatabase(__arg0);
}

wxSharp::ResourceCache::ResourceCache(::wxResourceCache* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::ResourceCache::~ResourceCache()
{
}

wxSharp::ResourceCache::ResourceCache()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxResourceCache();
}

wxSharp::ResourceCache::ResourceCache(unsigned int keyType)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxResourceCache(keyType);
}

wxSharp::ResourceCache::ResourceCache(const ::wxSharp::ResourceCache& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxResourceCache*)_0.__Instance;
    __Instance = new ::wxResourceCache(__arg0);
}

wxSharp::StockGDI::StockGDI(::wxStockGDI* instance, bool ownNativeInstance)
    : __ownsNativeInstance(ownNativeInstance)
{
    __Instance = instance;
}

wxSharp::StockGDI::~StockGDI()
{
}

wxSharp::StockGDI::StockGDI()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxStockGDI();
}

void wxSharp::StockGDI::DeleteAll()
{
    ::wxStockGDI::DeleteAll();
}

const ::wxSharp::Brush* wxSharp::StockGDI::GetBrush(::wxSharp::StockGDI::Item item)
{
    auto __arg0 = (::wxStockGDI::Item)item;
    const ::wxBrush* __ret = ::wxStockGDI::GetBrush(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::Brush((::wxBrush*)__ret);
}

const ::wxSharp::Color* wxSharp::StockGDI::GetColour(::wxSharp::StockGDI::Item item)
{
    auto __arg0 = (::wxStockGDI::Item)item;
    const ::wxColour* __ret = ::wxStockGDI::GetColour(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::Color((::wxColour*)__ret);
}

const ::wxSharp::Pen* wxSharp::StockGDI::GetPen(::wxSharp::StockGDI::Item item)
{
    auto __arg0 = (::wxStockGDI::Item)item;
    const ::wxPen* __ret = ::wxStockGDI::GetPen(__arg0);
    return (__ret == nullptr) ? nullptr : new wxSharp::Pen((::wxPen*)__ret);
}

bool (::wxSharp::operator==)(const ::wxSharp::Size& s1, const ::wxSharp::Size& s2)
{
    auto &__arg0 = *(::wxSize*)s1.__Instance;
    auto &__arg1 = *(::wxSize*)s2.__Instance;
    bool __ret = ::operator==(__arg0, __arg1);
    return __ret;
}

bool (::wxSharp::operator!=)(const ::wxSharp::Size& s1, const ::wxSharp::Size& s2)
{
    auto &__arg0 = *(::wxSize*)s1.__Instance;
    auto &__arg1 = *(::wxSize*)s2.__Instance;
    bool __ret = ::operator!=(__arg0, __arg1);
    return __ret;
}

::wxSharp::Size (::wxSharp::operator+)(const ::wxSharp::Size& s1, const ::wxSharp::Size& s2)
{
    auto &__arg0 = *(::wxSize*)s1.__Instance;
    auto &__arg1 = *(::wxSize*)s2.__Instance;
    ::wxSize __ret = ::operator+(__arg0, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator-)(const ::wxSharp::Size& s1, const ::wxSharp::Size& s2)
{
    auto &__arg0 = *(::wxSize*)s1.__Instance;
    auto &__arg1 = *(::wxSize*)s2.__Instance;
    ::wxSize __ret = ::operator-(__arg0, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator/)(const ::wxSharp::Size& s, int i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(const ::wxSharp::Size& s, int i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(int i, const ::wxSharp::Size& s)
{
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator/)(const ::wxSharp::Size& s, unsigned int i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(const ::wxSharp::Size& s, unsigned int i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(unsigned int i, const ::wxSharp::Size& s)
{
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator/)(const ::wxSharp::Size& s, long i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(const ::wxSharp::Size& s, long i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(long i, const ::wxSharp::Size& s)
{
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator/)(const ::wxSharp::Size& s, unsigned long i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(const ::wxSharp::Size& s, unsigned long i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(unsigned long i, const ::wxSharp::Size& s)
{
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(const ::wxSharp::Size& s, double i)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::operator*)(double i, const ::wxSharp::Size& s)
{
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxSize __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

bool (::wxSharp::operator==)(const ::wxSharp::RealPoint& p1, const ::wxSharp::RealPoint& p2)
{
    auto &__arg0 = *(::wxRealPoint*)p1.__Instance;
    auto &__arg1 = *(::wxRealPoint*)p2.__Instance;
    bool __ret = ::operator==(__arg0, __arg1);
    return __ret;
}

bool (::wxSharp::operator!=)(const ::wxSharp::RealPoint& p1, const ::wxSharp::RealPoint& p2)
{
    auto &__arg0 = *(::wxRealPoint*)p1.__Instance;
    auto &__arg1 = *(::wxRealPoint*)p2.__Instance;
    bool __ret = ::operator!=(__arg0, __arg1);
    return __ret;
}

::wxSharp::RealPoint (::wxSharp::operator+)(const ::wxSharp::RealPoint& p1, const ::wxSharp::RealPoint& p2)
{
    auto &__arg0 = *(::wxRealPoint*)p1.__Instance;
    auto &__arg1 = *(::wxRealPoint*)p2.__Instance;
    ::wxRealPoint __ret = ::operator+(__arg0, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator-)(const ::wxSharp::RealPoint& p1, const ::wxSharp::RealPoint& p2)
{
    auto &__arg0 = *(::wxRealPoint*)p1.__Instance;
    auto &__arg1 = *(::wxRealPoint*)p2.__Instance;
    ::wxRealPoint __ret = ::operator-(__arg0, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator/)(const ::wxSharp::RealPoint& s, int i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(const ::wxSharp::RealPoint& s, int i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(int i, const ::wxSharp::RealPoint& s)
{
    auto &__arg1 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator/)(const ::wxSharp::RealPoint& s, unsigned int i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(const ::wxSharp::RealPoint& s, unsigned int i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(unsigned int i, const ::wxSharp::RealPoint& s)
{
    auto &__arg1 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator/)(const ::wxSharp::RealPoint& s, long i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(const ::wxSharp::RealPoint& s, long i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(long i, const ::wxSharp::RealPoint& s)
{
    auto &__arg1 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator/)(const ::wxSharp::RealPoint& s, unsigned long i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(const ::wxSharp::RealPoint& s, unsigned long i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(unsigned long i, const ::wxSharp::RealPoint& s)
{
    auto &__arg1 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(const ::wxSharp::RealPoint& s, double i)
{
    auto &__arg0 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

::wxSharp::RealPoint (::wxSharp::operator*)(double i, const ::wxSharp::RealPoint& s)
{
    auto &__arg1 = *(::wxRealPoint*)s.__Instance;
    ::wxRealPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxRealPoint(__ret);
    return ____ret;
}

bool (::wxSharp::operator==)(const ::wxSharp::Point& p1, const ::wxSharp::Point& p2)
{
    auto &__arg0 = *(::wxPoint*)p1.__Instance;
    auto &__arg1 = *(::wxPoint*)p2.__Instance;
    bool __ret = ::operator==(__arg0, __arg1);
    return __ret;
}

bool (::wxSharp::operator!=)(const ::wxSharp::Point& p1, const ::wxSharp::Point& p2)
{
    auto &__arg0 = *(::wxPoint*)p1.__Instance;
    auto &__arg1 = *(::wxPoint*)p2.__Instance;
    bool __ret = ::operator!=(__arg0, __arg1);
    return __ret;
}

::wxSharp::Point (::wxSharp::operator+)(const ::wxSharp::Point& p1, const ::wxSharp::Point& p2)
{
    auto &__arg0 = *(::wxPoint*)p1.__Instance;
    auto &__arg1 = *(::wxPoint*)p2.__Instance;
    ::wxPoint __ret = ::operator+(__arg0, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator-)(const ::wxSharp::Point& p1, const ::wxSharp::Point& p2)
{
    auto &__arg0 = *(::wxPoint*)p1.__Instance;
    auto &__arg1 = *(::wxPoint*)p2.__Instance;
    ::wxPoint __ret = ::operator-(__arg0, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator+)(const ::wxSharp::Point& p, const ::wxSharp::Size& s)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxPoint __ret = ::operator+(__arg0, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator-)(const ::wxSharp::Point& p, const ::wxSharp::Size& s)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    auto &__arg1 = *(::wxSize*)s.__Instance;
    ::wxPoint __ret = ::operator-(__arg0, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator+)(const ::wxSharp::Size& s, const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    auto &__arg1 = *(::wxPoint*)p.__Instance;
    ::wxPoint __ret = ::operator+(__arg0, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator-)(const ::wxSharp::Size& s, const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxSize*)s.__Instance;
    auto &__arg1 = *(::wxPoint*)p.__Instance;
    ::wxPoint __ret = ::operator-(__arg0, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator-)(const ::wxSharp::Point& p)
{
    auto &__arg0 = *(::wxPoint*)p.__Instance;
    ::wxPoint __ret = ::operator-(__arg0);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator/)(const ::wxSharp::Point& s, int i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(const ::wxSharp::Point& s, int i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(int i, const ::wxSharp::Point& s)
{
    auto &__arg1 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator/)(const ::wxSharp::Point& s, unsigned int i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(const ::wxSharp::Point& s, unsigned int i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(unsigned int i, const ::wxSharp::Point& s)
{
    auto &__arg1 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator/)(const ::wxSharp::Point& s, long i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(const ::wxSharp::Point& s, long i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(long i, const ::wxSharp::Point& s)
{
    auto &__arg1 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator/)(const ::wxSharp::Point& s, unsigned long i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator/(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(const ::wxSharp::Point& s, unsigned long i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(unsigned long i, const ::wxSharp::Point& s)
{
    auto &__arg1 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(const ::wxSharp::Point& s, double i)
{
    auto &__arg0 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(__arg0, i);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

::wxSharp::Point (::wxSharp::operator*)(double i, const ::wxSharp::Point& s)
{
    auto &__arg1 = *(::wxPoint*)s.__Instance;
    ::wxPoint __ret = ::operator*(i, __arg1);
    auto ____ret = new ::wxPoint(__ret);
    return ____ret;
}

bool (::wxSharp::operator==)(const ::wxSharp::Rect& r1, const ::wxSharp::Rect& r2)
{
    auto &__arg0 = *(::wxRect*)r1.__Instance;
    auto &__arg1 = *(::wxRect*)r2.__Instance;
    bool __ret = ::operator==(__arg0, __arg1);
    return __ret;
}

bool (::wxSharp::operator!=)(const ::wxSharp::Rect& r1, const ::wxSharp::Rect& r2)
{
    auto &__arg0 = *(::wxRect*)r1.__Instance;
    auto &__arg1 = *(::wxRect*)r2.__Instance;
    bool __ret = ::operator!=(__arg0, __arg1);
    return __ret;
}

::wxSharp::Rect (::wxSharp::operator+)(const ::wxSharp::Rect& r1, const ::wxSharp::Rect& r2)
{
    auto &__arg0 = *(::wxRect*)r1.__Instance;
    auto &__arg1 = *(::wxRect*)r2.__Instance;
    ::wxRect __ret = ::operator+(__arg0, __arg1);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

::wxSharp::Rect (::wxSharp::operator*)(const ::wxSharp::Rect& r1, const ::wxSharp::Rect& r2)
{
    auto &__arg0 = *(::wxRect*)r1.__Instance;
    auto &__arg1 = *(::wxRect*)r2.__Instance;
    ::wxRect __ret = ::operator*(__arg0, __arg1);
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}

void (::wxSharp::InitializeStockLists)()
{
    ::wxInitializeStockLists();
}

void (::wxSharp::DeleteStockLists)()
{
    ::wxDeleteStockLists();
}

bool (::wxSharp::ColourDisplay)()
{
    bool __ret = ::wxColourDisplay();
    return __ret;
}

int (::wxSharp::DisplayDepth)()
{
    int __ret = ::wxDisplayDepth();
    return __ret;
}

void (::wxSharp::DisplaySize)(int* width, int* height)
{
    int* __arg0 = (int*)width;
    int* __arg1 = (int*)height;
    ::wxDisplaySize(__arg0, __arg1);
    width = __arg0;
    height = __arg1;
}

::wxSharp::Size (::wxSharp::GetDisplaySize)()
{
    ::wxSize __ret = ::wxGetDisplaySize();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void (::wxSharp::DisplaySizeMM)(int* width, int* height)
{
    int* __arg0 = (int*)width;
    int* __arg1 = (int*)height;
    ::wxDisplaySizeMM(__arg0, __arg1);
    width = __arg0;
    height = __arg1;
}

::wxSharp::Size (::wxSharp::GetDisplaySizeMM)()
{
    ::wxSize __ret = ::wxGetDisplaySizeMM();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

::wxSharp::Size (::wxSharp::GetDisplayPPI)()
{
    ::wxSize __ret = ::wxGetDisplayPPI();
    auto ____ret = new ::wxSize(__ret);
    return ____ret;
}

void (::wxSharp::ClientDisplayRect)(int* x, int* y, int* width, int* height)
{
    int* __arg0 = (int*)x;
    int* __arg1 = (int*)y;
    int* __arg2 = (int*)width;
    int* __arg3 = (int*)height;
    ::wxClientDisplayRect(__arg0, __arg1, __arg2, __arg3);
    x = __arg0;
    y = __arg1;
    width = __arg2;
    height = __arg3;
}

::wxSharp::Rect (::wxSharp::GetClientDisplayRect)()
{
    ::wxRect __ret = ::wxGetClientDisplayRect();
    auto ____ret = new ::wxRect(__ret);
    return ____ret;
}
