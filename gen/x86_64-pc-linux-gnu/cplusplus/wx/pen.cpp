// ----------------------------------------------------------------------------
// <auto-generated>
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
// </auto-generated>
// ----------------------------------------------------------------------------
#include "pen.h"
#include "wx/colour.h"
#include "wx/graphics.h"
#include "wx/object.h"
#include "wx/pen.h"

#include <wx/eventfilter.h>
wxSharp::PenInfo::PenInfo(::wxPenInfo* instance)
{
    __Instance = instance;
}

wxSharp::PenInfo::~PenInfo()
{
}

wxSharp::PenInfo::PenInfo(const ::wxSharp::Color& colour, int width, ::wxSharp::PenStyle style)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    auto __arg2 = (::wxPenStyle)style;
    __Instance = new ::wxPenInfo(__arg0, width, __arg2);
}

int wxSharp::PenInfo::GetWidth() const
{
    int __ret = ((::wxPenInfo*)__Instance)->GetWidth();
    return __ret;
}

wxSharp::PenInfo::PenInfo(const ::wxSharp::PenInfo& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPenInfo*)_0.__Instance;
    __Instance = new ::wxPenInfo(__arg0);
}

::wxSharp::Color wxSharp::PenInfo::GetColour() const
{
    ::wxColour __ret = ((::wxPenInfo*)__Instance)->GetColour();
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

::wxSharp::PenStyle wxSharp::PenInfo::GetStyle() const
{
    ::wxPenStyle __ret = ((::wxPenInfo*)__Instance)->GetStyle();
    return (::wxSharp::PenStyle)__ret;
}

::wxSharp::PenJoin wxSharp::PenInfo::GetJoin() const
{
    ::wxPenJoin __ret = ((::wxPenInfo*)__Instance)->GetJoin();
    return (::wxSharp::PenJoin)__ret;
}

::wxSharp::PenCap wxSharp::PenInfo::GetCap() const
{
    ::wxPenCap __ret = ((::wxPenInfo*)__Instance)->GetCap();
    return (::wxSharp::PenCap)__ret;
}

int wxSharp::PenInfo::GetDashes(signed char** ptr) const
{
    auto __arg0 = (::wxDash**)ptr;
    int __ret = ((::wxPenInfo*)__Instance)->GetDashes(__arg0);
    return __ret;
}

int wxSharp::PenInfo::GetDashCount() const
{
    int __ret = ((::wxPenInfo*)__Instance)->GetDashCount();
    return __ret;
}

signed char* wxSharp::PenInfo::GetDash() const
{
    ::wxDash* __ret = ((::wxPenInfo*)__Instance)->GetDash();
    return reinterpret_cast<signed char*>(__ret);
}

bool wxSharp::PenInfo::IsTransparent() const
{
    bool __ret = ((::wxPenInfo*)__Instance)->IsTransparent();
    return __ret;
}

wxSharp::Pen::Pen(::wxPen* instance)
{
    __Instance = instance;
}

wxSharp::Pen::~Pen()
{
}

wxSharp::Pen::Pen()
{
    __ownsNativeInstance = true;
    __Instance = new ::wxPen();
}

wxSharp::Pen::Pen(const ::wxSharp::Color& colour, int width, ::wxSharp::PenStyle style)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    auto __arg2 = (::wxPenStyle)style;
    __Instance = new ::wxPen(__arg0, width, __arg2);
}

wxSharp::Pen::Pen(const ::wxSharp::PenInfo& info)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPenInfo*)info.__Instance;
    __Instance = new ::wxPen(__arg0);
}

void wxSharp::Pen::SetColour(const ::wxSharp::Color& colour)
{
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    ((::wxPen*)__Instance)->SetColour(__arg0);
}

void wxSharp::Pen::SetColour(unsigned char red, unsigned char green, unsigned char blue)
{
    ((::wxPen*)__Instance)->SetColour(red, green, blue);
}

void wxSharp::Pen::SetCap(::wxSharp::PenCap capStyle)
{
    auto __arg0 = (::wxPenCap)capStyle;
    ((::wxPen*)__Instance)->SetCap(__arg0);
}

void wxSharp::Pen::SetJoin(::wxSharp::PenJoin joinStyle)
{
    auto __arg0 = (::wxPenJoin)joinStyle;
    ((::wxPen*)__Instance)->SetJoin(__arg0);
}

void wxSharp::Pen::SetStyle(::wxSharp::PenStyle style)
{
    auto __arg0 = (::wxPenStyle)style;
    ((::wxPen*)__Instance)->SetStyle(__arg0);
}

void wxSharp::Pen::SetWidth(int width)
{
    ((::wxPen*)__Instance)->SetWidth(width);
}

void wxSharp::Pen::SetDashes(int number_of_dashes, signed char* dash)
{
    auto __arg1 = (::wxDash*)dash;
    ((::wxPen*)__Instance)->SetDashes(number_of_dashes, __arg1);
}

::wxSharp::Color wxSharp::Pen::GetColour() const
{
    ::wxColour __ret = ((::wxPen*)__Instance)->GetColour();
    auto ____ret = new ::wxColour(__ret);
    return ____ret;
}

::wxSharp::PenCap wxSharp::Pen::GetCap() const
{
    ::wxPenCap __ret = ((::wxPen*)__Instance)->GetCap();
    return (::wxSharp::PenCap)__ret;
}

::wxSharp::PenJoin wxSharp::Pen::GetJoin() const
{
    ::wxPenJoin __ret = ((::wxPen*)__Instance)->GetJoin();
    return (::wxSharp::PenJoin)__ret;
}

::wxSharp::PenStyle wxSharp::Pen::GetStyle() const
{
    ::wxPenStyle __ret = ((::wxPen*)__Instance)->GetStyle();
    return (::wxSharp::PenStyle)__ret;
}

int wxSharp::Pen::GetWidth() const
{
    int __ret = ((::wxPen*)__Instance)->GetWidth();
    return __ret;
}

int wxSharp::Pen::GetDashes(signed char** ptr) const
{
    auto __arg0 = (::wxDash**)ptr;
    int __ret = ((::wxPen*)__Instance)->GetDashes(__arg0);
    return __ret;
}

int wxSharp::Pen::GetDashCount() const
{
    int __ret = ((::wxPen*)__Instance)->GetDashCount();
    return __ret;
}

signed char* wxSharp::Pen::GetDash() const
{
    ::wxDash* __ret = ((::wxPen*)__Instance)->GetDash();
    return reinterpret_cast<signed char*>(__ret);
}

wxSharp::Pen::Pen(const ::wxSharp::Pen& _0)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPen*)_0.__Instance;
    __Instance = new ::wxPen(__arg0);
}

bool wxSharp::Pen::IsTransparent() const
{
    bool __ret = ((::wxPen*)__Instance)->IsTransparent();
    return __ret;
}

bool wxSharp::Pen::IsNonTransparent() const
{
    bool __ret = ((::wxPen*)__Instance)->IsNonTransparent();
    return __ret;
}

wxSharp::PenList::PenList(::wxPenList* instance)
    : wxSharp::GDIObjListBase((::wxGDIObjListBase*)instance)
{
    __Instance = instance;
}

wxSharp::PenList::~PenList()
{
}

::wxSharp::Pen* wxSharp::PenList::FindOrCreatePen(const ::wxSharp::Color& colour, int width, ::wxSharp::PenStyle style)
{
    auto &__arg0 = *(::wxColour*)colour.__Instance;
    auto __arg2 = (::wxPenStyle)style;
    ::wxPen* __ret = ((::wxPenList*)__Instance)->FindOrCreatePen(__arg0, width, __arg2);
    return (__ret == nullptr) ? nullptr : new wxSharp::Pen((::wxPen*)__ret);
}

wxSharp::PenList::PenList(const ::wxSharp::PenList& _0)
    : wxSharp::GDIObjListBase((::wxGDIObjListBase*)nullptr)
{
    __ownsNativeInstance = true;
    auto &__arg0 = *(::wxPenList*)_0.__Instance;
    __Instance = new ::wxPenList(__arg0);
}

wxSharp::PenList::PenList()
    : wxSharp::GDIObjListBase((::wxGDIObjListBase*)nullptr)
{
    __ownsNativeInstance = true;
    __Instance = new ::wxPenList();
}

