//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace wxSharp
{
    public unsafe partial class wxCmdLineArgsArray : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 28)]
        public partial struct Internal
        {
            [FieldOffset(0)]
            public wxArrayString.Internal m_args;

            [FieldOffset(20)]
            public sbyte** m_argsA;

            [FieldOffset(24)]
            public char** m_argsW;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN18wxCmdLineArgsArrayC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN18wxCmdLineArgsArrayD2Ev")]
            internal static extern void dtor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArraycvPPcEv")]
            internal static extern sbyte** OperatorConversion_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArraycvPPwEv")]
            internal static extern char** OperatorConversion_1(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArraycvbEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorConversion_2(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArrayntEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaim_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArray7IsEmptyEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsEmpty_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArray12GetArgumentsEv")]
            internal static extern global::System.IntPtr GetArguments_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArrayixEm")]
            internal static extern void OperatorSubscript_0(global::System.IntPtr @return, global::System.IntPtr instance, uint n);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK18wxCmdLineArgsArrayixEi")]
            internal static extern void OperatorSubscript_1(global::System.IntPtr @return, global::System.IntPtr instance, int n);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, wxCmdLineArgsArray> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, wxCmdLineArgsArray>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        public static wxCmdLineArgsArray __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new wxCmdLineArgsArray(native.ToPointer(), skipVTables);
        }

        public static wxCmdLineArgsArray __CreateInstance(wxCmdLineArgsArray.Internal native, bool skipVTables = false)
        {
            return new wxCmdLineArgsArray(native, skipVTables);
        }

        private static void* __CopyValue(wxCmdLineArgsArray.Internal native)
        {
            var ret = Marshal.AllocHGlobal(28);
            *(wxCmdLineArgsArray.Internal*) ret = native;
            return ret.ToPointer();
        }

        private wxCmdLineArgsArray(wxCmdLineArgsArray.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected wxCmdLineArgsArray(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public wxCmdLineArgsArray()
        {
            __Instance = Marshal.AllocHGlobal(28);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0((__Instance + __PointerAdjustment));
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            wxCmdLineArgsArray __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            Internal.dtor_0((__Instance + __PointerAdjustment));
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public static implicit operator sbyte**(wxCmdLineArgsArray __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_0(arg0);
            return __ret;
        }

        public static implicit operator char**(wxCmdLineArgsArray __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_1(arg0);
            return __ret;
        }

        public static implicit operator bool(wxCmdLineArgsArray __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_2(arg0);
            return __ret;
        }

        public static bool operator !(wxCmdLineArgsArray __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaim_0(arg0);
            return __ret;
        }

        public bool IsEmpty()
        {
            var __ret = Internal.IsEmpty_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public wxArrayString GetArguments()
        {
            var __ret = Internal.GetArguments_0((__Instance + __PointerAdjustment));
            wxArrayString __result0;
            if (__ret == IntPtr.Zero) __result0 = null;
            else if (wxArrayString.NativeToManagedMap.ContainsKey(__ret))
                __result0 = (wxArrayString) wxArrayString.NativeToManagedMap[__ret];
            else __result0 = wxArrayString.__CreateInstance(__ret);
            return __result0;
        }

        public wxString this[uint n]
        {
            get
            {
                var __ret = new wxString.Internal();
                Internal.OperatorSubscript_0(new IntPtr(&__ret), (__Instance + __PointerAdjustment), n);
                return wxString.__CreateInstance(__ret);
            }
        }

        public wxString this[int n]
        {
            get
            {
                var __ret = new wxString.Internal();
                Internal.OperatorSubscript_1(new IntPtr(&__ret), (__Instance + __PointerAdjustment), n);
                return wxString.__CreateInstance(__ret);
            }
        }
    }
}
