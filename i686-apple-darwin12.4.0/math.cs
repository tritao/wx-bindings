//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace wxSharp
{
    public unsafe partial class math
    {
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Z14wxIsSameDoubledd")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool wxIsSameDouble_0(double x, double y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Z14wxIsNullDoubled")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool wxIsNullDouble_0(double x);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Z7wxRoundd")]
            internal static extern int wxRound_0(double x);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Z10wxDegToRadd")]
            internal static extern double wxDegToRad_0(double deg);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Z10wxRadToDegd")]
            internal static extern double wxRadToDeg_0(double rad);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="wxConvertFromIeeeExtended")]
            internal static extern double wxConvertFromIeeeExtended_0(global::System.IntPtr bytes);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="wxConvertToIeeeExtended")]
            internal static extern void wxConvertToIeeeExtended_0(double num, sbyte* bytes);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Z5wxGCDjj")]
            internal static extern uint wxGCD_0(uint u, uint v);
        }

        public static bool wxIsSameDouble(double x, double y)
        {
            var __ret = Internal.wxIsSameDouble_0(x, y);
            return __ret;
        }

        public static bool wxIsNullDouble(double x)
        {
            var __ret = Internal.wxIsNullDouble_0(x);
            return __ret;
        }

        public static int wxRound(double x)
        {
            var __ret = Internal.wxRound_0(x);
            return __ret;
        }

        public static double wxDegToRad(double deg)
        {
            var __ret = Internal.wxDegToRad_0(deg);
            return __ret;
        }

        public static double wxRadToDeg(double rad)
        {
            var __ret = Internal.wxRadToDeg_0(rad);
            return __ret;
        }

        public static double wxConvertFromIeeeExtended(string bytes)
        {
            var arg0 = Marshal.StringToHGlobalAnsi(bytes);
            var __ret = Internal.wxConvertFromIeeeExtended_0(arg0);
            Marshal.FreeHGlobal(arg0);
            return __ret;
        }

        public static void wxConvertToIeeeExtended(double num, sbyte* bytes)
        {
            var arg1 = bytes;
            Internal.wxConvertToIeeeExtended_0(num, arg1);
        }

        public static uint wxGCD(uint u, uint v)
        {
            var __ret = Internal.wxGCD_0(u, v);
            return __ret;
        }
    }
}
