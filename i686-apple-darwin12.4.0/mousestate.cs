//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace wxSharp
{
    public enum wxMouseButton
    {
        wxMOUSE_BTN_ANY = -1,
        wxMOUSE_BTN_NONE = 0,
        wxMOUSE_BTN_LEFT = 1,
        wxMOUSE_BTN_MIDDLE = 2,
        wxMOUSE_BTN_RIGHT = 3,
        wxMOUSE_BTN_AUX1 = 4,
        wxMOUSE_BTN_AUX2 = 5,
        wxMOUSE_BTN_MAX = 6
    }

    public unsafe partial class wxMouseState : wxKeyboardState, IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 12)]
        public new partial struct Internal
        {
            [FieldOffset(0)]
            public byte m_controlDown;

            [FieldOffset(0)]
            public byte m_shiftDown;

            [FieldOffset(0)]
            public byte m_altDown;

            [FieldOffset(0)]
            public byte m_metaDown;

            [FieldOffset(0)]
            public byte m_rawControlDown;

            [FieldOffset(1)]
            public byte m_leftDown;

            [FieldOffset(1)]
            public byte m_middleDown;

            [FieldOffset(1)]
            public byte m_rightDown;

            [FieldOffset(1)]
            public byte m_aux1Down;

            [FieldOffset(1)]
            public byte m_aux2Down;

            [FieldOffset(4)]
            public int m_x;

            [FieldOffset(8)]
            public int m_y;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseStateC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseStateC2ERKS_")]
            internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState4GetXEv")]
            internal static extern int GetX_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState4GetYEv")]
            internal static extern int GetY_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState11GetPositionEv")]
            internal static extern wxPoint.Internal GetPosition_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState11GetPositionEPiS0_")]
            internal static extern void GetPosition_1(global::System.IntPtr instance, int* x, int* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState11GetPositionEPlS0_")]
            internal static extern void GetPosition1_0(global::System.IntPtr instance, int* x, int* y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState10LeftIsDownEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool LeftIsDown_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState12MiddleIsDownEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool MiddleIsDown_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState11RightIsDownEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool RightIsDown_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState10Aux1IsDownEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool Aux1IsDown_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState10Aux2IsDownEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool Aux2IsDown_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxMouseState12ButtonIsDownE13wxMouseButton")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool ButtonIsDown_0(global::System.IntPtr instance, wxMouseButton but);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState4SetXEi")]
            internal static extern void SetX_0(global::System.IntPtr instance, int x);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState4SetYEi")]
            internal static extern void SetY_0(global::System.IntPtr instance, int y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState11SetPositionE7wxPoint")]
            internal static extern void SetPosition_0(global::System.IntPtr instance, wxPoint.Internal pos);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState11SetLeftDownEb")]
            internal static extern void SetLeftDown_0(global::System.IntPtr instance, bool down);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState13SetMiddleDownEb")]
            internal static extern void SetMiddleDown_0(global::System.IntPtr instance, bool down);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState12SetRightDownEb")]
            internal static extern void SetRightDown_0(global::System.IntPtr instance, bool down);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState11SetAux1DownEb")]
            internal static extern void SetAux1Down_0(global::System.IntPtr instance, bool down);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState11SetAux2DownEb")]
            internal static extern void SetAux2Down_0(global::System.IntPtr instance, bool down);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxMouseState8SetStateERKS_")]
            internal static extern void SetState_0(global::System.IntPtr instance, global::System.IntPtr state);
        }

        public static new wxMouseState __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new wxMouseState(native.ToPointer(), skipVTables);
        }

        public static wxMouseState __CreateInstance(wxMouseState.Internal native, bool skipVTables = false)
        {
            return new wxMouseState(native, skipVTables);
        }

        private static void* __CopyValue(wxMouseState.Internal native)
        {
            var ret = Marshal.AllocHGlobal(12);
            *(wxMouseState.Internal*) ret = native;
            return ret.ToPointer();
        }

        private wxMouseState(wxMouseState.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected wxMouseState(void* native, bool skipVTables = false)
            : base((void*) null)
        {
            __PointerAdjustment = 0;
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public wxMouseState()
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(12);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0((__Instance + __PointerAdjustment));
        }

        public wxMouseState(wxMouseState _0)
            : this((void*) null)
        {
            __Instance = Marshal.AllocHGlobal(12);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((wxMouseState.Internal*) __Instance) = *((wxMouseState.Internal*) _0.__Instance);
        }

        public int GetX()
        {
            var __ret = Internal.GetX_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public int GetY()
        {
            var __ret = Internal.GetY_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public wxPoint GetPosition()
        {
            var __ret = Internal.GetPosition_0((__Instance + __PointerAdjustment));
            return wxPoint.__CreateInstance(__ret);
        }

        public void GetPosition(ref int x, ref int y)
        {
            fixed (int* __refParamPtr0 = &x)
            {
                var arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &y)
                {
                    var arg1 = __refParamPtr1;
                    Internal.GetPosition_1((__Instance + __PointerAdjustment), arg0, arg1);
                }
            }
        }

        public void GetPosition1(ref int x, ref int y)
        {
            fixed (int* __refParamPtr0 = &x)
            {
                var arg0 = __refParamPtr0;
                fixed (int* __refParamPtr1 = &y)
                {
                    var arg1 = __refParamPtr1;
                    Internal.GetPosition1_0((__Instance + __PointerAdjustment), arg0, arg1);
                }
            }
        }

        public bool LeftIsDown()
        {
            var __ret = Internal.LeftIsDown_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool MiddleIsDown()
        {
            var __ret = Internal.MiddleIsDown_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool RightIsDown()
        {
            var __ret = Internal.RightIsDown_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool Aux1IsDown()
        {
            var __ret = Internal.Aux1IsDown_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool Aux2IsDown()
        {
            var __ret = Internal.Aux2IsDown_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool ButtonIsDown(wxMouseButton but)
        {
            var arg0 = but;
            var __ret = Internal.ButtonIsDown_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public void SetX(int x)
        {
            Internal.SetX_0((__Instance + __PointerAdjustment), x);
        }

        public void SetY(int y)
        {
            Internal.SetY_0((__Instance + __PointerAdjustment), y);
        }

        public void SetPosition(wxPoint pos)
        {
            var arg0 = ReferenceEquals(pos, null) ? new wxPoint.Internal() : *(wxPoint.Internal*) (pos.__Instance);
            Internal.SetPosition_0((__Instance + __PointerAdjustment), arg0);
        }

        public void SetLeftDown(bool down)
        {
            Internal.SetLeftDown_0((__Instance + __PointerAdjustment), down);
        }

        public void SetMiddleDown(bool down)
        {
            Internal.SetMiddleDown_0((__Instance + __PointerAdjustment), down);
        }

        public void SetRightDown(bool down)
        {
            Internal.SetRightDown_0((__Instance + __PointerAdjustment), down);
        }

        public void SetAux1Down(bool down)
        {
            Internal.SetAux1Down_0((__Instance + __PointerAdjustment), down);
        }

        public void SetAux2Down(bool down)
        {
            Internal.SetAux2Down_0((__Instance + __PointerAdjustment), down);
        }

        public void SetState(wxMouseState state)
        {
            if (ReferenceEquals(state, null))
                throw new global::System.ArgumentNullException("state", "Cannot be null because it is a C++ reference (&).");
            var arg0 = state.__Instance;
            Internal.SetState_0((__Instance + __PointerAdjustment), arg0);
        }

        public bool m_leftDown
        {
            get
            {
                return ((Internal*) __Instance)->m_leftDown != 0;
            }

            set
            {
                ((Internal*) __Instance)->m_leftDown = (byte) (value ? 1 : 0);
            }
        }

        public bool m_middleDown
        {
            get
            {
                return ((Internal*) __Instance)->m_middleDown != 0;
            }

            set
            {
                ((Internal*) __Instance)->m_middleDown = (byte) (value ? 1 : 0);
            }
        }

        public bool m_rightDown
        {
            get
            {
                return ((Internal*) __Instance)->m_rightDown != 0;
            }

            set
            {
                ((Internal*) __Instance)->m_rightDown = (byte) (value ? 1 : 0);
            }
        }

        public bool m_aux1Down
        {
            get
            {
                return ((Internal*) __Instance)->m_aux1Down != 0;
            }

            set
            {
                ((Internal*) __Instance)->m_aux1Down = (byte) (value ? 1 : 0);
            }
        }

        public bool m_aux2Down
        {
            get
            {
                return ((Internal*) __Instance)->m_aux2Down != 0;
            }

            set
            {
                ((Internal*) __Instance)->m_aux2Down = (byte) (value ? 1 : 0);
            }
        }

        public int m_x
        {
            get
            {
                return ((Internal*) __Instance)->m_x;
            }

            set
            {
                ((Internal*) __Instance)->m_x = value;
            }
        }

        public int m_y
        {
            get
            {
                return ((Internal*) __Instance)->m_y;
            }

            set
            {
                ((Internal*) __Instance)->m_y = value;
            }
        }
    }
}
