//----------------------------------------------------------------------------
// This is autogenerated code by CppSharp.
// Do not edit this file or all your changes will be lost after re-generation.
//----------------------------------------------------------------------------
using System;
using System.Runtime.InteropServices;
using System.Security;

namespace wxSharp
{
    public unsafe partial class wxUniChar : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 4)]
        public partial struct Internal
        {
            [FieldOffset(0)]
            public uint m_value;

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ev")]
            internal static extern void ctor_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ec")]
            internal static extern void ctor_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Eh")]
            internal static extern void ctor_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Es")]
            internal static extern void ctor_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Et")]
            internal static extern void ctor_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ei")]
            internal static extern void ctor_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ej")]
            internal static extern void ctor_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ex")]
            internal static extern void ctor_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ey")]
            internal static extern void ctor_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2Ew")]
            internal static extern void ctor_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2ERK12wxUniCharRef")]
            internal static extern void ctor_12(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN9wxUniCharC2ERKS_")]
            internal static extern void cctor_13(global::System.IntPtr instance, global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChar8GetValueEv")]
            internal static extern uint GetValue_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChar7IsAsciiEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsAscii_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChar9GetAsCharEPc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetAsChar_0(global::System.IntPtr instance, sbyte* c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvcEv")]
            internal static extern sbyte OperatorConversion_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvhEv")]
            internal static extern byte OperatorConversion_1(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvsEv")]
            internal static extern short OperatorConversion_2(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvtEv")]
            internal static extern ushort OperatorConversion_3(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcviEv")]
            internal static extern int OperatorConversion_4(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvjEv")]
            internal static extern uint OperatorConversion_5(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvlEv")]
            internal static extern int OperatorConversion_6(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvmEv")]
            internal static extern uint OperatorConversion_7(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvxEv")]
            internal static extern long OperatorConversion_8(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvyEv")]
            internal static extern ulong OperatorConversion_9(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvwEv")]
            internal static extern char OperatorConversion_10(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharcvbEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorConversion_11(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharntEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaim_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChareqEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharneEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargeEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharleEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniChargtEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_3(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_4(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_5(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_6(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_9(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_10(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharltEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_11(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharmiERKS_")]
            internal static extern int OperatorMinus_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharmiEc")]
            internal static extern int OperatorMinus_1(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharmiEh")]
            internal static extern int OperatorMinus_2(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK9wxUniCharmiEw")]
            internal static extern int OperatorMinus_3(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Zpl9wxUniCharRK8wxString")]
            internal static extern void OperatorPlus_0(global::System.IntPtr @return, wxUniChar.Internal ch, global::System.IntPtr @string);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqRK9wxUniCharRK8wxString")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_12(global::System.IntPtr c, global::System.IntPtr s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZneRK9wxUniCharRK8wxString")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_12(global::System.IntPtr c, global::System.IntPtr s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqcRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_13(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZnecRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_13(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgecRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_12(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZlecRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_12(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgtcRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_12(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZltcRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_12(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqwRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_14(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZnewRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_14(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgewRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_13(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZlewRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_13(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgtwRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_13(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZltwRK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_13(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqRK9wxUniCharRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_15(global::System.IntPtr x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZneRK9wxUniCharRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_15(global::System.IntPtr x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgeRK9wxUniCharRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_14(global::System.IntPtr x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZleRK9wxUniCharRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_14(global::System.IntPtr x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgtRK9wxUniCharRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_14(global::System.IntPtr x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZltRK9wxUniCharRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_14(global::System.IntPtr x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZmiRK9wxUniCharRK12wxUniCharRef")]
            internal static extern int OperatorMinus_4(global::System.IntPtr c1, global::System.IntPtr c2);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, wxUniChar> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, wxUniChar>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        public static wxUniChar __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new wxUniChar(native.ToPointer(), skipVTables);
        }

        public static wxUniChar __CreateInstance(wxUniChar.Internal native, bool skipVTables = false)
        {
            return new wxUniChar(native, skipVTables);
        }

        private static void* __CopyValue(wxUniChar.Internal native)
        {
            var ret = Marshal.AllocHGlobal(4);
            *(wxUniChar.Internal*) ret = native;
            return ret.ToPointer();
        }

        private wxUniChar(wxUniChar.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected wxUniChar(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public wxUniChar()
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_0((__Instance + __PointerAdjustment));
        }

        public wxUniChar(sbyte c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            var arg0 = c;
            Internal.ctor_1((__Instance + __PointerAdjustment), arg0);
        }

        public wxUniChar(byte c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_2((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(short c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_3((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(ushort c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_4((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(int c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_5((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(uint c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_6((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(long c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_9((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(ulong c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_10((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(char c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            Internal.ctor_11((__Instance + __PointerAdjustment), c);
        }

        public wxUniChar(wxUniCharRef c)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg0 = c.__Instance;
            Internal.ctor_12((__Instance + __PointerAdjustment), arg0);
        }

        public wxUniChar(wxUniChar _0)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((wxUniChar.Internal*) __Instance) = *((wxUniChar.Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            wxUniChar __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public uint GetValue()
        {
            var __ret = Internal.GetValue_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool IsAscii()
        {
            var __ret = Internal.IsAscii_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool GetAsChar(sbyte* c)
        {
            var arg0 = c;
            var __ret = Internal.GetAsChar_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public static implicit operator sbyte(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_0(arg0);
            return __ret;
        }

        public static implicit operator byte(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_1(arg0);
            return __ret;
        }

        public static implicit operator short(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_2(arg0);
            return __ret;
        }

        public static implicit operator ushort(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_3(arg0);
            return __ret;
        }

        public static implicit operator int(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_4(arg0);
            return __ret;
        }

        public static implicit operator uint(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_5(arg0);
            return __ret;
        }

        public static implicit operator int(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_6(arg0);
            return __ret;
        }

        public static implicit operator uint(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_7(arg0);
            return __ret;
        }

        public static implicit operator long(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_8(arg0);
            return __ret;
        }

        public static implicit operator ulong(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_9(arg0);
            return __ret;
        }

        public static implicit operator char(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_10(arg0);
            return __ret;
        }

        public static implicit operator bool(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_11(arg0);
            return __ret;
        }

        public static bool operator !(wxUniChar __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaim_0(arg0);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, wxUniChar c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorEqualEqual_0(arg0, arg1);
            return __ret;
        }

        public override bool Equals(object obj)
        {
            return this == obj as wxUniChar;
        }

        public override int GetHashCode()
        {
            if (__Instance == global::System.IntPtr.Zero)
                return global::System.IntPtr.Zero.GetHashCode();
            return (*(Internal*) __Instance).GetHashCode();
        }

        public static bool operator ==(wxUniChar __op, sbyte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorEqualEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, byte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_2(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, short c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, ushort c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, int c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, uint c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, long c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_9(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, ulong c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniChar __op, char c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, wxUniChar c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorExclaimEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, sbyte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorExclaimEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, byte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_2(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, short c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, ushort c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, int c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, uint c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, long c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_9(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, ulong c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniChar __op, char c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorGreaterEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorGreaterEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_2(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_9(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniChar __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorLessEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorLessEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_2(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_9(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniChar __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorGreater_0(arg0, arg1);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorGreater_1(arg0, arg1);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_2(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_3(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_4(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_5(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_6(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_9(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_10(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniChar __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_11(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorLess_0(arg0, arg1);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorLess_1(arg0, arg1);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_2(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_3(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_4(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_5(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_6(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_9(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_10(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniChar __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_11(arg0, c);
            return __ret;
        }

        public static int operator -(wxUniChar __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorMinus_0(arg0, arg1);
            return __ret;
        }

        public static int operator -(wxUniChar __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorMinus_1(arg0, arg1);
            return __ret;
        }

        public static int operator -(wxUniChar __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorMinus_2(arg0, c);
            return __ret;
        }

        public static int operator -(wxUniChar __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorMinus_3(arg0, c);
            return __ret;
        }

        public static wxString operator +(wxUniChar ch, wxString @string)
        {
            var arg0 = ReferenceEquals(ch, null) ? new wxUniChar.Internal() : *(wxUniChar.Internal*) (ch.__Instance);
            if (ReferenceEquals(@string, null))
                throw new global::System.ArgumentNullException("@string", "Cannot be null because it is a C++ reference (&).");
            var arg1 = @string.__Instance;
            var __ret = new wxString.Internal();
            Internal.OperatorPlus_0(new IntPtr(&__ret), arg0, arg1);
            return wxString.__CreateInstance(__ret);
        }

        public static bool operator ==(wxUniChar c, wxString s)
        {
            bool cNull = ReferenceEquals(c, null);
            bool sNull = ReferenceEquals(s, null);
            if (cNull || sNull)
                return cNull && sNull;
            var arg0 = c.__Instance;
            var arg1 = s.__Instance;
            var __ret = Internal.OperatorEqualEqual_12(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniChar c, wxString s)
        {
            bool cNull = ReferenceEquals(c, null);
            bool sNull = ReferenceEquals(s, null);
            if (cNull || sNull)
                return !(cNull && sNull);
            var arg0 = c.__Instance;
            var arg1 = s.__Instance;
            var __ret = Internal.OperatorExclaimEqual_12(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(sbyte x, wxUniChar y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return xNull && yNull;
            var arg0 = x;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorEqualEqual_13(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(sbyte x, wxUniChar y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return !(xNull && yNull);
            var arg0 = x;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorExclaimEqual_13(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(sbyte x, wxUniChar y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreaterEqual_12(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(sbyte x, wxUniChar y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLessEqual_12(arg0, arg1);
            return __ret;
        }

        public static bool operator >(sbyte x, wxUniChar y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreater_12(arg0, arg1);
            return __ret;
        }

        public static bool operator <(sbyte x, wxUniChar y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLess_12(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(char x, wxUniChar y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return xNull && yNull;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorEqualEqual_14(x, arg1);
            return __ret;
        }

        public static bool operator !=(char x, wxUniChar y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return !(xNull && yNull);
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorExclaimEqual_14(x, arg1);
            return __ret;
        }

        public static bool operator >=(char x, wxUniChar y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreaterEqual_13(x, arg1);
            return __ret;
        }

        public static bool operator <=(char x, wxUniChar y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLessEqual_13(x, arg1);
            return __ret;
        }

        public static bool operator >(char x, wxUniChar y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreater_13(x, arg1);
            return __ret;
        }

        public static bool operator <(char x, wxUniChar y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLess_13(x, arg1);
            return __ret;
        }

        public static bool operator ==(wxUniChar x, wxUniCharRef y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return xNull && yNull;
            var arg0 = x.__Instance;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorEqualEqual_15(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniChar x, wxUniCharRef y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return !(xNull && yNull);
            var arg0 = x.__Instance;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorExclaimEqual_15(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(wxUniChar x, wxUniCharRef y)
        {
            if (ReferenceEquals(x, null))
                throw new global::System.ArgumentNullException("x", "Cannot be null because it is a C++ reference (&).");
            var arg0 = x.__Instance;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreaterEqual_14(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(wxUniChar x, wxUniCharRef y)
        {
            if (ReferenceEquals(x, null))
                throw new global::System.ArgumentNullException("x", "Cannot be null because it is a C++ reference (&).");
            var arg0 = x.__Instance;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLessEqual_14(arg0, arg1);
            return __ret;
        }

        public static bool operator >(wxUniChar x, wxUniCharRef y)
        {
            if (ReferenceEquals(x, null))
                throw new global::System.ArgumentNullException("x", "Cannot be null because it is a C++ reference (&).");
            var arg0 = x.__Instance;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreater_14(arg0, arg1);
            return __ret;
        }

        public static bool operator <(wxUniChar x, wxUniCharRef y)
        {
            if (ReferenceEquals(x, null))
                throw new global::System.ArgumentNullException("x", "Cannot be null because it is a C++ reference (&).");
            var arg0 = x.__Instance;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLess_14(arg0, arg1);
            return __ret;
        }

        public static int operator -(wxUniChar c1, wxUniCharRef c2)
        {
            if (ReferenceEquals(c1, null))
                throw new global::System.ArgumentNullException("c1", "Cannot be null because it is a C++ reference (&).");
            var arg0 = c1.__Instance;
            if (ReferenceEquals(c2, null))
                throw new global::System.ArgumentNullException("c2", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c2.__Instance;
            var __ret = Internal.OperatorMinus_4(arg0, arg1);
            return __ret;
        }
    }

    public unsafe partial class wxUniCharRef : IDisposable
    {
        [StructLayout(LayoutKind.Explicit, Size = 4)]
        public partial struct Internal
        {
            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZN12wxUniCharRefC2ERKS_")]
            internal static extern void cctor_1(global::System.IntPtr instance, global::System.IntPtr _0);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRef8GetValueEv")]
            internal static extern uint GetValue_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRef7IsAsciiEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool IsAscii_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRef9GetAsCharEPc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool GetAsChar_0(global::System.IntPtr instance, sbyte* c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvcEv")]
            internal static extern sbyte OperatorConversion_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvhEv")]
            internal static extern byte OperatorConversion_1(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvsEv")]
            internal static extern short OperatorConversion_2(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvtEv")]
            internal static extern ushort OperatorConversion_3(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcviEv")]
            internal static extern int OperatorConversion_4(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvjEv")]
            internal static extern uint OperatorConversion_5(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvlEv")]
            internal static extern int OperatorConversion_6(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvmEv")]
            internal static extern uint OperatorConversion_7(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvxEv")]
            internal static extern long OperatorConversion_8(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvyEv")]
            internal static extern ulong OperatorConversion_9(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvwEv")]
            internal static extern char OperatorConversion_10(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefcvbEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorConversion_11(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefntEv")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaim_0(global::System.IntPtr instance);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqERK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_4(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_5(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_6(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_7(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_10(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_11(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefeqEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_12(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneERK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_4(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_5(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_6(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_7(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_10(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_11(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefneEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_12(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeERK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_4(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_5(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_6(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_7(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_10(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_11(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgeEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_12(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleERK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_4(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_5(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_6(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_7(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_10(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_11(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefleEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_12(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtERK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_4(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_5(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_6(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_7(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_10(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_11(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefgtEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_12(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltERKS_")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltERK9wxUniChar")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEc")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEh")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEs")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_4(global::System.IntPtr instance, short c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEt")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_5(global::System.IntPtr instance, ushort c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEi")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_6(global::System.IntPtr instance, int c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEj")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_7(global::System.IntPtr instance, uint c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEx")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_10(global::System.IntPtr instance, long c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEy")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_11(global::System.IntPtr instance, ulong c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefltEw")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_12(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefmiERKS_")]
            internal static extern int OperatorMinus_0(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefmiERK9wxUniChar")]
            internal static extern int OperatorMinus_1(global::System.IntPtr instance, global::System.IntPtr c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefmiEc")]
            internal static extern int OperatorMinus_2(global::System.IntPtr instance, sbyte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefmiEh")]
            internal static extern int OperatorMinus_3(global::System.IntPtr instance, byte c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZNK12wxUniCharRefmiEw")]
            internal static extern int OperatorMinus_4(global::System.IntPtr instance, char c);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_Zpl12wxUniCharRefRK8wxString")]
            internal static extern void OperatorPlus_0(global::System.IntPtr @return, wxUniCharRef.Internal ch, global::System.IntPtr @string);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqRK12wxUniCharRefRK8wxString")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_13(global::System.IntPtr c, global::System.IntPtr s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZneRK12wxUniCharRefRK8wxString")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_13(global::System.IntPtr c, global::System.IntPtr s);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqcRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_14(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZnecRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_14(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgecRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_13(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZlecRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_13(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgtcRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_13(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZltcRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_13(sbyte x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZeqwRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorEqualEqual_15(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZnewRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorExclaimEqual_15(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgewRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreaterEqual_14(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZlewRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLessEqual_14(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZgtwRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorGreater_14(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZltwRK12wxUniCharRef")]
            [return: MarshalAsAttribute(UnmanagedType.I1)]
            internal static extern bool OperatorLess_14(char x, global::System.IntPtr y);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZmicRK12wxUniCharRef")]
            internal static extern int OperatorMinus_5(sbyte c1, global::System.IntPtr c2);

            [SuppressUnmanagedCodeSecurity]
            [DllImport("wxSharp", CallingConvention = global::System.Runtime.InteropServices.CallingConvention.Cdecl,
                EntryPoint="_ZmiwRK12wxUniCharRef")]
            internal static extern int OperatorMinus_6(char c1, global::System.IntPtr c2);
        }

        public global::System.IntPtr __Instance { get; protected set; }

        protected int __PointerAdjustment;
        public static readonly System.Collections.Concurrent.ConcurrentDictionary<IntPtr, wxUniCharRef> NativeToManagedMap = new System.Collections.Concurrent.ConcurrentDictionary<IntPtr, wxUniCharRef>();
        protected void*[] __OriginalVTables;

        protected bool __ownsNativeInstance;

        public static wxUniCharRef __CreateInstance(global::System.IntPtr native, bool skipVTables = false)
        {
            return new wxUniCharRef(native.ToPointer(), skipVTables);
        }

        public static wxUniCharRef __CreateInstance(wxUniCharRef.Internal native, bool skipVTables = false)
        {
            return new wxUniCharRef(native, skipVTables);
        }

        private static void* __CopyValue(wxUniCharRef.Internal native)
        {
            var ret = Marshal.AllocHGlobal(4);
            *(wxUniCharRef.Internal*) ret = native;
            return ret.ToPointer();
        }

        private wxUniCharRef(wxUniCharRef.Internal native, bool skipVTables = false)
            : this(__CopyValue(native), skipVTables)
        {
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
        }

        protected wxUniCharRef(void* native, bool skipVTables = false)
        {
            if (native == null)
                return;
            __Instance = new global::System.IntPtr(native);
        }

        public wxUniCharRef(wxUniCharRef _0)
        {
            __Instance = Marshal.AllocHGlobal(4);
            __ownsNativeInstance = true;
            NativeToManagedMap[__Instance] = this;
            *((wxUniCharRef.Internal*) __Instance) = *((wxUniCharRef.Internal*) _0.__Instance);
        }

        public void Dispose()
        {
            Dispose(disposing: true);
        }

        protected virtual void Dispose(bool disposing)
        {
            wxUniCharRef __dummy;
            NativeToManagedMap.TryRemove(__Instance, out __dummy);
            if (__ownsNativeInstance)
                Marshal.FreeHGlobal(__Instance);
        }

        public uint GetValue()
        {
            var __ret = Internal.GetValue_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool IsAscii()
        {
            var __ret = Internal.IsAscii_0((__Instance + __PointerAdjustment));
            return __ret;
        }

        public bool GetAsChar(sbyte* c)
        {
            var arg0 = c;
            var __ret = Internal.GetAsChar_0((__Instance + __PointerAdjustment), arg0);
            return __ret;
        }

        public static implicit operator sbyte(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_0(arg0);
            return __ret;
        }

        public static implicit operator byte(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_1(arg0);
            return __ret;
        }

        public static implicit operator short(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_2(arg0);
            return __ret;
        }

        public static implicit operator ushort(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_3(arg0);
            return __ret;
        }

        public static implicit operator int(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_4(arg0);
            return __ret;
        }

        public static implicit operator uint(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_5(arg0);
            return __ret;
        }

        public static implicit operator int(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_6(arg0);
            return __ret;
        }

        public static implicit operator uint(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_7(arg0);
            return __ret;
        }

        public static implicit operator long(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_8(arg0);
            return __ret;
        }

        public static implicit operator ulong(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_9(arg0);
            return __ret;
        }

        public static implicit operator char(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_10(arg0);
            return __ret;
        }

        public static implicit operator bool(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorConversion_11(arg0);
            return __ret;
        }

        public static bool operator !(wxUniCharRef __op)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaim_0(arg0);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, wxUniCharRef c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorEqualEqual_0(arg0, arg1);
            return __ret;
        }

        public override bool Equals(object obj)
        {
            return this == obj as wxUniCharRef;
        }

        public override int GetHashCode()
        {
            if (__Instance == global::System.IntPtr.Zero)
                return global::System.IntPtr.Zero.GetHashCode();
            return (*(Internal*) __Instance).GetHashCode();
        }

        public static bool operator ==(wxUniCharRef __op, wxUniChar c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorEqualEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, sbyte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorEqualEqual_2(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, byte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, short c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, ushort c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, int c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, uint c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_7(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, long c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, ulong c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator ==(wxUniCharRef __op, char c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return __opNull && cNull;
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorEqualEqual_12(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, wxUniCharRef c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorExclaimEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, wxUniChar c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorExclaimEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, sbyte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorExclaimEqual_2(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, byte c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, short c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, ushort c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, int c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, uint c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_7(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, long c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, ulong c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef __op, char c)
        {
            bool __opNull = ReferenceEquals(__op, null);
            bool cNull = ReferenceEquals(c, null);
            if (__opNull || cNull)
                return !(__opNull && cNull);
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorExclaimEqual_12(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, wxUniCharRef c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorGreaterEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorGreaterEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorGreaterEqual_2(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_7(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator >=(wxUniCharRef __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreaterEqual_12(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, wxUniCharRef c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorLessEqual_0(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorLessEqual_1(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorLessEqual_2(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_3(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_4(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_5(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_6(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_7(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_10(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_11(arg0, c);
            return __ret;
        }

        public static bool operator <=(wxUniCharRef __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLessEqual_12(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, wxUniCharRef c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorGreater_0(arg0, arg1);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorGreater_1(arg0, arg1);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorGreater_2(arg0, arg1);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_3(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_4(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_5(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_6(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_7(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_10(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_11(arg0, c);
            return __ret;
        }

        public static bool operator >(wxUniCharRef __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorGreater_12(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, wxUniCharRef c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorLess_0(arg0, arg1);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorLess_1(arg0, arg1);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorLess_2(arg0, arg1);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_3(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, short c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_4(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, ushort c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_5(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, int c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_6(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, uint c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_7(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, long c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_10(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, ulong c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_11(arg0, c);
            return __ret;
        }

        public static bool operator <(wxUniCharRef __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorLess_12(arg0, c);
            return __ret;
        }

        public static int operator -(wxUniCharRef __op, wxUniCharRef c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorMinus_0(arg0, arg1);
            return __ret;
        }

        public static int operator -(wxUniCharRef __op, wxUniChar c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            if (ReferenceEquals(c, null))
                throw new global::System.ArgumentNullException("c", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c.__Instance;
            var __ret = Internal.OperatorMinus_1(arg0, arg1);
            return __ret;
        }

        public static int operator -(wxUniCharRef __op, sbyte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var arg1 = c;
            var __ret = Internal.OperatorMinus_2(arg0, arg1);
            return __ret;
        }

        public static int operator -(wxUniCharRef __op, byte c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorMinus_3(arg0, c);
            return __ret;
        }

        public static int operator -(wxUniCharRef __op, char c)
        {
            if (ReferenceEquals(__op, null))
                throw new global::System.ArgumentNullException("__op", "Cannot be null because it is a C++ reference (&).");
            var arg0 = __op.__Instance;
            var __ret = Internal.OperatorMinus_4(arg0, c);
            return __ret;
        }

        public static wxString operator +(wxUniCharRef ch, wxString @string)
        {
            var arg0 = ReferenceEquals(ch, null) ? new wxUniCharRef.Internal() : *(wxUniCharRef.Internal*) (ch.__Instance);
            if (ReferenceEquals(@string, null))
                throw new global::System.ArgumentNullException("@string", "Cannot be null because it is a C++ reference (&).");
            var arg1 = @string.__Instance;
            var __ret = new wxString.Internal();
            Internal.OperatorPlus_0(new IntPtr(&__ret), arg0, arg1);
            return wxString.__CreateInstance(__ret);
        }

        public static bool operator ==(wxUniCharRef c, wxString s)
        {
            bool cNull = ReferenceEquals(c, null);
            bool sNull = ReferenceEquals(s, null);
            if (cNull || sNull)
                return cNull && sNull;
            var arg0 = c.__Instance;
            var arg1 = s.__Instance;
            var __ret = Internal.OperatorEqualEqual_13(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(wxUniCharRef c, wxString s)
        {
            bool cNull = ReferenceEquals(c, null);
            bool sNull = ReferenceEquals(s, null);
            if (cNull || sNull)
                return !(cNull && sNull);
            var arg0 = c.__Instance;
            var arg1 = s.__Instance;
            var __ret = Internal.OperatorExclaimEqual_13(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(sbyte x, wxUniCharRef y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return xNull && yNull;
            var arg0 = x;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorEqualEqual_14(arg0, arg1);
            return __ret;
        }

        public static bool operator !=(sbyte x, wxUniCharRef y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return !(xNull && yNull);
            var arg0 = x;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorExclaimEqual_14(arg0, arg1);
            return __ret;
        }

        public static bool operator >=(sbyte x, wxUniCharRef y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreaterEqual_13(arg0, arg1);
            return __ret;
        }

        public static bool operator <=(sbyte x, wxUniCharRef y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLessEqual_13(arg0, arg1);
            return __ret;
        }

        public static bool operator >(sbyte x, wxUniCharRef y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreater_13(arg0, arg1);
            return __ret;
        }

        public static bool operator <(sbyte x, wxUniCharRef y)
        {
            var arg0 = x;
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLess_13(arg0, arg1);
            return __ret;
        }

        public static bool operator ==(char x, wxUniCharRef y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return xNull && yNull;
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorEqualEqual_15(x, arg1);
            return __ret;
        }

        public static bool operator !=(char x, wxUniCharRef y)
        {
            bool xNull = ReferenceEquals(x, null);
            bool yNull = ReferenceEquals(y, null);
            if (xNull || yNull)
                return !(xNull && yNull);
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorExclaimEqual_15(x, arg1);
            return __ret;
        }

        public static bool operator >=(char x, wxUniCharRef y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreaterEqual_14(x, arg1);
            return __ret;
        }

        public static bool operator <=(char x, wxUniCharRef y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLessEqual_14(x, arg1);
            return __ret;
        }

        public static bool operator >(char x, wxUniCharRef y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorGreater_14(x, arg1);
            return __ret;
        }

        public static bool operator <(char x, wxUniCharRef y)
        {
            if (ReferenceEquals(y, null))
                throw new global::System.ArgumentNullException("y", "Cannot be null because it is a C++ reference (&).");
            var arg1 = y.__Instance;
            var __ret = Internal.OperatorLess_14(x, arg1);
            return __ret;
        }

        public static int operator -(sbyte c1, wxUniCharRef c2)
        {
            var arg0 = c1;
            if (ReferenceEquals(c2, null))
                throw new global::System.ArgumentNullException("c2", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c2.__Instance;
            var __ret = Internal.OperatorMinus_5(arg0, arg1);
            return __ret;
        }

        public static int operator -(char c1, wxUniCharRef c2)
        {
            if (ReferenceEquals(c2, null))
                throw new global::System.ArgumentNullException("c2", "Cannot be null because it is a C++ reference (&).");
            var arg1 = c2.__Instance;
            var __ret = Internal.OperatorMinus_6(c1, arg1);
            return __ret;
        }
    }
}
